// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EHSTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestAPIFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "testAPI.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "testAPI", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "testAPI")))
            {
                EHSTest.TestAPIFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check API login")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void CheckAPILogin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check API login", new string[] {
                        "mytag"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Account-L" +
                    "ogin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I see the text \"POST api/Account/Login\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table1.AddRow(new string[] {
                        "utaricantik",
                        "utaricantik"});
#line 8
 testRunner.And("I input the username and password", ((string)(null)), table1, "And ");
#line 11
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Account/Login\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("get the token", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check API view profile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckAPIViewProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check API view profile", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-User" +
                    "Id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.And("I see the text \"GET api/Users/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table2.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 19
 testRunner.When("I add header with token", ((string)(null)), table2, "When ");
#line 22
 testRunner.And("I input the user Id \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/{UserId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check Edit User API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditUserAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check Edit User API", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Edi" +
                    "t\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("I see the text \"POST api/Users/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table3.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 30
 testRunner.When("I add header with token", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "addressOne",
                        "city",
                        "addreseTwo",
                        "houseNo",
                        "province",
                        "postalCode",
                        "latitude",
                        "logitude",
                        "countryId",
                        "userId",
                        "userName",
                        "firstName",
                        "lastName",
                        "homeNumber",
                        "mobileNumber",
                        "profileDescription",
                        "imageId"});
            table4.AddRow(new string[] {
                        "utaricantik@mailinator.com",
                        "test address 1",
                        "test city",
                        "test address 2",
                        "3",
                        "test province",
                        "12345",
                        "1.0",
                        "1.0",
                        "1",
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "utaricantik",
                        "utari",
                        "cantik",
                        "0987654321",
                        "0987654321",
                        "test desccription",
                        ""});
#line 33
 testRunner.And("I input the user data", ((string)(null)), table4, "And ");
#line 36
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check Edit User API (invalid image Id)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditUserAPIInvalidImageId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check Edit User API (invalid image Id)", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Edi" +
                    "t\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I see the text \"POST api/Users/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table5.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 43
 testRunner.When("I add header with token", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "addressOne",
                        "city",
                        "addreseTwo",
                        "houseNo",
                        "province",
                        "postalCode",
                        "latitude",
                        "logitude",
                        "countryId",
                        "userId",
                        "userName",
                        "firstName",
                        "lastName",
                        "homeNumber",
                        "mobileNumber",
                        "profileDescription",
                        "imageId"});
            table6.AddRow(new string[] {
                        "utaricantik@mailinator.com",
                        "test address 1",
                        "test city",
                        "test address 2",
                        "3",
                        "test province",
                        "12345",
                        "1.0",
                        "1.0",
                        "1",
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "utaricantik",
                        "utari",
                        "cantik",
                        "0987654321",
                        "0987654321",
                        "test desccription",
                        "1234"});
#line 46
 testRunner.And("I input the user data", ((string)(null)), table6, "And ");
#line 49
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check Edit User API (required field is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditUserAPIRequiredFieldIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check Edit User API (required field is empty)", ((string[])(null)));
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Edi" +
                    "t\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I see the text \"POST api/Users/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table7.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 56
 testRunner.When("I add header with token", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "addressOne",
                        "city",
                        "addreseTwo",
                        "houseNo",
                        "province",
                        "postalCode",
                        "latitude",
                        "logitude",
                        "countryId",
                        "userId",
                        "userName",
                        "firstName",
                        "lastName",
                        "homeNumber",
                        "mobileNumber",
                        "profileDescription",
                        "imageId"});
            table8.AddRow(new string[] {
                        "",
                        "test address 1",
                        "test city",
                        "test address 2",
                        "3",
                        "test province",
                        "12345",
                        "1.0",
                        "1.0",
                        "1",
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "utaricantik",
                        "utari",
                        "cantik",
                        "0987654321",
                        "0987654321",
                        "test desccription",
                        "1234"});
#line 59
 testRunner.And("I input the user data", ((string)(null)), table8, "And ");
#line 62
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check Edit Country API (required field is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditCountryAPIRequiredFieldIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check Edit Country API (required field is empty)", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Country-E" +
                    "dit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I see the text \"POST api/Country/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table9.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 69
 testRunner.When("I add header with token", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "countryId",
                        "name",
                        "imageId"});
            table10.AddRow(new string[] {
                        "a",
                        "test",
                        "test"});
#line 72
 testRunner.And("I input the country data", ((string)(null)), table10, "And ");
#line 75
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Country/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review summary API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewSummaryAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review summary API", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table11.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 82
 testRunner.When("I add header with token", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId"});
            table12.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d"});
#line 85
 testRunner.And("I input the user id data", ((string)(null)), table12, "And ");
#line 88
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check save news API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckSaveNewsAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check save news API", ((string[])(null)));
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Save" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.And("I see the text \"POST api/News/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table13.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 95
 testRunner.When("I add header with token", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table14.AddRow(new string[] {
                        "0",
                        "true",
                        "00111FA6-AE83-4ACD-876B-08CF49930CD0",
                        "test",
                        "test",
                        "0",
                        "title",
                        "description",
                        "test",
                        "1"});
#line 98
 testRunner.And("I input the news data", ((string)(null)), table14, "And ");
#line 101
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save news API (data is not valid)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveNewsAPIDataIsNotValid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save news API (data is not valid)", ((string[])(null)));
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Save" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("I see the text \"POST api/News/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table15.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 108
 testRunner.When("I add header with token", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table16.AddRow(new string[] {
                        "1",
                        "true",
                        "3495d798-2793-4fa8-a3b7-71777f3ffa0b",
                        "test",
                        "test",
                        "5",
                        "title",
                        "description",
                        "test",
                        "1"});
#line 111
 testRunner.And("I input the news data", ((string)(null)), table16, "And ");
#line 114
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save news API (required field is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveNewsAPIRequiredFieldIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save news API (required field is empty)", ((string[])(null)));
#line 118
this.ScenarioSetup(scenarioInfo);
#line 119
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Save" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.And("I see the text \"POST api/News/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table17.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 121
 testRunner.When("I add header with token", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table18.AddRow(new string[] {
                        "",
                        "true",
                        "3495d798-2793-4fa8-a3b7-71777f3ffa0b",
                        "test",
                        "test",
                        "0",
                        "title",
                        "description",
                        "test",
                        "1"});
#line 124
 testRunner.And("I input the news data", ((string)(null)), table18, "And ");
#line 127
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check edit news API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckEditNewsAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check edit news API", ((string[])(null)));
#line 131
this.ScenarioSetup(scenarioInfo);
#line 132
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Edit" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
 testRunner.And("I see the text \"POST api/News/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table19.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 134
 testRunner.When("I add header with token", ((string)(null)), table19, "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table20.AddRow(new string[] {
                        "2",
                        "true",
                        "00111FA6-AE83-4ACD-876B-08CF49930CD0",
                        "test",
                        "test",
                        "0",
                        "title",
                        "description",
                        "test",
                        "2"});
#line 137
 testRunner.And("I input the news data", ((string)(null)), table20, "And ");
#line 140
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check edit news API (data is not valid)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditNewsAPIDataIsNotValid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check edit news API (data is not valid)", ((string[])(null)));
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Edit" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.And("I see the text \"POST api/News/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table21.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 147
 testRunner.When("I add header with token", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table22.AddRow(new string[] {
                        "1",
                        "true",
                        "3495d798-2793-4fa8-a3b7-71777f3ffa0b",
                        "test",
                        "test",
                        "5",
                        "title",
                        "description",
                        "test",
                        "1"});
#line 150
 testRunner.And("I input the news data", ((string)(null)), table22, "And ");
#line 153
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 155
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check edit news API (required field is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckEditNewsAPIRequiredFieldIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check edit news API (required field is empty)", ((string[])(null)));
#line 157
this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-News-Edit" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
 testRunner.And("I see the text \"POST api/News/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table23.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 160
 testRunner.When("I add header with token", ((string)(null)), table23, "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "newsId",
                        "isPublished",
                        "coverImage",
                        "createBy",
                        "updateBy",
                        "newsTranslationId",
                        "title",
                        "shortDescription",
                        "contents",
                        "languageId"});
            table24.AddRow(new string[] {
                        "",
                        "true",
                        "3495d798-2793-4fa8-a3b7-71777f3ffa0b",
                        "test",
                        "test",
                        "0",
                        "title",
                        "description",
                        "test",
                        "1"});
#line 163
 testRunner.And("I input the news data", ((string)(null)), table24, "And ");
#line 166
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.Then("The result pop-up should be opened \"Response for POST api/News/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check get language API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckGetLanguageAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check get language API", ((string[])(null)));
#line 170
this.ScenarioSetup(scenarioInfo);
#line 171
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Master-Lan" +
                    "guages\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 172
 testRunner.And("I see the text \"GET api/Master/Languages\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table25.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 173
 testRunner.When("I add header with token", ((string)(null)), table25, "When ");
#line 176
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Master/Languages\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 178
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check news detail API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckNewsDetailAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check news detail API", ((string[])(null)));
#line 180
this.ScenarioSetup(scenarioInfo);
#line 181
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News-Detai" +
                    "l-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.And("I see the text \"GET api/News/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table26.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 183
 testRunner.When("I add header with token", ((string)(null)), table26, "When ");
#line 186
 testRunner.And("I input news id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News/Detail/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 189
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check news detail API(empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckNewsDetailAPIEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check news detail API(empty)", ((string[])(null)));
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News-Detai" +
                    "l-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
 testRunner.And("I see the text \"GET api/News/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table27.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 194
 testRunner.When("I add header with token", ((string)(null)), table27, "When ");
#line 197
 testRunner.And("I input news id \"986545676\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News/Detail/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 200
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check search news API(by title and create date)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSearchNewsAPIByTitleAndCreateDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check search news API(by title and create date)", ((string[])(null)));
#line 202
this.ScenarioSetup(scenarioInfo);
#line 203
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News_Title" +
                    "_CreatedDate_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
 testRunner.And("I see the text \"GET api/News?Title={Title}&CreatedDate={CreatedDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table28.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 205
 testRunner.When("I add header with token", ((string)(null)), table28, "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "createDate"});
            table29.AddRow(new string[] {
                        "test",
                        "2016-06-09"});
#line 208
 testRunner.And("I input search data news", ((string)(null)), table29, "And ");
#line 211
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News?Title={Title}&Creat" +
                    "edDate={CreatedDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirect" +
                    "ion={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 213
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check search news API(by title)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSearchNewsAPIByTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check search news API(by title)", ((string[])(null)));
#line 215
this.ScenarioSetup(scenarioInfo);
#line 216
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News_Title" +
                    "_CreatedDate_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
 testRunner.And("I see the text \"GET api/News?Title={Title}&CreatedDate={CreatedDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table30.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 218
 testRunner.When("I add header with token", ((string)(null)), table30, "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "createDate"});
            table31.AddRow(new string[] {
                        "",
                        "2016-06-09"});
#line 221
 testRunner.And("I input search data news", ((string)(null)), table31, "And ");
#line 224
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News?Title={Title}&Creat" +
                    "edDate={CreatedDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirect" +
                    "ion={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 226
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check search news API(by create date)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSearchNewsAPIByCreateDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check search news API(by create date)", ((string[])(null)));
#line 228
this.ScenarioSetup(scenarioInfo);
#line 229
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News_Title" +
                    "_CreatedDate_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
 testRunner.And("I see the text \"GET api/News?Title={Title}&CreatedDate={CreatedDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table32.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 231
 testRunner.When("I add header with token", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "createDate"});
            table33.AddRow(new string[] {
                        "test",
                        ""});
#line 234
 testRunner.And("I input search data news", ((string)(null)), table33, "And ");
#line 237
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News?Title={Title}&Creat" +
                    "edDate={CreatedDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirect" +
                    "ion={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 239
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete news API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteNewsAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete news API", ((string[])(null)));
#line 241
this.ScenarioSetup(scenarioInfo);
#line 242
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-News-De" +
                    "leteNews-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
 testRunner.And("I see the text \"DELETE api/News/DeleteNews/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table34.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 244
 testRunner.When("I add header with token", ((string)(null)), table34, "When ");
#line 247
 testRunner.And("I input news id \"1001\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/News/DeleteNews/{id}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete news API(invalid news id)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteNewsAPIInvalidNewsId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete news API(invalid news id)", ((string[])(null)));
#line 252
this.ScenarioSetup(scenarioInfo);
#line 253
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-News-De" +
                    "leteNews-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 254
 testRunner.And("I see the text \"DELETE api/News/DeleteNews/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table35.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 255
 testRunner.When("I add header with token", ((string)(null)), table35, "When ");
#line 258
 testRunner.And("I input news id \"99999\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/News/DeleteNews/{id}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 261
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete news translation API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteNewsTranslationAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete news translation API", ((string[])(null)));
#line 263
this.ScenarioSetup(scenarioInfo);
#line 264
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-News-De" +
                    "leteNewsTranslation-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.And("I see the text \"DELETE api/News/DeleteNewsTranslation/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table36.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 266
 testRunner.When("I add header with token", ((string)(null)), table36, "When ");
#line 269
 testRunner.And("I input news translation id \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/News/DeleteNewsTransl" +
                    "ation/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 272
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete news translation API(invalid translation id)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteNewsTranslationAPIInvalidTranslationId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete news translation API(invalid translation id)", ((string[])(null)));
#line 274
this.ScenarioSetup(scenarioInfo);
#line 275
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-News-De" +
                    "leteNewsTranslation-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 276
 testRunner.And("I see the text \"DELETE api/News/DeleteNewsTranslation/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table37.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 277
 testRunner.When("I add header with token", ((string)(null)), table37, "When ");
#line 280
 testRunner.And("I input news translation id \"99999\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/News/DeleteNewsTransl" +
                    "ation/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 283
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check recommendation API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckRecommendationAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check recommendation API", ((string[])(null)));
#line 285
this.ScenarioSetup(scenarioInfo);
#line 286
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Recommendation-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
 testRunner.And("I see the text \"GET api/Listing/Review/Recommendation/{userId}?Offset={Offset}&Li" +
                    "mit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table38.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 288
 testRunner.When("I add header with token", ((string)(null)), table38, "When ");
#line 291
 testRunner.And("I input user Id in recommendation \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Recommend" +
                    "ation/{userId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={O" +
                    "rderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 294
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check recommendation API (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckRecommendationAPIUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check recommendation API (user not logged)", ((string[])(null)));
#line 296
this.ScenarioSetup(scenarioInfo);
#line 297
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Recommendation-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 298
 testRunner.And("I see the text \"GET api/Listing/Review/Recommendation/{userId}?Offset={Offset}&Li" +
                    "mit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 300
 testRunner.And("I input user Id in recommendation \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Recommend" +
                    "ation/{userId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={O" +
                    "rderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 303
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check recommendation API (bad request)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckRecommendationAPIBadRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check recommendation API (bad request)", ((string[])(null)));
#line 305
this.ScenarioSetup(scenarioInfo);
#line 306
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Recommendation-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 307
 testRunner.And("I see the text \"GET api/Listing/Review/Recommendation/{userId}?Offset={Offset}&Li" +
                    "mit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table39.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 308
 testRunner.When("I add header with token", ((string)(null)), table39, "When ");
#line 311
 testRunner.And("I input user Id and bad request in recommendation \"1138c45b-9d40-4a8f-aa01-fe1751" +
                    "8d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Recommend" +
                    "ation/{userId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={O" +
                    "rderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review from me API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewFromMeAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review from me API", ((string[])(null)));
#line 316
this.ScenarioSetup(scenarioInfo);
#line 317
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 318
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table40.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 319
 testRunner.When("I add header with token", ((string)(null)), table40, "When ");
#line 322
 testRunner.And("I input user Id in review from me \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 325
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review from me API (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewFromMeAPIUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review from me API (user not logged)", ((string[])(null)));
#line 327
this.ScenarioSetup(scenarioInfo);
#line 328
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 329
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 331
 testRunner.And("I input user Id in review from me \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 334
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review from me API (bad request)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewFromMeAPIBadRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review from me API (bad request)", ((string[])(null)));
#line 336
this.ScenarioSetup(scenarioInfo);
#line 337
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 338
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table41.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 339
 testRunner.When("I add header with token", ((string)(null)), table41, "When ");
#line 342
 testRunner.And("I input user Id and bad request in review from me \"1138c45b-9d40-4a8f-aa01-fe1751" +
                    "8d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 345
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review for me API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewForMeAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review for me API", ((string[])(null)));
#line 347
this.ScenarioSetup(scenarioInfo);
#line 348
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table42.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 350
 testRunner.When("I add header with token", ((string)(null)), table42, "When ");
#line 353
 testRunner.And("I input user Id in review for me \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 356
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review for me API (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewForMeAPIUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review for me API (user not logged)", ((string[])(null)));
#line 358
this.ScenarioSetup(scenarioInfo);
#line 359
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 362
 testRunner.And("I input user Id in review for me \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 365
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check review for me API (bad request)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckReviewForMeAPIBadRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check review for me API (bad request)", ((string[])(null)));
#line 367
this.ScenarioSetup(scenarioInfo);
#line 368
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 369
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table43.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 370
 testRunner.When("I add header with token", ((string)(null)), table43, "When ");
#line 373
 testRunner.And("I input user Id and bad request in review for me \"1138c45b-9d40-4a8f-aa01-fe17518" +
                    "d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 376
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75040 check delete images API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75040CheckDeleteImagesAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75040 check delete images API", ((string[])(null)));
#line 378
this.ScenarioSetup(scenarioInfo);
#line 379
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-Delete-imageId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 380
 testRunner.And("I see the text \"POST api/Media/Images/Delete/{imageId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table44.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 381
 testRunner.When("I add header with token", ((string)(null)), table44, "When ");
#line 384
 testRunner.And("I input image id \"631304BE-FCCD-4AA3-A14F-01DA51B561CB\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/Delete/{im" +
                    "ageId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 387
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75040 check delete images API failed(incorrect image)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75040CheckDeleteImagesAPIFailedIncorrectImage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75040 check delete images API failed(incorrect image)", ((string[])(null)));
#line 389
this.ScenarioSetup(scenarioInfo);
#line 390
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-Delete-imageId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 391
 testRunner.And("I see the text \"POST api/Media/Images/Delete/{imageId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table45.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 392
 testRunner.When("I add header with token", ((string)(null)), table45, "When ");
#line 395
 testRunner.And("I input image id \"9999999999999999999999999\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/Delete/{im" +
                    "ageId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 398
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75040 check delete images API failed(not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75040CheckDeleteImagesAPIFailedNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75040 check delete images API failed(not logged)", ((string[])(null)));
#line 400
this.ScenarioSetup(scenarioInfo);
#line 401
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-Delete-imageId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 402
 testRunner.And("I see the text \"POST api/Media/Images/Delete/{imageId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 404
 testRunner.And("I input image id \"631304BE-FCCD-4AA3-A14F-01DA51B561CB\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/Delete/{im" +
                    "ageId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 407
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check get news API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckGetNewsAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check get news API", ((string[])(null)));
#line 409
this.ScenarioSetup(scenarioInfo);
#line 410
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News_Title" +
                    "_CreatedDate_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 411
 testRunner.And("I see the text \"GET api/News?Title={Title}&CreatedDate={CreatedDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table46.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 412
 testRunner.When("I add header with token", ((string)(null)), table46, "When ");
#line 415
 testRunner.And("I input get news link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News?Title={Title}&Creat" +
                    "edDate={CreatedDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirect" +
                    "ion={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 418
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check view public profile API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckViewPublicProfileAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check view public profile API", ((string[])(null)));
#line 420
this.ScenarioSetup(scenarioInfo);
#line 421
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-User" +
                    "Id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 422
 testRunner.And("I see the text \"GET api/Users/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table47.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 423
 testRunner.When("I add header with token", ((string)(null)), table47, "When ");
#line 426
 testRunner.And("I input the user Id \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/{UserId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 429
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check view listing detail API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckViewListingDetailAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check view listing detail API", ((string[])(null)));
#line 431
this.ScenarioSetup(scenarioInfo);
#line 432
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table48.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 434
    testRunner.When("I input the user Id", ((string)(null)), table48, "When ");
#line 437
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 439
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check edit generic page API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckEditGenericPageAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check edit generic page API", ((string[])(null)));
#line 441
this.ScenarioSetup(scenarioInfo);
#line 442
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Generic-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 443
 testRunner.And("I see the text \"POST api/StaticPages/Generic/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table49.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 444
 testRunner.When("I add header with token", ((string)(null)), table49, "When ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "type",
                        "active",
                        "slug",
                        "coverImageId",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table50.AddRow(new string[] {
                        "4",
                        "test",
                        "true",
                        "test",
                        "019DDB17-BCE1-4C07-A93F-068684DFDEB4",
                        "test",
                        "test",
                        "4",
                        "test FR",
                        "test FR",
                        "2"});
#line 447
 testRunner.And("I input the generic data page data", ((string)(null)), table50, "And ");
#line 450
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Generic/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 452
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete generic translation API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteGenericTranslationAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete generic translation API", ((string[])(null)));
#line 454
this.ScenarioSetup(scenarioInfo);
#line 455
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-StaticP" +
                    "ages-DeleteGenericTranslation-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 456
 testRunner.And("I see the text \"DELETE api/StaticPages/DeleteGenericTranslation/{id}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table51.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 457
 testRunner.When("I add header with token", ((string)(null)), table51, "When ");
#line 460
 testRunner.And("I input generic translation id \"9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/StaticPages/DeleteGen" +
                    "ericTranslation/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 463
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete generic translation API (failed undifined translation)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteGenericTranslationAPIFailedUndifinedTranslation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete generic translation API (failed undifined translation)", ((string[])(null)));
#line 465
this.ScenarioSetup(scenarioInfo);
#line 466
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-StaticP" +
                    "ages-DeleteGenericTranslation-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 467
 testRunner.And("I see the text \"DELETE api/StaticPages/DeleteGenericTranslation/{id}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table52.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 468
 testRunner.When("I add header with token", ((string)(null)), table52, "When ");
#line 471
 testRunner.And("I input generic translation id \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/StaticPages/DeleteGen" +
                    "ericTranslation/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 474
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete generic API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteGenericAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete generic API", ((string[])(null)));
#line 476
this.ScenarioSetup(scenarioInfo);
#line 477
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-StaticP" +
                    "ages-DeleteGeneric-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 478
 testRunner.And("I see the text \"DELETE api/StaticPages/DeleteGeneric/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table53.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 479
 testRunner.When("I add header with token", ((string)(null)), table53, "When ");
#line 482
 testRunner.And("I input generic id \"5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/StaticPages/DeleteGen" +
                    "eric/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 485
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete generic API (failed undifined generic)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteGenericAPIFailedUndifinedGeneric()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete generic API (failed undifined generic)", ((string[])(null)));
#line 487
this.ScenarioSetup(scenarioInfo);
#line 488
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-StaticP" +
                    "ages-DeleteGeneric-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 489
 testRunner.And("I see the text \"DELETE api/StaticPages/DeleteGeneric/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table54.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 490
 testRunner.When("I add header with token", ((string)(null)), table54, "When ");
#line 493
 testRunner.And("I input generic id \"55\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/StaticPages/DeleteGen" +
                    "eric/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 496
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check delete generic API (failed reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckDeleteGenericAPIFailedReject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check delete generic API (failed reject)", ((string[])(null)));
#line 498
this.ScenarioSetup(scenarioInfo);
#line 499
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-StaticP" +
                    "ages-DeleteGeneric-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 500
 testRunner.And("I see the text \"DELETE api/StaticPages/DeleteGeneric/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table55.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 501
 testRunner.When("I add header with token", ((string)(null)), table55, "When ");
#line 504
 testRunner.And("I input generic id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/StaticPages/DeleteGen" +
                    "eric/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 507
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check latitue and longitude in Edit User API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckLatitueAndLongitudeInEditUserAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check latitue and longitude in Edit User API", ((string[])(null)));
#line 509
this.ScenarioSetup(scenarioInfo);
#line 510
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Edi" +
                    "t\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 511
 testRunner.And("I see the text \"POST api/Users/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "addressOne",
                        "city",
                        "addreseTwo",
                        "houseNo",
                        "province",
                        "postalCode",
                        "latitude",
                        "logitude",
                        "countryId",
                        "userId",
                        "userName",
                        "firstName",
                        "lastName",
                        "homeNumber",
                        "mobileNumber",
                        "profileDescription",
                        "imageId"});
            table56.AddRow(new string[] {
                        "utaricantik@mailinator.com",
                        "test address 1",
                        "test city",
                        "test address 2",
                        "3",
                        "test province",
                        "12345",
                        "1.0",
                        "1.0",
                        "1",
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "utaricantik",
                        "utari",
                        "cantik",
                        "0987654321",
                        "0987654321",
                        "test desccription",
                        ""});
#line 513
 testRunner.And("I input the user data", ((string)(null)), table56, "And ");
#line 516
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 518
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table57.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 519
 testRunner.And("I check view the user data", ((string)(null)), table57, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check view general page detail API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckViewGeneralPageDetailAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check view general page detail API", ((string[])(null)));
#line 523
this.ScenarioSetup(scenarioInfo);
#line 524
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-Generic-Detail-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 525
 testRunner.And("I see the text \"GET api/StaticPages/Generic/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 527
 testRunner.And("I input generic id \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/Generic/Deta" +
                    "il/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 530
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save about Us API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveAboutUsAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save about Us API", ((string[])(null)));
#line 532
this.ScenarioSetup(scenarioInfo);
#line 533
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 534
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table58.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test nl",
                        "test123",
                        "2"});
#line 536
 testRunner.And("I input the generic data page data", ((string)(null)), table58, "And ");
#line 539
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 541
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save about Us API (data is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveAboutUsAPIDataIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save about Us API (data is exist)", ((string[])(null)));
#line 543
this.ScenarioSetup(scenarioInfo);
#line 544
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 545
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 546
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table59.AddRow(new string[] {
                        "0",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 547
 testRunner.And("I input the generic data page data", ((string)(null)), table59, "And ");
#line 550
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 552
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save about Us API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveAboutUsAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save about Us API (translation is exist)", ((string[])(null)));
#line 554
this.ScenarioSetup(scenarioInfo);
#line 555
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 556
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table60.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 558
 testRunner.And("I input the generic data page data", ((string)(null)), table60, "And ");
#line 561
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 562
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 563
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save about Us API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveAboutUsAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save about Us API (language is not exist)", ((string[])(null)));
#line 565
this.ScenarioSetup(scenarioInfo);
#line 566
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 567
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 568
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table61.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "4"});
#line 569
 testRunner.And("I input the generic data page data", ((string)(null)), table61, "And ");
#line 572
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 574
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save about Us API (inactive)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveAboutUsAPIInactive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save about Us API (inactive)", ((string[])(null)));
#line 576
this.ScenarioSetup(scenarioInfo);
#line 577
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 578
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 579
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table62.AddRow(new string[] {
                        "1",
                        "false",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 580
 testRunner.And("I input the generic data page data", ((string)(null)), table62, "And ");
#line 583
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 585
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save term Of Service API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTermOfServiceAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save term Of Service API", ((string[])(null)));
#line 587
 this.ScenarioSetup(scenarioInfo);
#line 588
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-TermOfService-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 589
 testRunner.And("I see the text \"POST api/StaticPages/TermOfService/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table63.AddRow(new string[] {
                        "2",
                        "true",
                        "terms-of-service",
                        "test",
                        "test",
                        "0",
                        "test nl",
                        "test123",
                        "2"});
#line 591
 testRunner.And("I input the generic data page data", ((string)(null)), table63, "And ");
#line 594
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 595
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/TermOfServi" +
                    "ce/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 596
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save term Of Service API (data is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTermOfServiceAPIDataIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save term Of Service API (data is exist)", ((string[])(null)));
#line 598
this.ScenarioSetup(scenarioInfo);
#line 599
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-TermOfService-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 600
 testRunner.And("I see the text \"POST api/StaticPages/TermOfService/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table64.AddRow(new string[] {
                        "0",
                        "true",
                        "terms-of-service",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 602
 testRunner.And("I input the generic data page data", ((string)(null)), table64, "And ");
#line 605
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/TermOfServi" +
                    "ce/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 607
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save term Of Service API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTermOfServiceAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save term Of Service API (translation is exist)", ((string[])(null)));
#line 609
this.ScenarioSetup(scenarioInfo);
#line 610
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-TermOfService-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 611
 testRunner.And("I see the text \"POST api/StaticPages/TermOfService/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 612
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table65.AddRow(new string[] {
                        "2",
                        "true",
                        "terms-of-service",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 613
 testRunner.And("I input the generic data page data", ((string)(null)), table65, "And ");
#line 616
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/TermOfServi" +
                    "ce/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 618
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save term Of Service API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTermOfServiceAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save term Of Service API (language is not exist)", ((string[])(null)));
#line 620
this.ScenarioSetup(scenarioInfo);
#line 621
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-TermOfService-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 622
 testRunner.And("I see the text \"POST api/StaticPages/TermOfService/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table66.AddRow(new string[] {
                        "2",
                        "true",
                        "terms-of-service",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "4"});
#line 624
 testRunner.And("I input the generic data page data", ((string)(null)), table66, "And ");
#line 627
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/TermOfServi" +
                    "ce/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 629
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save term Of Service API (inactive)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTermOfServiceAPIInactive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save term Of Service API (inactive)", ((string[])(null)));
#line 631
this.ScenarioSetup(scenarioInfo);
#line 632
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-TermOfService-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 633
 testRunner.And("I see the text \"POST api/StaticPages/TermOfService/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table67.AddRow(new string[] {
                        "2",
                        "false",
                        "terms-of-service",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 635
 testRunner.And("I input the generic data page data", ((string)(null)), table67, "And ");
#line 638
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/TermOfServi" +
                    "ce/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 640
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save How It Works API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHowItWorksAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save How It Works API", ((string[])(null)));
#line 642
 this.ScenarioSetup(scenarioInfo);
#line 643
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-HowItWorks-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 644
 testRunner.And("I see the text \"POST api/StaticPages/HowItWorks/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table68.AddRow(new string[] {
                        "3",
                        "true",
                        "how-it-works",
                        "test",
                        "test",
                        "0",
                        "test nl",
                        "test123",
                        "2"});
#line 646
 testRunner.And("I input the generic data page data", ((string)(null)), table68, "And ");
#line 649
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 650
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/HowItWorks/" +
                    "Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 651
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save How It Works API (data is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHowItWorksAPIDataIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save How It Works API (data is exist)", ((string[])(null)));
#line 653
this.ScenarioSetup(scenarioInfo);
#line 654
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-HowItWorks-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 655
 testRunner.And("I see the text \"POST api/StaticPages/HowItWorks/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table69.AddRow(new string[] {
                        "0",
                        "true",
                        "how-it-works",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 657
 testRunner.And("I input the generic data page data", ((string)(null)), table69, "And ");
#line 660
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/HowItWorks/" +
                    "Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 662
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save How It Works API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHowItWorksAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save How It Works API (translation is exist)", ((string[])(null)));
#line 664
this.ScenarioSetup(scenarioInfo);
#line 665
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-HowItWorks-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 666
 testRunner.And("I see the text \"POST api/StaticPages/HowItWorks/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table70.AddRow(new string[] {
                        "3",
                        "true",
                        "how-it-works",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 668
 testRunner.And("I input the generic data page data", ((string)(null)), table70, "And ");
#line 671
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 672
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/HowItWorks/" +
                    "Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 673
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save How It Works API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHowItWorksAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save How It Works API (language is not exist)", ((string[])(null)));
#line 675
this.ScenarioSetup(scenarioInfo);
#line 676
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-HowItWorks-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 677
 testRunner.And("I see the text \"POST api/StaticPages/HowItWorks/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table71.AddRow(new string[] {
                        "3",
                        "true",
                        "how-it-works",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "4"});
#line 679
 testRunner.And("I input the generic data page data", ((string)(null)), table71, "And ");
#line 682
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 683
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/HowItWorks/" +
                    "Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 684
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save How It Works API (inactive)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHowItWorksAPIInactive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save How It Works API (inactive)", ((string[])(null)));
#line 686
this.ScenarioSetup(scenarioInfo);
#line 687
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-HowItWorks-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 688
 testRunner.And("I see the text \"POST api/StaticPages/HowItWorks/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 689
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table72.AddRow(new string[] {
                        "3",
                        "false",
                        "how-it-works",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 690
 testRunner.And("I input the generic data page data", ((string)(null)), table72, "And ");
#line 693
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/HowItWorks/" +
                    "Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 695
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save Help API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHelpAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save Help API", ((string[])(null)));
#line 697
 this.ScenarioSetup(scenarioInfo);
#line 698
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Help-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 699
 testRunner.And("I see the text \"POST api/StaticPages/Help/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 700
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table73.AddRow(new string[] {
                        "4",
                        "true",
                        "help",
                        "test",
                        "test",
                        "0",
                        "test nl",
                        "test123",
                        "2"});
#line 701
 testRunner.And("I input the generic data page data", ((string)(null)), table73, "And ");
#line 704
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Help/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 706
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save Help API (data is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHelpAPIDataIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save Help API (data is exist)", ((string[])(null)));
#line 708
this.ScenarioSetup(scenarioInfo);
#line 709
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Help-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 710
 testRunner.And("I see the text \"POST api/StaticPages/Help/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table74.AddRow(new string[] {
                        "0",
                        "true",
                        "help",
                        "test",
                        "test",
                        "0",
                        "test f",
                        "test123",
                        "2"});
#line 712
 testRunner.And("I input the generic data page data", ((string)(null)), table74, "And ");
#line 715
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Help/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 717
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save Help API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHelpAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save Help API (translation is exist)", ((string[])(null)));
#line 719
this.ScenarioSetup(scenarioInfo);
#line 720
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Help-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 721
 testRunner.And("I see the text \"POST api/StaticPages/Help/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 722
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table75.AddRow(new string[] {
                        "4",
                        "true",
                        "help",
                        "test",
                        "test",
                        "0",
                        "test f",
                        "test123",
                        "2"});
#line 723
 testRunner.And("I input the generic data page data", ((string)(null)), table75, "And ");
#line 726
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 727
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Help/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 728
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save Help API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHelpAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save Help API (language is not exist)", ((string[])(null)));
#line 730
this.ScenarioSetup(scenarioInfo);
#line 731
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Help-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 732
 testRunner.And("I see the text \"POST api/StaticPages/Help/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 733
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table76.AddRow(new string[] {
                        "4",
                        "true",
                        "help",
                        "test",
                        "test",
                        "0",
                        "test f",
                        "test123",
                        "4"});
#line 734
 testRunner.And("I input the generic data page data", ((string)(null)), table76, "And ");
#line 737
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 738
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Help/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 739
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save Help API (inactive)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveHelpAPIInactive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save Help API (inactive)", ((string[])(null)));
#line 741
this.ScenarioSetup(scenarioInfo);
#line 742
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Help-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 743
 testRunner.And("I see the text \"POST api/StaticPages/Help/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 744
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table77.AddRow(new string[] {
                        "4",
                        "false",
                        "help",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 745
 testRunner.And("I input the generic data page data", ((string)(null)), table77, "And ");
#line 748
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 749
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Help/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 750
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80333 check save generic page API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80333CheckSaveGenericPageAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80333 check save generic page API", ((string[])(null)));
#line 752
this.ScenarioSetup(scenarioInfo);
#line 753
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Generic-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 754
 testRunner.And("I see the text \"POST api/StaticPages/Generic/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table78.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 755
 testRunner.When("I add header with token", ((string)(null)), table78, "When ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table79.AddRow(new string[] {
                        "0",
                        "true",
                        "test-1234",
                        "test",
                        "test",
                        "0",
                        "test",
                        "test",
                        "2"});
#line 758
 testRunner.And("I input the generic data page data", ((string)(null)), table79, "And ");
#line 761
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 762
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Generic/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 763
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save generic page API (data is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveGenericPageAPIDataIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save generic page API (data is exist)", ((string[])(null)));
#line 765
this.ScenarioSetup(scenarioInfo);
#line 766
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Generic-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 767
 testRunner.And("I see the text \"POST api/StaticPages/Generic/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table80.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 768
 testRunner.When("I add header with token", ((string)(null)), table80, "When ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table81.AddRow(new string[] {
                        "6",
                        "true",
                        "test",
                        "test",
                        "test",
                        "0",
                        "test",
                        "test",
                        "1"});
#line 771
 testRunner.And("I input the generic data page data", ((string)(null)), table81, "And ");
#line 774
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Generic/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 776
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save generic page API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveGenericPageAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save generic page API (translation is exist)", ((string[])(null)));
#line 778
this.ScenarioSetup(scenarioInfo);
#line 779
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Generic-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 780
 testRunner.And("I see the text \"POST api/StaticPages/Generic/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table82.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 781
 testRunner.When("I add header with token", ((string)(null)), table82, "When ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table83.AddRow(new string[] {
                        "6",
                        "true",
                        "test",
                        "test",
                        "test",
                        "0",
                        "test",
                        "test",
                        "2"});
#line 784
 testRunner.And("I input the generic data page data", ((string)(null)), table83, "And ");
#line 787
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 788
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Generic/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 789
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save generic page API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveGenericPageAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save generic page API (language is not exist)", ((string[])(null)));
#line 791
this.ScenarioSetup(scenarioInfo);
#line 792
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-Generic-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 793
 testRunner.And("I see the text \"POST api/StaticPages/Generic/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table84.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 794
 testRunner.When("I add header with token", ((string)(null)), table84, "When ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table85.AddRow(new string[] {
                        "6",
                        "true",
                        "test",
                        "test",
                        "test",
                        "0",
                        "test",
                        "test",
                        "4"});
#line 797
 testRunner.And("I input the generic data page data", ((string)(null)), table85, "And ");
#line 800
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 801
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/Generic/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 802
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75169 check empty mandatory variable")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75169CheckEmptyMandatoryVariable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75169 check empty mandatory variable", ((string[])(null)));
#line 804
this.ScenarioSetup(scenarioInfo);
#line 805
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Media-Imag" +
                    "es-imageId_width_height\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 806
 testRunner.And("I see the text \"GET api/Media/Images/{imageId}?width={width}&height={height}\" in " +
                    "the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table86.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 807
 testRunner.When("I add header with token", ((string)(null)), table86, "When ");
#line 810
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "width",
                        "height"});
            table87.AddRow(new string[] {
                        "",
                        "",
                        ""});
#line 811
 testRunner.And("I input the get image data", ((string)(null)), table87, "And ");
#line 814
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Media/Images/{imageId}?w" +
                    "idth={width}&height={height}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 815
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75169 check invalid data to input")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75169CheckInvalidDataToInput()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75169 check invalid data to input", ((string[])(null)));
#line 817
this.ScenarioSetup(scenarioInfo);
#line 818
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Media-Imag" +
                    "es-imageId_width_height\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 819
 testRunner.And("I see the text \"GET api/Media/Images/{imageId}?width={width}&height={height}\" in " +
                    "the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table88.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 820
 testRunner.When("I add header with token", ((string)(null)), table88, "When ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "width",
                        "height"});
            table89.AddRow(new string[] {
                        "019DDB17-BCE1-4C07-A93F-068684DFDEB4",
                        "",
                        "aaa"});
#line 823
 testRunner.And("I input the get image data", ((string)(null)), table89, "And ");
#line 826
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 827
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Media/Images/{imageId}?w" +
                    "idth={width}&height={height}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 828
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#77837 check Review Summary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _77837CheckReviewSummary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#77837 check Review Summary", ((string[])(null)));
#line 830
this.ScenarioSetup(scenarioInfo);
#line 831
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 832
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table90.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 833
 testRunner.When("I add header with token", ((string)(null)), table90, "When ");
#line 836
 testRunner.And("I input the user Id \"1138c45b-9d40-4a8f-aa01-fe17518d0c2d\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 837
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 839
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73550 search listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73550SearchListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73550 search listing", ((string[])(null)));
#line 841
this.ScenarioSetup(scenarioInfo);
#line 842
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "earch\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 843
 testRunner.And("I see the text \"POST api/Listing/Search\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table91.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 844
 testRunner.When("I add header with token", ((string)(null)), table91, "When ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table92.AddRow(new string[] {
                        "utaricantik",
                        "Indonesia",
                        "2016-07-26",
                        "2016-07-26",
                        "1",
                        "1",
                        "1",
                        "true",
                        "",
                        "0",
                        "10"});
#line 847
 testRunner.And("I input search data listing", ((string)(null)), table92, "And ");
#line 850
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 851
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Search\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 852
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73550 search public")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73550SearchPublic()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73550 search public", ((string[])(null)));
#line 854
this.ScenarioSetup(scenarioInfo);
#line 855
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "earchPublic\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 856
 testRunner.And("I see the text \"POST api/Listing/SearchPublic\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table93.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 857
 testRunner.When("I add header with token", ((string)(null)), table93, "When ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table94.AddRow(new string[] {
                        "utaricantik",
                        "Indonesia",
                        "2016-07-26",
                        "2016-07-26",
                        "1",
                        "1",
                        "1",
                        "true",
                        "",
                        "0",
                        "10"});
#line 860
 testRunner.And("I input search data listing", ((string)(null)), table94, "And ");
#line 863
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 864
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/SearchPublic\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 865
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74357 delete listing photo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74357DeleteListingPhoto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74357 delete listing photo", ((string[])(null)));
#line 867
this.ScenarioSetup(scenarioInfo);
#line 868
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 869
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table95.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 870
 testRunner.When("I add header with token", ((string)(null)), table95, "When ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table96.AddRow(new string[] {
                        "2a54baad-077b-4c5c-af01-f684faca043b",
                        "2"});
#line 873
 testRunner.And("I input image id and listing id", ((string)(null)), table96, "And ");
#line 876
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 877
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 878
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74357 delete listing photo (failed the image is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74357DeleteListingPhotoFailedTheImageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74357 delete listing photo (failed the image is not exist)", ((string[])(null)));
#line 880
this.ScenarioSetup(scenarioInfo);
#line 881
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 882
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table97.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 883
 testRunner.When("I add header with token", ((string)(null)), table97, "When ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table98.AddRow(new string[] {
                        "000000000000",
                        "2"});
#line 886
 testRunner.And("I input image id and listing id", ((string)(null)), table98, "And ");
#line 889
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 890
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 891
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74357 delete listing photo (failed the listing is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74357DeleteListingPhotoFailedTheListingIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74357 delete listing photo (failed the listing is not exist)", ((string[])(null)));
#line 893
this.ScenarioSetup(scenarioInfo);
#line 894
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 895
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table99.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 896
 testRunner.When("I add header with token", ((string)(null)), table99, "When ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table100.AddRow(new string[] {
                        "019ddb17-bce1-4c07-a93f-068684dfdeb4",
                        "000"});
#line 899
 testRunner.And("I input image id and listing id", ((string)(null)), table100, "And ");
#line 902
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 903
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 904
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73611 check all sharing my home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73611CheckAllSharingMyHome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73611 check all sharing my home", ((string[])(null)));
#line 906
this.ScenarioSetup(scenarioInfo);
#line 907
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-Host-userId_Status_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 908
 testRunner.And("I see the text \"GET api/Booking/List/Host/{userId}?Status={Status}&Offset={Offset" +
                    "}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table101.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 909
 testRunner.When("I add header with token", ((string)(null)), table101, "When ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table102.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "All"});
#line 912
 testRunner.And("I input user id and status", ((string)(null)), table102, "And ");
#line 915
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 916
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/Host/{userI" +
                    "d}?Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirectio" +
                    "n={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 917
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73611 check requested sharing my home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73611CheckRequestedSharingMyHome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73611 check requested sharing my home", ((string[])(null)));
#line 919
this.ScenarioSetup(scenarioInfo);
#line 920
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-Host-userId_Status_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 921
 testRunner.And("I see the text \"GET api/Booking/List/Host/{userId}?Status={Status}&Offset={Offset" +
                    "}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table103.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 922
 testRunner.When("I add header with token", ((string)(null)), table103, "When ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table104.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "Requested"});
#line 925
 testRunner.And("I input user id and status", ((string)(null)), table104, "And ");
#line 928
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 929
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/Host/{userI" +
                    "d}?Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirectio" +
                    "n={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 930
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73611 check accepted sharing my home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73611CheckAcceptedSharingMyHome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73611 check accepted sharing my home", ((string[])(null)));
#line 932
this.ScenarioSetup(scenarioInfo);
#line 933
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-Host-userId_Status_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 934
 testRunner.And("I see the text \"GET api/Booking/List/Host/{userId}?Status={Status}&Offset={Offset" +
                    "}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table105.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 935
 testRunner.When("I add header with token", ((string)(null)), table105, "When ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table106.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "Accepted"});
#line 938
 testRunner.And("I input user id and status", ((string)(null)), table106, "And ");
#line 941
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 942
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/Host/{userI" +
                    "d}?Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirectio" +
                    "n={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 943
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73611 check declined sharing my home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73611CheckDeclinedSharingMyHome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73611 check declined sharing my home", ((string[])(null)));
#line 945
this.ScenarioSetup(scenarioInfo);
#line 946
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-Host-userId_Status_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 947
 testRunner.And("I see the text \"GET api/Booking/List/Host/{userId}?Status={Status}&Offset={Offset" +
                    "}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table107.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 948
 testRunner.When("I add header with token", ((string)(null)), table107, "When ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table108.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "Declined"});
#line 951
 testRunner.And("I input user id and status", ((string)(null)), table108, "And ");
#line 954
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 955
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/Host/{userI" +
                    "d}?Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirectio" +
                    "n={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 956
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75172 check save about us change madatory variable")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75172CheckSaveAboutUsChangeMadatoryVariable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75172 check save about us change madatory variable", ((string[])(null)));
#line 958
this.ScenarioSetup(scenarioInfo);
#line 959
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 960
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table109.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 961
 testRunner.When("I add header with token", ((string)(null)), table109, "When ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table110.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test nl",
                        "test123",
                        "2"});
#line 964
 testRunner.And("I input the about us wrong data page data", ((string)(null)), table110, "And ");
#line 967
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 968
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 969
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#79167 check save about Us API (translation is exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _79167CheckSaveAboutUsAPITranslationIsExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#79167 check save about Us API (translation is exist)", ((string[])(null)));
#line 971
this.ScenarioSetup(scenarioInfo);
#line 972
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 973
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table111.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 974
 testRunner.When("I add header with token", ((string)(null)), table111, "When ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table112.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "2"});
#line 977
 testRunner.And("I input the generic data page data", ((string)(null)), table112, "And ");
#line 980
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 981
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 982
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#79167 check save about Us API (language is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _79167CheckSaveAboutUsAPILanguageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#79167 check save about Us API (language is not exist)", ((string[])(null)));
#line 984
this.ScenarioSetup(scenarioInfo);
#line 985
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-StaticPag" +
                    "es-AboutUs-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 986
 testRunner.And("I see the text \"POST api/StaticPages/AboutUs/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table113.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 987
 testRunner.When("I add header with token", ((string)(null)), table113, "When ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "active",
                        "slug",
                        "createBy",
                        "updateBy",
                        "genericContentTranslationId",
                        "title",
                        "contents",
                        "languageId"});
            table114.AddRow(new string[] {
                        "1",
                        "true",
                        "about-us",
                        "test",
                        "test",
                        "0",
                        "test fr",
                        "test123",
                        "4"});
#line 990
 testRunner.And("I input the generic data page data", ((string)(null)), table114, "And ");
#line 993
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 994
 testRunner.Then("The result pop-up should be opened \"Response for POST api/StaticPages/AboutUs/Sav" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 995
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73600 check verification email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73600CheckVerificationEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73600 check verification email", ((string[])(null)));
#line 997
this.ScenarioSetup(scenarioInfo);
#line 998
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-Email-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 999
 testRunner.And("I see the text \"GET api/Verification/Email/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table115.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1000
 testRunner.When("I add header with token", ((string)(null)), table115, "When ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table116.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "Email"});
#line 1003
 testRunner.And("I input the email verification data", ((string)(null)), table116, "And ");
#line 1006
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1007
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/Email/{user" +
                    "Id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1008
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73600 check send verification email (failed user is not registered)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73600CheckSendVerificationEmailFailedUserIsNotRegistered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73600 check send verification email (failed user is not registered)", ((string[])(null)));
#line 1010
this.ScenarioSetup(scenarioInfo);
#line 1011
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-Email-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1012
 testRunner.And("I see the text \"GET api/Verification/Email/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table117.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1013
 testRunner.When("I add header with token", ((string)(null)), table117, "When ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table118.AddRow(new string[] {
                        "oiuytre867rj7ij6jjjjlkjhgfdhgfkjhgfd",
                        "Email"});
#line 1016
 testRunner.And("I input the email verification data", ((string)(null)), table118, "And ");
#line 1019
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1020
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/Email/{user" +
                    "Id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1021
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73600 check send verification email (failed user is not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73600CheckSendVerificationEmailFailedUserIsNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73600 check send verification email (failed user is not logged)", ((string[])(null)));
#line 1023
this.ScenarioSetup(scenarioInfo);
#line 1024
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-Email-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1025
 testRunner.And("I see the text \"GET api/Verification/Email/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1026
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "status"});
            table119.AddRow(new string[] {
                        "1138c45b-9d40-4a8f-aa01-fe17518d0c2d",
                        "Email"});
#line 1027
 testRunner.And("I input the email verification data", ((string)(null)), table119, "And ");
#line 1030
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1031
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/Email/{user" +
                    "Id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1032
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73603 check confrimation verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73603CheckConfrimationVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73603 check confrimation verification", ((string[])(null)));
#line 1034
this.ScenarioSetup(scenarioInfo);
#line 1035
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Confirmation-token_status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1036
 testRunner.And("I see the text \"POST api/Verification/Confirmation/{token}?status={status}\" in th" +
                    "e page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table120.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1037
 testRunner.When("I add header with token", ((string)(null)), table120, "When ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "token",
                        "status"});
            table121.AddRow(new string[] {
                        "595851c7dd6f404ea2716bf989b155fe",
                        "Email"});
#line 1040
 testRunner.And("I input the confrimation verification data", ((string)(null)), table121, "And ");
#line 1043
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1044
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Confirmati" +
                    "on/{token}?status={status}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1045
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#76302 check change password API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _76302CheckChangePasswordAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#76302 check change password API", ((string[])(null)));
#line 1047
this.ScenarioSetup(scenarioInfo);
#line 1048
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Account-C" +
                    "hangePassword-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1049
 testRunner.And("I see the text \"POST api/Account/ChangePassword/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table122.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1050
 testRunner.When("I add header with token", ((string)(null)), table122, "When ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "oldPassword",
                        "newPassword"});
            table123.AddRow(new string[] {
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucu12345",
                        "lucubanget"});
#line 1053
 testRunner.And("I data for change password", ((string)(null)), table123, "And ");
#line 1056
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1057
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Account/ChangePassword/" +
                    "{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1058
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80551 get generic content by slug")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80551GetGenericContentBySlug()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80551 get generic content by slug", ((string[])(null)));
#line 1060
this.ScenarioSetup(scenarioInfo);
#line 1061
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-Generic-slug\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1062
 testRunner.And("I see the text \"GET api/StaticPages/Generic/{slug}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1063
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1064
 testRunner.And("I input the slug \"help\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1065
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1066
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/Generic/{slu" +
                    "g}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1067
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80551 get generic content by slug (the slug is not found)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80551GetGenericContentBySlugTheSlugIsNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80551 get generic content by slug (the slug is not found)", ((string[])(null)));
#line 1069
this.ScenarioSetup(scenarioInfo);
#line 1070
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-Generic-slug\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1071
 testRunner.And("I see the text \"GET api/StaticPages/Generic/{slug}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1072
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1073
 testRunner.And("I input the slug \"thsgdhjyyegfffdfegwfytwyftwyffgudfgtw\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1074
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1075
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/Generic/{slu" +
                    "g}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1076
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73642 view list of testimonial (all)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73642ViewListOfTestimonialAll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73642 view list of testimonial (all)", ((string[])(null)));
#line 1078
this.ScenarioSetup(scenarioInfo);
#line 1079
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-Manages_Approval_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1080
 testRunner.And("I see the text \"GET api/Testimonial/Manages?Approval={Approval}&Offset={Offset}&L" +
                    "imit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table124.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1081
 testRunner.When("I add header with token", ((string)(null)), table124, "When ");
#line 1084
 testRunner.And("I input the testimonial url \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1085
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1086
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/Manages?Appr" +
                    "oval={Approval}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={" +
                    "OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1087
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73642 view list of testimonial (approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73642ViewListOfTestimonialApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73642 view list of testimonial (approved)", ((string[])(null)));
#line 1089
this.ScenarioSetup(scenarioInfo);
#line 1090
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-Manages_Approval_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1091
 testRunner.And("I see the text \"GET api/Testimonial/Manages?Approval={Approval}&Offset={Offset}&L" +
                    "imit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table125.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1092
 testRunner.When("I add header with token", ((string)(null)), table125, "When ");
#line 1095
 testRunner.And("I input the testimonial url \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1096
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1097
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/Manages?Appr" +
                    "oval={Approval}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={" +
                    "OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1098
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73642 view list of testimonial (not approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73642ViewListOfTestimonialNotApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73642 view list of testimonial (not approved)", ((string[])(null)));
#line 1100
this.ScenarioSetup(scenarioInfo);
#line 1101
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-Manages_Approval_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1102
 testRunner.And("I see the text \"GET api/Testimonial/Manages?Approval={Approval}&Offset={Offset}&L" +
                    "imit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table126.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1103
 testRunner.When("I add header with token", ((string)(null)), table126, "When ");
#line 1106
 testRunner.And("I input the testimonial url \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1107
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1108
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/Manages?Appr" +
                    "oval={Approval}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={" +
                    "OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1109
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73642 view list of testimonial (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73642ViewListOfTestimonialUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73642 view list of testimonial (user not logged)", ((string[])(null)));
#line 1111
this.ScenarioSetup(scenarioInfo);
#line 1112
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-Manages_Approval_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1113
 testRunner.And("I see the text \"GET api/Testimonial/Manages?Approval={Approval}&Offset={Offset}&L" +
                    "imit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1114
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1115
 testRunner.And("I input the testimonial url \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1116
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1117
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/Manages?Appr" +
                    "oval={Approval}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={" +
                    "OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1118
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74339 check user verifications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74339CheckUserVerifications()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74339 check user verifications", ((string[])(null)));
#line 1120
this.ScenarioSetup(scenarioInfo);
#line 1121
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-User-UserId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1122
 testRunner.And("I see the text \"GET api/Verification/User/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table127.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1123
 testRunner.When("I add header with token", ((string)(null)), table127, "When ");
#line 1126
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1127
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1128
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/User/{UserI" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1129
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74339 check user verifications (user not registered)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74339CheckUserVerificationsUserNotRegistered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74339 check user verifications (user not registered)", ((string[])(null)));
#line 1131
this.ScenarioSetup(scenarioInfo);
#line 1132
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-User-UserId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1133
 testRunner.And("I see the text \"GET api/Verification/User/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table128.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1134
 testRunner.When("I add header with token", ((string)(null)), table128, "When ");
#line 1137
 testRunner.And("I input the user Id \"qwertyuioplkjhgfdsacvbnmkjhgfert\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1138
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1139
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/User/{UserI" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1140
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74339 check user verifications (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74339CheckUserVerificationsUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74339 check user verifications (user not logged)", ((string[])(null)));
#line 1142
this.ScenarioSetup(scenarioInfo);
#line 1143
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-User-UserId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1144
 testRunner.And("I see the text \"GET api/Verification/User/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1145
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1146
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1147
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1148
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/User/{UserI" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1149
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73596 check delete account failed (password is wrong)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73596CheckDeleteAccountFailedPasswordIsWrong()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73596 check delete account failed (password is wrong)", ((string[])(null)));
#line 1151
this.ScenarioSetup(scenarioInfo);
#line 1152
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1153
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "passwordverification"});
            table129.AddRow(new string[] {
                        "korycantik",
                        "password",
                        "1234567890"});
#line 1154
 testRunner.When("I input the user to delete", ((string)(null)), table129, "When ");
#line 1157
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1158
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1159
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73596 check delete account failed (username is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73596CheckDeleteAccountFailedUsernameIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73596 check delete account failed (username is not exist)", ((string[])(null)));
#line 1161
this.ScenarioSetup(scenarioInfo);
#line 1162
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1163
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "passwordverification"});
            table130.AddRow(new string[] {
                        "12345678",
                        "password",
                        "password"});
#line 1164
 testRunner.When("I input the user to delete", ((string)(null)), table130, "When ");
#line 1167
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1168
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1169
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73596 check delete account failed (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73596CheckDeleteAccountFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73596 check delete account failed (user not logged)", ((string[])(null)));
#line 1171
this.ScenarioSetup(scenarioInfo);
#line 1172
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1173
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1174
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "password"});
            table131.AddRow(new string[] {
                        "662f23dd-a770-45ec-9259-e0fda3a429ac",
                        "password"});
#line 1175
 testRunner.And("I input the userdata to delete", ((string)(null)), table131, "And ");
#line 1178
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1179
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1180
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73596 check delete account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73596CheckDeleteAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73596 check delete account", ((string[])(null)));
#line 1182
this.ScenarioSetup(scenarioInfo);
#line 1183
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1184
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "passwordverification"});
            table132.AddRow(new string[] {
                        "korycantik",
                        "password",
                        "password"});
#line 1185
 testRunner.When("I input the user to delete", ((string)(null)), table132, "When ");
#line 1188
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1189
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1190
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("check save testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void CheckSaveTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check save testimonial", ((string[])(null)));
#line 1192
this.ScenarioSetup(scenarioInfo);
#line 1193
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1194
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table133.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1195
 testRunner.When("I add header with token", ((string)(null)), table133, "When ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "Id",
                        "UserId",
                        "UserName",
                        "FirstName",
                        "LastName",
                        "ShortDescription",
                        "Description",
                        "ApprovedDate",
                        "CreatedDate"});
            table134.AddRow(new string[] {
                        "0",
                        "0",
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucubanget",
                        "utari",
                        "cantik",
                        "test desc",
                        "decs",
                        "2016-08-05T06:14:23.9108913 02:00",
                        "2016-08-05T06:14:23.9108913 02:00"});
#line 1198
 testRunner.And("I input the testimonial data", ((string)(null)), table134, "And ");
#line 1201
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1202
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1203
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74889 check view public content")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74889CheckViewPublicContent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74889 check view public content", ((string[])(null)));
#line 1205
this.ScenarioSetup(scenarioInfo);
#line 1206
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-Generic-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1207
 testRunner.And("I see the text \"GET api/StaticPages/Generic/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1208
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1209
 testRunner.And("I input the testimonial id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1210
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1211
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/Generic/{id}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1212
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74889 check view public content(not found)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74889CheckViewPublicContentNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74889 check view public content(not found)", ((string[])(null)));
#line 1214
this.ScenarioSetup(scenarioInfo);
#line 1215
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-Generic-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1216
 testRunner.And("I see the text \"GET api/StaticPages/Generic/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1217
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1218
 testRunner.And("I input the testimonial id \"9754\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1219
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1220
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/Generic/{id}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1221
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73476 check user dashboard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73476CheckUserDashboard()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73476 check user dashboard", ((string[])(null)));
#line 1223
this.ScenarioSetup(scenarioInfo);
#line 1224
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Dash" +
                    "board-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1225
 testRunner.And("I see the text \"GET api/Users/Dashboard/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table135.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1226
 testRunner.When("I add header with token", ((string)(null)), table135, "When ");
#line 1229
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1230
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1231
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Dashboard/{userId}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1232
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73476 check user dashboard (failed the user idd is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73476CheckUserDashboardFailedTheUserIddIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73476 check user dashboard (failed the user idd is not exist)", ((string[])(null)));
#line 1234
this.ScenarioSetup(scenarioInfo);
#line 1235
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Dash" +
                    "board-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1236
 testRunner.And("I see the text \"GET api/Users/Dashboard/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table136.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1237
 testRunner.When("I add header with token", ((string)(null)), table136, "When ");
#line 1240
 testRunner.And("I input the user Id \"1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1241
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1242
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Dashboard/{userId}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1243
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80240 check view public listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80240CheckViewPublicListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80240 check view public listing", ((string[])(null)));
#line 1245
this.ScenarioSetup(scenarioInfo);
#line 1246
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Vi" +
                    "ew-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1247
 testRunner.And("I see the text \"GET api/Listing/View/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table137.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1248
 testRunner.When("I add header with token", ((string)(null)), table137, "When ");
#line 1251
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1252
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1253
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/View/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1254
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80240 check view public listing (failed user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80240CheckViewPublicListingFailedUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80240 check view public listing (failed user id is not exist)", ((string[])(null)));
#line 1256
this.ScenarioSetup(scenarioInfo);
#line 1257
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Vi" +
                    "ew-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1258
 testRunner.And("I see the text \"GET api/Listing/View/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table138.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1259
 testRunner.When("I add header with token", ((string)(null)), table138, "When ");
#line 1262
 testRunner.And("I input the user Id \"1234567890e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1263
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1264
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/View/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1265
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80240 check view public listing (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80240CheckViewPublicListingFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80240 check view public listing (failed user not logged)", ((string[])(null)));
#line 1267
this.ScenarioSetup(scenarioInfo);
#line 1268
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Vi" +
                    "ew-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1269
 testRunner.And("I see the text \"GET api/Listing/View/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1270
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1271
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1272
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1273
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/View/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1274
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74886 check view page list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74886CheckViewPageList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74886 check view page list", ((string[])(null)));
#line 1276
this.ScenarioSetup(scenarioInfo);
#line 1277
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-All_Title_Slug_PublishedDate_SearchValue_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1278
 testRunner.And("I see the text \"GET api/StaticPages/All?Title={Title}&Slug={Slug}&PublishedDate={" +
                    "PublishedDate}&SearchValue={SearchValue}&Offset={Offset}&Limit={Limit}&OrderBy={" +
                    "OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table139.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1279
 testRunner.When("I add header with token", ((string)(null)), table139, "When ");
#line 1282
 testRunner.And("I input the page list url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1283
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1284
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/All?Title={T" +
                    "itle}&Slug={Slug}&PublishedDate={PublishedDate}&SearchValue={SearchValue}&Offset" +
                    "={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1285
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74980 check unshare listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74980CheckUnshareListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74980 check unshare listing", ((string[])(null)));
#line 1287
this.ScenarioSetup(scenarioInfo);
#line 1288
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-U" +
                    "nshareListing-listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1289
 testRunner.And("I see the text \"POST api/Listing/UnshareListing/{listingId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table140.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1290
 testRunner.When("I add header with token", ((string)(null)), table140, "When ");
#line 1293
 testRunner.And("I input the listing id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1294
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1295
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/UnshareListing/" +
                    "{listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1296
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74980 check unshare listing (listing id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74980CheckUnshareListingListingIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74980 check unshare listing (listing id is not exist)", ((string[])(null)));
#line 1298
this.ScenarioSetup(scenarioInfo);
#line 1299
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-U" +
                    "nshareListing-listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1300
 testRunner.And("I see the text \"POST api/Listing/UnshareListing/{listingId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table141.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1301
 testRunner.When("I add header with token", ((string)(null)), table141, "When ");
#line 1304
 testRunner.And("I input the listing id \"12345709876\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1305
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1306
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/UnshareListing/" +
                    "{listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1307
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74980 check unshare listing (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74980CheckUnshareListingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74980 check unshare listing (user not logged)", ((string[])(null)));
#line 1309
this.ScenarioSetup(scenarioInfo);
#line 1310
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-U" +
                    "nshareListing-listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1311
 testRunner.And("I see the text \"POST api/Listing/UnshareListing/{listingId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1312
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1313
 testRunner.And("I input the listing id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1314
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1315
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/UnshareListing/" +
                    "{listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1316
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73650 check get all user (not input the data)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73650CheckGetAllUserNotInputTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73650 check get all user (not input the data)", ((string[])(null)));
#line 1318
this.ScenarioSetup(scenarioInfo);
#line 1319
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users_Firs" +
                    "tName_LastName_Email_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1320
 testRunner.And("I see the text \"GET api/Users?FirstName={FirstName}&LastName={LastName}&Email={Em" +
                    "ail}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirect" +
                    "ion}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table142.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1321
 testRunner.When("I add header with token", ((string)(null)), table142, "When ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "lastName",
                        "email",
                        "offset",
                        "limit",
                        "orderBy",
                        "orderDirection"});
            table143.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1324
 testRunner.And("I input the user for filter data", ((string)(null)), table143, "And ");
#line 1327
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1328
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users?FirstName={FirstNa" +
                    "me}&LastName={LastName}&Email={Email}&Offset={Offset}&Limit={Limit}&OrderBy={Ord" +
                    "erBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1329
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73650 check get user data (input the data)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73650CheckGetUserDataInputTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73650 check get user data (input the data)", ((string[])(null)));
#line 1331
this.ScenarioSetup(scenarioInfo);
#line 1332
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users_Firs" +
                    "tName_LastName_Email_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1333
 testRunner.And("I see the text \"GET api/Users?FirstName={FirstName}&LastName={LastName}&Email={Em" +
                    "ail}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirect" +
                    "ion}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table144.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1334
 testRunner.When("I add header with token", ((string)(null)), table144, "When ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "lastName",
                        "email",
                        "offset",
                        "limit",
                        "orderBy",
                        "orderDirection"});
            table145.AddRow(new string[] {
                        "utari",
                        "cantik",
                        "lucubanget@mailinator.com",
                        "0",
                        "5",
                        "",
                        ""});
#line 1337
 testRunner.And("I input the user for filter data", ((string)(null)), table145, "And ");
#line 1340
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1341
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users?FirstName={FirstNa" +
                    "me}&LastName={LastName}&Email={Email}&Offset={Offset}&Limit={Limit}&OrderBy={Ord" +
                    "erBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1342
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73601 check facebook verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73601CheckFacebookVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73601 check facebook verification", ((string[])(null)));
#line 1344
this.ScenarioSetup(scenarioInfo);
#line 1345
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1346
 testRunner.And("I see the text \"POST api/Verification/Facebook\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table146.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1347
 testRunner.When("I add header with token", ((string)(null)), table146, "When ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "accessToken",
                        "expireIn",
                        "signedRequest",
                        "userID"});
            table147.AddRow(new string[] {
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "EAAP53HQGjGoBALSrAmhvfudQt8VkfZBIeLBZAoYnsO1vg1GfhtdzhaglykuohH2rDK2JgXGfK5wDACHd" +
                            "yTh3pzMUqi3bVYAfsTxBrhnE6B1EwmAeRfoMKBSoOZCvJKZAMCZB0hpc4kxKrVkmFYlwecJNqsw6dbXG" +
                            "hCKZCmo5fRDZAsxKkp8uQ2I",
                        "6749",
                        @"K10h3mKoN2rSRfA4788g_HpqOqbRG5rVPcSioloVq6I.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUNEd05xZDJHUzZTMHgwbmlOa1I4Q1hQOWgyTEhoNDQxdHdZc2w3eVdjOXZmbUIyZHhKZUtpUGs2WVk1dnVGMjlDdEVpQV8yUERWWU5kakJRQ3NGUWs2T0VQbGt1N3ppTE1XZ3NwVU16RjAzY1FKQnB4TnJLSVNwQ01DR0JRVElzaVhvQUJBUzVFUFhLbzhPUkw2UENtc04zNlNTNXBGLVJxQWFuc3JXRmhrbWtKS21sZDc4dFkzaG1Mem1OZ0wydjNDQXVyZ0VCRTR5TmIxbTNKcS1TU09MbjIyWWN5Mi1PbFNSN2NKQ0hESGZYNUxPdEdDZFpycjZUMHZZX2UzQlhKckQyUDRGcFQ5WGJVeC10eHR4V1JKM2lYLVpNOUZqR2hSLTlYaE50M2QyQVBsQmpWa1lNMzRPaHMwOEx4bmVzbV9XOFJMeVBwR1MyNk5fRFBuMGFSeiIsImlzc3VlZF9hdCI6MTQ3MDczMDA1MSwidXNlcl9pZCI6IjEyMjA1ODI1ODIzODcwNiJ9",
                        "122058258238706"});
#line 1350
 testRunner.And("I input the user data for fb verification", ((string)(null)), table147, "And ");
#line 1353
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1354
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1355
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73601 check facebook verification (friend less than 50)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73601CheckFacebookVerificationFriendLessThan50()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73601 check facebook verification (friend less than 50)", ((string[])(null)));
#line 1357
this.ScenarioSetup(scenarioInfo);
#line 1358
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1359
 testRunner.And("I see the text \"POST api/Verification/Facebook\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table148.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1360
 testRunner.When("I add header with token", ((string)(null)), table148, "When ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "accessToken",
                        "expireIn",
                        "signedRequest",
                        "userID"});
            table149.AddRow(new string[] {
                        "61348e26-fa5a-4cd5-9d73-a97922a94920",
                        "EAAP53HQGjGoBAGLqFKCtLErBFE3PNcv39KEHvzjjueaHBxNeSSSFvEbAoipaOGFZAtqOUoYiy2ZADyTW" +
                            "jeaCJjZAIprocfLZCh53qduoka5SkozISL35thhuei74EaoKOQFT1QYrjZAL2sR1gDwx3QJN6H94yJAL" +
                            "8heBPYgXJ1HQqCsZCzxj0y",
                        "6890",
                        @"k_d-hSX0Rm1tlpA750h2HWoDBfX5Vi9r4Fa6YaRibJI.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUJvUW14VG1WYzJNMEYtSTEtUDl6V3o4bTRWR2EwdVVqUzFwd3Q0NklPSWVMdHo2eGNtbUFSUGJSSTFGMDFrRGJaX0Z1OFhfV3ZYZFFvTkJaYkkyYUlSWi1YSVRvOFF5UU5tQnVVaTJfSDRkSmt4V3dYYWRZY1NMZmVOVG9uVTBTUHJfeW5EeXdSSjZudTlneEVyRlhiS0FpTnIzRnFma0hWSGk3T3dWaXl6SU9pRVpma3diVzYtQmNDaWg4b2tBZkplN1h6V3ZmMC1QbTZIYlpwdHRWSnk5V0hISWNBcFR2T2lBUFhRQTI4WTBXaTRKU3RLRDBVUVVQYUZ3TjhNakl6TlZwelZNVldRMWFLRHFHcG1peFRUbUhnSlFpVUVMMThCSlBjZXZwUG9DbkpyYVU5ekRueF9lYTFYWEtCcXAzejJjZTY2OWEtenFxSGVtTk9WdWFBbyIsImlzc3VlZF9hdCI6MTQ3MDcyOTkxMCwidXNlcl9pZCI6IjExOTcyNjIwODQ2NzQ4MiJ9",
                        "119726208467482"});
#line 1363
 testRunner.And("I input the user data for fb verification", ((string)(null)), table149, "And ");
#line 1366
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1367
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1368
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73601 check facebook verification (user not found)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73601CheckFacebookVerificationUserNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73601 check facebook verification (user not found)", ((string[])(null)));
#line 1370
this.ScenarioSetup(scenarioInfo);
#line 1371
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1372
 testRunner.And("I see the text \"POST api/Verification/Facebook\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table150.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1373
 testRunner.When("I add header with token", ((string)(null)), table150, "When ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "accessToken",
                        "expireIn",
                        "signedRequest",
                        "userID"});
            table151.AddRow(new string[] {
                        "61348e26-fa5a-4cd5-9d73-111111111111",
                        "EAAP53HQGjGoBAGLqFKCtLErBFE3PNcv39KEHvzjjueaHBxNeSSSFvEbAoipaOGFZAtqOUoYiy2ZADyTW" +
                            "jeaCJjZAIprocfLZCh53qduoka5SkozISL35thhuei74EaoKOQFT1QYrjZAL2sR1gDwx3QJN6H94yJAL" +
                            "8heBPYgXJ1HQqCsZCzxj0y",
                        "6890",
                        @"k_d-hSX0Rm1tlpA750h2HWoDBfX5Vi9r4Fa6YaRibJI.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUJvUW14VG1WYzJNMEYtSTEtUDl6V3o4bTRWR2EwdVVqUzFwd3Q0NklPSWVMdHo2eGNtbUFSUGJSSTFGMDFrRGJaX0Z1OFhfV3ZYZFFvTkJaYkkyYUlSWi1YSVRvOFF5UU5tQnVVaTJfSDRkSmt4V3dYYWRZY1NMZmVOVG9uVTBTUHJfeW5EeXdSSjZudTlneEVyRlhiS0FpTnIzRnFma0hWSGk3T3dWaXl6SU9pRVpma3diVzYtQmNDaWg4b2tBZkplN1h6V3ZmMC1QbTZIYlpwdHRWSnk5V0hISWNBcFR2T2lBUFhRQTI4WTBXaTRKU3RLRDBVUVVQYUZ3TjhNakl6TlZwelZNVldRMWFLRHFHcG1peFRUbUhnSlFpVUVMMThCSlBjZXZwUG9DbkpyYVU5ekRueF9lYTFYWEtCcXAzejJjZTY2OWEtenFxSGVtTk9WdWFBbyIsImlzc3VlZF9hdCI6MTQ3MDcyOTkxMCwidXNlcl9pZCI6IjExOTcyNjIwODQ2NzQ4MiJ9",
                        "119726208467482"});
#line 1376
 testRunner.And("I input the user data for fb verification", ((string)(null)), table151, "And ");
#line 1379
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1380
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1381
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73601 check facebook verification (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73601CheckFacebookVerificationUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73601 check facebook verification (user not logged)", ((string[])(null)));
#line 1383
this.ScenarioSetup(scenarioInfo);
#line 1384
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1385
 testRunner.And("I see the text \"POST api/Verification/Facebook\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1386
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "accessToken",
                        "expireIn",
                        "signedRequest",
                        "userID"});
            table152.AddRow(new string[] {
                        "61348e26-fa5a-4cd5-9d73-111111111111",
                        "EAAP53HQGjGoBAGLqFKCtLErBFE3PNcv39KEHvzjjueaHBxNeSSSFvEbAoipaOGFZAtqOUoYiy2ZADyTW" +
                            "jeaCJjZAIprocfLZCh53qduoka5SkozISL35thhuei74EaoKOQFT1QYrjZAL2sR1gDwx3QJN6H94yJAL" +
                            "8heBPYgXJ1HQqCsZCzxj0y",
                        "6890",
                        @"k_d-hSX0Rm1tlpA750h2HWoDBfX5Vi9r4Fa6YaRibJI.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUJvUW14VG1WYzJNMEYtSTEtUDl6V3o4bTRWR2EwdVVqUzFwd3Q0NklPSWVMdHo2eGNtbUFSUGJSSTFGMDFrRGJaX0Z1OFhfV3ZYZFFvTkJaYkkyYUlSWi1YSVRvOFF5UU5tQnVVaTJfSDRkSmt4V3dYYWRZY1NMZmVOVG9uVTBTUHJfeW5EeXdSSjZudTlneEVyRlhiS0FpTnIzRnFma0hWSGk3T3dWaXl6SU9pRVpma3diVzYtQmNDaWg4b2tBZkplN1h6V3ZmMC1QbTZIYlpwdHRWSnk5V0hISWNBcFR2T2lBUFhRQTI4WTBXaTRKU3RLRDBVUVVQYUZ3TjhNakl6TlZwelZNVldRMWFLRHFHcG1peFRUbUhnSlFpVUVMMThCSlBjZXZwUG9DbkpyYVU5ekRueF9lYTFYWEtCcXAzejJjZTY2OWEtenFxSGVtTk9WdWFBbyIsImlzc3VlZF9hdCI6MTQ3MDcyOTkxMCwidXNlcl9pZCI6IjExOTcyNjIwODQ2NzQ4MiJ9",
                        "119726208467482"});
#line 1387
 testRunner.And("I input the user data for fb verification", ((string)(null)), table152, "And ");
#line 1390
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1391
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Facebook\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1392
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check school verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckSchoolVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check school verification", ((string[])(null)));
#line 1394
this.ScenarioSetup(scenarioInfo);
#line 1395
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1396
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table153.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 1397
 testRunner.When("I add header with token", ((string)(null)), table153, "When ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verSchoolPhone",
                        "verContactPerson",
                        "verContactEmail",
                        "verContactPhone"});
            table154.AddRow(new string[] {
                        "35de925a-5a29-4fed-9a07-ff4f128a0beb",
                        "kim woo bin",
                        "kimwoobin@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "test",
                        "smacontactemail@mailinator.com",
                        "0987654321"});
#line 1400
 testRunner.And("I input the user data for school verification", ((string)(null)), table154, "And ");
#line 1403
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1404
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1405
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check school verification (failed user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckSchoolVerificationFailedUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check school verification (failed user not exist)", ((string[])(null)));
#line 1407
this.ScenarioSetup(scenarioInfo);
#line 1408
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1409
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table155.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1410
 testRunner.When("I add header with token", ((string)(null)), table155, "When ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "educatorStatus"});
            table156.AddRow(new string[] {
                        "71a9424f-e9fb-4563-b4d4-111111111111",
                        "utari",
                        "lucubanget@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "1"});
#line 1413
 testRunner.And("I input the user data for school verification", ((string)(null)), table156, "And ");
#line 1416
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1417
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1418
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check school verification (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckSchoolVerificationFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check school verification (failed user not logged)", ((string[])(null)));
#line 1420
this.ScenarioSetup(scenarioInfo);
#line 1421
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1422
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1423
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "educatorStatus"});
            table157.AddRow(new string[] {
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "utari",
                        "lucubanget@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "1"});
#line 1424
 testRunner.And("I input the user data for school verification", ((string)(null)), table157, "And ");
#line 1427
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1428
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1429
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check verify school verification (school working)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckVerifySchoolVerificationSchoolWorking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check verify school verification (school working)", ((string[])(null)));
#line 1431
this.ScenarioSetup(scenarioInfo);
#line 1432
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Confirmation-token_status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1433
 testRunner.And("I see the text \"POST api/Verification/Confirmation/{token}?status={status}\" in th" +
                    "e page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table158.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1434
 testRunner.When("I add header with token", ((string)(null)), table158, "When ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "token",
                        "status"});
            table159.AddRow(new string[] {
                        "bf799570c15d4534a51864cbc5ed0b70",
                        "SchoolWorking"});
#line 1437
 testRunner.And("I input the confrimation verification data", ((string)(null)), table159, "And ");
#line 1440
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1441
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Confirmati" +
                    "on/{token}?status={status}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1442
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check verify school verification (school Retired)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckVerifySchoolVerificationSchoolRetired()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check verify school verification (school Retired)", ((string[])(null)));
#line 1444
this.ScenarioSetup(scenarioInfo);
#line 1445
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Confirmation-token_status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1446
 testRunner.And("I see the text \"POST api/Verification/Confirmation/{token}?status={status}\" in th" +
                    "e page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table160.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1447
 testRunner.When("I add header with token", ((string)(null)), table160, "When ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "token",
                        "status"});
            table161.AddRow(new string[] {
                        "5201494abc034bd6aee4570139e852c5",
                        "SchoolRetired"});
#line 1450
 testRunner.And("I input the confrimation verification data", ((string)(null)), table161, "And ");
#line 1453
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1454
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Confirmati" +
                    "on/{token}?status={status}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1455
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check verify school verification (school never employed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckVerifySchoolVerificationSchoolNeverEmployed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check verify school verification (school never employed)", ((string[])(null)));
#line 1457
this.ScenarioSetup(scenarioInfo);
#line 1458
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Confirmation-token_status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1459
 testRunner.And("I see the text \"POST api/Verification/Confirmation/{token}?status={status}\" in th" +
                    "e page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table162.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1460
 testRunner.When("I add header with token", ((string)(null)), table162, "When ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "token",
                        "status"});
            table163.AddRow(new string[] {
                        "3807da46f144429cb8525d7744786c4a",
                        "SchoolNeverEmployed"});
#line 1463
 testRunner.And("I input the confrimation verification data", ((string)(null)), table163, "And ");
#line 1466
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1467
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Confirmati" +
                    "on/{token}?status={status}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1468
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73602 check verify school verification (failed token invalid)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73602CheckVerifySchoolVerificationFailedTokenInvalid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73602 check verify school verification (failed token invalid)", ((string[])(null)));
#line 1470
this.ScenarioSetup(scenarioInfo);
#line 1471
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-Confirmation-token_status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1472
 testRunner.And("I see the text \"POST api/Verification/Confirmation/{token}?status={status}\" in th" +
                    "e page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table164.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1473
 testRunner.When("I add header with token", ((string)(null)), table164, "When ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "token",
                        "status"});
            table165.AddRow(new string[] {
                        "poiuytrew",
                        "SchoolWorking"});
#line 1476
 testRunner.And("I input the confrimation verification data", ((string)(null)), table165, "And ");
#line 1479
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1480
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/Confirmati" +
                    "on/{token}?status={status}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1481
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check save testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckSaveTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check save testimonial", ((string[])(null)));
#line 1483
this.ScenarioSetup(scenarioInfo);
#line 1484
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1485
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table166.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1486
 testRunner.When("I add header with token", ((string)(null)), table166, "When ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table167.AddRow(new string[] {
                        "0",
                        "0",
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1489
 testRunner.And("I input testimonial data", ((string)(null)), table167, "And ");
#line 1492
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1493
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1494
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check save testimonial (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckSaveTestimonialUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check save testimonial (user id is not exist)", ((string[])(null)));
#line 1496
this.ScenarioSetup(scenarioInfo);
#line 1497
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1498
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table168.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1499
 testRunner.When("I add header with token", ((string)(null)), table168, "When ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table169.AddRow(new string[] {
                        "0",
                        "0",
                        "71a9424f-e9fb-4563-b4d4-111111111111",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1502
 testRunner.And("I input testimonial data", ((string)(null)), table169, "And ");
#line 1505
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1506
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1507
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check save testimonial (user is not login yet)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckSaveTestimonialUserIsNotLoginYet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check save testimonial (user is not login yet)", ((string[])(null)));
#line 1509
this.ScenarioSetup(scenarioInfo);
#line 1510
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1511
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1512
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table170.AddRow(new string[] {
                        "0",
                        "0",
                        "71a9424f-e9fb-4563-b4d4-111111111111",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1513
 testRunner.And("I input testimonial data", ((string)(null)), table170, "And ");
#line 1516
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1517
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1518
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check update testimonial (change testimonial data)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckUpdateTestimonialChangeTestimonialData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check update testimonial (change testimonial data)", ((string[])(null)));
#line 1520
this.ScenarioSetup(scenarioInfo);
#line 1521
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1522
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table171.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1523
 testRunner.When("I add header with token", ((string)(null)), table171, "When ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table172.AddRow(new string[] {
                        "0",
                        "1",
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "change short Description",
                        "change description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1526
 testRunner.And("I input testimonial data", ((string)(null)), table172, "And ");
#line 1529
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1530
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1531
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check update testimonial (change user data)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckUpdateTestimonialChangeUserData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check update testimonial (change user data)", ((string[])(null)));
#line 1533
this.ScenarioSetup(scenarioInfo);
#line 1534
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1535
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table173.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1536
 testRunner.When("I add header with token", ((string)(null)), table173, "When ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table174.AddRow(new string[] {
                        "0",
                        "1",
                        "64060696-f58c-4126-9a91-c1325f2885f7",
                        "testtest",
                        "test",
                        "test",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1539
 testRunner.And("I input testimonial data", ((string)(null)), table174, "And ");
#line 1542
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1543
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1544
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check update testimonial (change user data that not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckUpdateTestimonialChangeUserDataThatNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check update testimonial (change user data that not exist)", ((string[])(null)));
#line 1546
this.ScenarioSetup(scenarioInfo);
#line 1547
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1548
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table175.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1549
 testRunner.When("I add header with token", ((string)(null)), table175, "When ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table176.AddRow(new string[] {
                        "0",
                        "1",
                        "64060696-f58c-4126-9a91-111111111111",
                        "testtest",
                        "test",
                        "test",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1552
 testRunner.And("I input testimonial data", ((string)(null)), table176, "And ");
#line 1555
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1556
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1557
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73643 check update testimonial (change user data and not login yet)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73643CheckUpdateTestimonialChangeUserDataAndNotLoginYet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73643 check update testimonial (change user data and not login yet)", ((string[])(null)));
#line 1559
this.ScenarioSetup(scenarioInfo);
#line 1560
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1561
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1562
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate"});
            table177.AddRow(new string[] {
                        "0",
                        "1",
                        "64060696-f58c-4126-9a91-c1325f2885f7",
                        "testtest",
                        "test",
                        "test",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09"});
#line 1563
 testRunner.And("I input testimonial data", ((string)(null)), table177, "And ");
#line 1566
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1567
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1568
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73561 check get public profile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73561CheckGetPublicProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73561 check get public profile", ((string[])(null)));
#line 1570
this.ScenarioSetup(scenarioInfo);
#line 1571
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1572
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table178.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1573
 testRunner.When("I add header with token", ((string)(null)), table178, "When ");
#line 1576
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1577
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1578
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1579
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73561 check get public profile (user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73561CheckGetPublicProfileUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73561 check get public profile (user not exist)", ((string[])(null)));
#line 1581
this.ScenarioSetup(scenarioInfo);
#line 1582
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1583
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table179.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1584
 testRunner.When("I add header with token", ((string)(null)), table179, "When ");
#line 1587
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-111111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1588
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1589
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1590
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73561 check get public profile (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73561CheckGetPublicProfileUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73561 check get public profile (user not logged)", ((string[])(null)));
#line 1592
this.ScenarioSetup(scenarioInfo);
#line 1593
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1594
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1595
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1596
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1597
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1598
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1599
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (input address listing)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingInputAddressListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (input address listing)", ((string[])(null)));
#line 1601
this.ScenarioSetup(scenarioInfo);
#line 1602
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1603
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table180.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1604
 testRunner.When("I add header with token", ((string)(null)), table180, "When ");
#line 1607
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table181.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1608
 testRunner.And("I input the listing data", ((string)(null)), table181, "And ");
#line 1611
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1612
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1613
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (using user address)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingUsingUserAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (using user address)", ((string[])(null)));
#line 1615
this.ScenarioSetup(scenarioInfo);
#line 1616
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1617
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table182.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1618
 testRunner.When("I add header with token", ((string)(null)), table182, "When ");
#line 1621
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table183.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "true",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1622
 testRunner.And("I input the listing data", ((string)(null)), table183, "And ");
#line 1625
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1626
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1627
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (failed required field is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingFailedRequiredFieldIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (failed required field is empty)", ((string[])(null)));
#line 1629
this.ScenarioSetup(scenarioInfo);
#line 1630
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1631
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table184.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1632
 testRunner.When("I add header with token", ((string)(null)), table184, "When ");
#line 1635
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table185.AddRow(new string[] {
                        "",
                        "4",
                        "4",
                        "true",
                        "true",
                        "true",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        ""});
#line 1636
 testRunner.And("I input the listing data", ((string)(null)), table185, "And ");
#line 1639
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1640
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1641
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (failed user not logged)", ((string[])(null)));
#line 1643
this.ScenarioSetup(scenarioInfo);
#line 1644
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1645
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1646
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1647
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table186.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1648
 testRunner.And("I input the listing data", ((string)(null)), table186, "And ");
#line 1651
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1652
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1653
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (user not exist)", ((string[])(null)));
#line 1655
this.ScenarioSetup(scenarioInfo);
#line 1656
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1657
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table187.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1658
 testRunner.When("I add header with token", ((string)(null)), table187, "When ");
#line 1661
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-11111111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table188.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1662
 testRunner.And("I input the listing data", ((string)(null)), table188, "And ");
#line 1665
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1666
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1667
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check save listing (failed user not member)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckSaveListingFailedUserNotMember()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check save listing (failed user not member)", ((string[])(null)));
#line 1669
this.ScenarioSetup(scenarioInfo);
#line 1670
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1671
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table189.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1672
 testRunner.When("I add header with token", ((string)(null)), table189, "When ");
#line 1675
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table190.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "0",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1676
 testRunner.And("I input the listing data", ((string)(null)), table190, "And ");
#line 1679
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1680
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1681
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check edit listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckEditListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check edit listing", ((string[])(null)));
#line 1683
this.ScenarioSetup(scenarioInfo);
#line 1684
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1685
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table191.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1686
 testRunner.When("I add header with token", ((string)(null)), table191, "When ");
#line 1689
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table192.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "1",
                        "1",
                        "2016-08-2",
                        "2016-08-2",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1690
 testRunner.And("I input the listing data", ((string)(null)), table192, "And ");
#line 1693
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1694
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1695
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80339 check remove listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80339CheckRemoveListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80339 check remove listing", ((string[])(null)));
#line 1697
this.ScenarioSetup(scenarioInfo);
#line 1698
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "ave-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1699
 testRunner.And("I see the text \"POST api/Listing/Save/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table193.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1700
 testRunner.When("I add header with token", ((string)(null)), table193, "When ");
#line 1703
 testRunner.And("I input the user Id \"79ddc9d0-1d9b-4b7e-b2a7-48204eb44047\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "numberPeople",
                        "numberBedRoom",
                        "undecided",
                        "publicShare",
                        "useUserAddress",
                        "id",
                        "orderNo",
                        "startDate",
                        "endDate",
                        "flexibilityDate",
                        "features",
                        "addressOne",
                        "addressTwo",
                        "houseNo",
                        "city",
                        "province",
                        "postalCode",
                        "latitude",
                        "longitude",
                        "countryId"});
            table194.AddRow(new string[] {
                        "test Listing title",
                        "4",
                        "4",
                        "true",
                        "true",
                        "false",
                        "1",
                        "1",
                        "",
                        "",
                        "0",
                        "3,6,9",
                        "garut",
                        "bandung",
                        "42a",
                        "Bandung",
                        "West Java",
                        "12345",
                        "-6.8791767",
                        "107.5849853",
                        "1003"});
#line 1704
 testRunner.And("I input the listing data", ((string)(null)), table194, "And ");
#line 1707
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1708
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1709
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80992 check contact Us phone field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80992CheckContactUsPhoneField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80992 check contact Us phone field", ((string[])(null)));
#line 1711
this.ScenarioSetup(scenarioInfo);
#line 1712
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-ContactUs" +
                    "-Submit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1713
 testRunner.When("I see the text \"POST api/ContactUs/Submit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1714
 testRunner.Then("I shouldn\'t see phone field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80840 check delete image")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80840CheckDeleteImage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80840 check delete image", ((string[])(null)));
#line 1716
this.ScenarioSetup(scenarioInfo);
#line 1717
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-Delete-imageId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1718
 testRunner.And("I see the text \"POST api/Media/Images/Delete/{imageId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table195.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1719
 testRunner.When("I add header with token", ((string)(null)), table195, "When ");
#line 1722
 testRunner.And("I input image id \"6FA45B80-FC6D-412A-A49B-068B5722FD5D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1723
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1724
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/Delete/{im" +
                    "ageId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1725
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73740 check set default image listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73740CheckSetDefaultImageListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73740 check set default image listing", ((string[])(null)));
#line 1727
this.ScenarioSetup(scenarioInfo);
#line 1728
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1729
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table196.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1730
 testRunner.When("I add header with token", ((string)(null)), table196, "When ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table197.AddRow(new string[] {
                        "1",
                        "8FCF62C0-58A8-46EB-8978-2B3EC5D24A67",
                        "true"});
#line 1733
 testRunner.And("I input image listing data", ((string)(null)), table197, "And ");
#line 1736
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1737
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1738
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73740 check set default image listing (save as not default)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73740CheckSetDefaultImageListingSaveAsNotDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73740 check set default image listing (save as not default)", ((string[])(null)));
#line 1740
this.ScenarioSetup(scenarioInfo);
#line 1741
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1742
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table198.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1743
 testRunner.When("I add header with token", ((string)(null)), table198, "When ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table199.AddRow(new string[] {
                        "2",
                        "F0BE2E48-E4B6-4FCE-A488-2B789238F51B",
                        "false"});
#line 1746
 testRunner.And("I input image listing data", ((string)(null)), table199, "And ");
#line 1749
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1750
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1751
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73740 check set default image listing (failed listing is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73740CheckSetDefaultImageListingFailedListingIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73740 check set default image listing (failed listing is not exist)", ((string[])(null)));
#line 1753
this.ScenarioSetup(scenarioInfo);
#line 1754
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1755
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table200.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1756
 testRunner.When("I add header with token", ((string)(null)), table200, "When ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table201.AddRow(new string[] {
                        "999999",
                        "F0BE2E48-E4B6-4FCE-A488-2B789238F51B",
                        "true"});
#line 1759
 testRunner.And("I input image listing data", ((string)(null)), table201, "And ");
#line 1762
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1763
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1764
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73740 check set default image listing (failed image is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73740CheckSetDefaultImageListingFailedImageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73740 check set default image listing (failed image is not exist)", ((string[])(null)));
#line 1766
this.ScenarioSetup(scenarioInfo);
#line 1767
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1768
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table202.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1769
 testRunner.When("I add header with token", ((string)(null)), table202, "When ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table203.AddRow(new string[] {
                        "3",
                        "F0BE2E48-E4B6-4FCE-A488-999999999999",
                        "true"});
#line 1772
 testRunner.And("I input image listing data", ((string)(null)), table203, "And ");
#line 1775
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1776
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1777
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73740 check set default image listing (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73740CheckSetDefaultImageListingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73740 check set default image listing (user not logged)", ((string[])(null)));
#line 1779
this.ScenarioSetup(scenarioInfo);
#line 1780
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1781
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1782
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table204.AddRow(new string[] {
                        "4",
                        "55ED8B95-411E-4162-BD62-C0E23A0ED120",
                        "true"});
#line 1783
 testRunner.And("I input image listing data", ((string)(null)), table204, "And ");
#line 1786
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1787
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1788
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73736 check view user listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73736CheckViewUserListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73736 check view user listing", ((string[])(null)));
#line 1790
this.ScenarioSetup(scenarioInfo);
#line 1791
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1792
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table205.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1793
 testRunner.When("I add header with token", ((string)(null)), table205, "When ");
#line 1796
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1797
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1798
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1799
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73736 check view user listing (failed user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73736CheckViewUserListingFailedUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73736 check view user listing (failed user not exist)", ((string[])(null)));
#line 1801
this.ScenarioSetup(scenarioInfo);
#line 1802
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1803
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table206.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1804
 testRunner.When("I add header with token", ((string)(null)), table206, "When ");
#line 1807
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-qqqqqqqqqqqqqqqqqqq\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1808
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1809
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1810
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73736 check view user listing (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73736CheckViewUserListingFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73736 check view user listing (failed user not logged)", ((string[])(null)));
#line 1812
this.ScenarioSetup(scenarioInfo);
#line 1813
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1814
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1815
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1816
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1817
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1818
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1819
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73733 check view user verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73733CheckViewUserVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73733 check view user verification", ((string[])(null)));
#line 1821
this.ScenarioSetup(scenarioInfo);
#line 1822
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1823
 testRunner.And("I see the text \"GET api/Verification/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table207.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1824
 testRunner.When("I add header with token", ((string)(null)), table207, "When ");
#line 1827
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1828
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1829
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1830
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73733 check view user verification (failed user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73733CheckViewUserVerificationFailedUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73733 check view user verification (failed user not exist)", ((string[])(null)));
#line 1832
this.ScenarioSetup(scenarioInfo);
#line 1833
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1834
 testRunner.And("I see the text \"GET api/Verification/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table208.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1835
 testRunner.When("I add header with token", ((string)(null)), table208, "When ");
#line 1838
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-qwertyuiop\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1839
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1840
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1841
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73733 check view user verification (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73733CheckViewUserVerificationFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73733 check view user verification (failed user not logged)", ((string[])(null)));
#line 1843
this.ScenarioSetup(scenarioInfo);
#line 1844
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Verificati" +
                    "on-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1845
 testRunner.And("I see the text \"GET api/Verification/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1846
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1847
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1848
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1849
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Verification/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1850
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73731 check view user profile")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73731CheckViewUserProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73731 check view user profile", ((string[])(null)));
#line 1852
this.ScenarioSetup(scenarioInfo);
#line 1853
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-User" +
                    "Id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1854
 testRunner.And("I see the text \"GET api/Users/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table209.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1855
 testRunner.When("I add header with token", ((string)(null)), table209, "When ");
#line 1858
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1859
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1860
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/{UserId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1861
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73731 check view user profile (failed user not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73731CheckViewUserProfileFailedUserNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73731 check view user profile (failed user not exist)", ((string[])(null)));
#line 1863
this.ScenarioSetup(scenarioInfo);
#line 1864
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-User" +
                    "Id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1865
 testRunner.And("I see the text \"GET api/Users/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table210.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1866
 testRunner.When("I add header with token", ((string)(null)), table210, "When ");
#line 1869
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-qwertyuiop\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1870
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1871
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/{UserId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1872
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73731 check view user profile (failed user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73731CheckViewUserProfileFailedUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73731 check view user profile (failed user not logged)", ((string[])(null)));
#line 1874
this.ScenarioSetup(scenarioInfo);
#line 1875
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-User" +
                    "Id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1876
 testRunner.And("I see the text \"GET api/Users/{UserId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1877
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1878
 testRunner.And("I input the user Id \"71a9424f-e9fb-4563-b4d4-80f9f88d7e2e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1879
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1880
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/{UserId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1881
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now with active membership")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowWithActiveMembership()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now with active membership", ((string[])(null)));
#line 1883
this.ScenarioSetup(scenarioInfo);
#line 1884
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1885
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table211.AddRow(new string[] {
                        "sucitanuary",
                        "password"});
#line 1886
 testRunner.When("I add header with token", ((string)(null)), table211, "When ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table212.AddRow(new string[] {
                        "13",
                        "test",
                        "2016-10-12",
                        "2016-10-18"});
#line 1889
 testRunner.And("I input listing avalibiity data", ((string)(null)), table212, "And ");
#line 1892
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1893
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1894
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now again with same user (failed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowAgainWithSameUserFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now again with same user (failed)", ((string[])(null)));
#line 1896
this.ScenarioSetup(scenarioInfo);
#line 1897
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1898
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table213.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1899
 testRunner.When("I add header with token", ((string)(null)), table213, "When ");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table214.AddRow(new string[] {
                        "1",
                        "test",
                        "2016-09-02",
                        "2016-09-02"});
#line 1902
 testRunner.And("I input listing avalibiity data", ((string)(null)), table214, "And ");
#line 1905
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1906
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1907
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now with user that create the listing (failed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowWithUserThatCreateTheListingFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now with user that create the listing (failed)", ((string[])(null)));
#line 1909
this.ScenarioSetup(scenarioInfo);
#line 1910
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1911
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table215.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1912
 testRunner.When("I add header with token", ((string)(null)), table215, "When ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table216.AddRow(new string[] {
                        "1",
                        "test",
                        "2016-09-02",
                        "2016-09-02"});
#line 1915
 testRunner.And("I input listing avalibiity data", ((string)(null)), table216, "And ");
#line 1918
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1919
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1920
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now with not active membership")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowWithNotActiveMembership()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now with not active membership", ((string[])(null)));
#line 1922
this.ScenarioSetup(scenarioInfo);
#line 1923
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1924
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table217.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1925
 testRunner.When("I add header with token", ((string)(null)), table217, "When ");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table218.AddRow(new string[] {
                        "1",
                        "test",
                        "2016-09-02",
                        "2016-09-02"});
#line 1928
 testRunner.And("I input listing avalibiity data", ((string)(null)), table218, "And ");
#line 1931
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1932
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1933
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now using date that not match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowUsingDateThatNotMatch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now using date that not match", ((string[])(null)));
#line 1935
this.ScenarioSetup(scenarioInfo);
#line 1936
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1937
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table219.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1938
 testRunner.When("I add header with token", ((string)(null)), table219, "When ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table220.AddRow(new string[] {
                        "1",
                        "test",
                        "2016-08-31",
                        "2016-08-31"});
#line 1941
 testRunner.And("I input listing avalibiity data", ((string)(null)), table220, "And ");
#line 1944
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1945
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1946
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now using listing that not exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowUsingListingThatNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now using listing that not exist", ((string[])(null)));
#line 1948
this.ScenarioSetup(scenarioInfo);
#line 1949
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1950
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table221.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1951
 testRunner.When("I add header with token", ((string)(null)), table221, "When ");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table222.AddRow(new string[] {
                        "2",
                        "test",
                        "2016-08-31",
                        "2016-08-31"});
#line 1954
 testRunner.And("I input listing avalibiity data", ((string)(null)), table222, "And ");
#line 1957
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1958
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1959
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73569 check apply now with user that not logged")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73569CheckApplyNowWithUserThatNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73569 check apply now with user that not logged", ((string[])(null)));
#line 1961
this.ScenarioSetup(scenarioInfo);
#line 1962
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1963
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1964
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table223.AddRow(new string[] {
                        "1",
                        "test",
                        "2016-09-02",
                        "2016-09-02"});
#line 1965
 testRunner.And("I input listing avalibiity data", ((string)(null)), table223, "And ");
#line 1968
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1969
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1970
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74371 check accept booking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74371CheckAcceptBooking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74371 check accept booking", ((string[])(null)));
#line 1972
this.ScenarioSetup(scenarioInfo);
#line 1973
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "ccept-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1974
 testRunner.And("I see the text \"POST api/Booking/Accept/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table224.AddRow(new string[] {
                        "hhilmi",
                        "password"});
#line 1975
 testRunner.When("I add header with token", ((string)(null)), table224, "When ");
#line 1978
 testRunner.And("I input booking reference \"5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1979
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1980
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Accept/{booking" +
                    "Reference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1981
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74371 check accept booking(failed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74371CheckAcceptBookingFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74371 check accept booking(failed)", ((string[])(null)));
#line 1983
this.ScenarioSetup(scenarioInfo);
#line 1984
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "ccept-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1985
 testRunner.And("I see the text \"POST api/Booking/Accept/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table225.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 1986
 testRunner.When("I add header with token", ((string)(null)), table225, "When ");
#line 1989
 testRunner.And("I input booking reference \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1990
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1991
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Accept/{booking" +
                    "Reference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1992
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74371 check accept booking(user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74371CheckAcceptBookingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74371 check accept booking(user not logged)", ((string[])(null)));
#line 1994
this.ScenarioSetup(scenarioInfo);
#line 1995
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "ccept-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1996
 testRunner.And("I see the text \"POST api/Booking/Accept/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1997
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1998
 testRunner.And("I input booking reference \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1999
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2000
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Accept/{booking" +
                    "Reference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2001
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74365 check cancel booking by another user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74365CheckCancelBookingByAnotherUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74365 check cancel booking by another user", ((string[])(null)));
#line 2003
this.ScenarioSetup(scenarioInfo);
#line 2004
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-H" +
                    "ostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2005
 testRunner.And("I see the text \"POST api/Booking/HostCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table226.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2006
 testRunner.When("I add header with token", ((string)(null)), table226, "When ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table227.AddRow(new string[] {
                        "3",
                        "test"});
#line 2009
 testRunner.And("I input cancel booking  data", ((string)(null)), table227, "And ");
#line 2012
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2013
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/HostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2014
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74365 check cancel booking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74365CheckCancelBooking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74365 check cancel booking", ((string[])(null)));
#line 2016
this.ScenarioSetup(scenarioInfo);
#line 2017
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-H" +
                    "ostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2018
 testRunner.And("I see the text \"POST api/Booking/HostCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table228.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2019
 testRunner.When("I add header with token", ((string)(null)), table228, "When ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table229.AddRow(new string[] {
                        "3",
                        "test"});
#line 2022
 testRunner.And("I input cancel booking  data", ((string)(null)), table229, "And ");
#line 2025
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2026
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/HostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2027
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74365 check cancel booking failed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74365CheckCancelBookingFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74365 check cancel booking failed", ((string[])(null)));
#line 2029
this.ScenarioSetup(scenarioInfo);
#line 2030
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-H" +
                    "ostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2031
 testRunner.And("I see the text \"POST api/Booking/HostCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table230.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2032
 testRunner.When("I add header with token", ((string)(null)), table230, "When ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table231.AddRow(new string[] {
                        "2",
                        "test"});
#line 2035
 testRunner.And("I input cancel booking  data", ((string)(null)), table231, "And ");
#line 2038
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2039
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/HostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2040
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74365 check cancel booking user not logged")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74365CheckCancelBookingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74365 check cancel booking user not logged", ((string[])(null)));
#line 2042
this.ScenarioSetup(scenarioInfo);
#line 2043
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-H" +
                    "ostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2044
 testRunner.And("I see the text \"POST api/Booking/HostCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2045
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table232.AddRow(new string[] {
                        "3",
                        "test"});
#line 2046
 testRunner.And("I input cancel booking  data", ((string)(null)), table232, "And ");
#line 2049
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2050
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/HostCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2051
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82025 update image listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82025UpdateImageListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82025 update image listing", ((string[])(null)));
#line 2053
this.ScenarioSetup(scenarioInfo);
#line 2054
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2055
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table233.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2056
 testRunner.When("I add header with token", ((string)(null)), table233, "When ");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table234.AddRow(new string[] {
                        "3",
                        "BF6CDC7F-EB63-477D-B2A1-3A5DE8E5960C",
                        "true"});
#line 2059
 testRunner.And("I input image listing data", ((string)(null)), table234, "And ");
#line 2062
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2063
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2064
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82025 update image listing(listing id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82025UpdateImageListingListingIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82025 update image listing(listing id is not exist)", ((string[])(null)));
#line 2066
this.ScenarioSetup(scenarioInfo);
#line 2067
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2068
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table235.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2069
 testRunner.When("I add header with token", ((string)(null)), table235, "When ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table236.AddRow(new string[] {
                        "99",
                        "BF6CDC7F-EB63-477D-B2A1-3A5DE8E5960C",
                        "true"});
#line 2072
 testRunner.And("I input image listing data", ((string)(null)), table236, "And ");
#line 2075
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2076
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2077
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82025 update image listing(user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82025UpdateImageListingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82025 update image listing(user not logged)", ((string[])(null)));
#line 2079
this.ScenarioSetup(scenarioInfo);
#line 2080
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-I" +
                    "mageListing-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2081
 testRunner.And("I see the text \"POST api/Listing/ImageListing/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2082
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "imageId",
                        "isDefault"});
            table237.AddRow(new string[] {
                        "1",
                        "55ED8B95-411E-4162-BD62-C0E23A0ED120",
                        "true"});
#line 2083
 testRunner.And("I input image listing data", ((string)(null)), table237, "And ");
#line 2086
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2087
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/ImageListing/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2088
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73644 Approve testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73644ApproveTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73644 Approve testimonial", ((string[])(null)));
#line 2090
this.ScenarioSetup(scenarioInfo);
#line 2091
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2092
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonialApproval\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table238.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2093
 testRunner.When("I add header with token", ((string)(null)), table238, "When ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate",
                        "approved"});
            table239.AddRow(new string[] {
                        "1",
                        "4",
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09",
                        "true"});
#line 2096
 testRunner.And("I input testimonial data", ((string)(null)), table239, "And ");
#line 2099
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2100
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2101
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73644 Approve testimonial (testimonial is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73644ApproveTestimonialTestimonialIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73644 Approve testimonial (testimonial is not exist)", ((string[])(null)));
#line 2103
this.ScenarioSetup(scenarioInfo);
#line 2104
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2105
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonialApproval\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table240.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2106
 testRunner.When("I add header with token", ((string)(null)), table240, "When ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate",
                        "approved"});
            table241.AddRow(new string[] {
                        "1",
                        "99",
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09",
                        "true"});
#line 2109
 testRunner.And("I input testimonial data", ((string)(null)), table241, "And ");
#line 2112
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2113
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2114
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73644 Approve testimonial (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73644ApproveTestimonialUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73644 Approve testimonial (user id is not exist)", ((string[])(null)));
#line 2116
this.ScenarioSetup(scenarioInfo);
#line 2117
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2118
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonialApproval\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table242.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2119
 testRunner.When("I add header with token", ((string)(null)), table242, "When ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate",
                        "approved"});
            table243.AddRow(new string[] {
                        "1",
                        "4",
                        "71a9424f-e9fb-4563-b4d4-pppppppppppp",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09",
                        "true"});
#line 2122
 testRunner.And("I input testimonial data", ((string)(null)), table243, "And ");
#line 2125
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2126
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2127
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73644 Approve testimonial (user is not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73644ApproveTestimonialUserIsNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73644 Approve testimonial (user is not logged)", ((string[])(null)));
#line 2129
this.ScenarioSetup(scenarioInfo);
#line 2130
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2131
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonialApproval\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2132
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "no",
                        "id",
                        "userId",
                        "username",
                        "firstName",
                        "lastName",
                        "shortDescription",
                        "description",
                        "approvedDate",
                        "createdDate",
                        "approved"});
            table244.AddRow(new string[] {
                        "1",
                        "4",
                        "71a9424f-e9fb-4563-b4d4-80f9f88d7e2e",
                        "lucubanget",
                        "urati",
                        "cantik",
                        "test short Description",
                        "test description",
                        "2016-08-09",
                        "2016-08-09",
                        "true"});
#line 2133
 testRunner.And("I input testimonial data", ((string)(null)), table244, "And ");
#line 2136
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2137
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nialApproval\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2138
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#76498 check decline booking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _76498CheckDeclineBooking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#76498 check decline booking", ((string[])(null)));
#line 2140
this.ScenarioSetup(scenarioInfo);
#line 2141
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-D" +
                    "ecline-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2142
 testRunner.And("I see the text \"POST api/Booking/Decline/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table245.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2143
 testRunner.When("I add header with token", ((string)(null)), table245, "When ");
#line 2146
 testRunner.And("I input booking reference \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2147
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2148
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Decline/{bookin" +
                    "gReference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2149
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#76498 check decline booking (booking has canceled)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _76498CheckDeclineBookingBookingHasCanceled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#76498 check decline booking (booking has canceled)", ((string[])(null)));
#line 2151
this.ScenarioSetup(scenarioInfo);
#line 2152
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-D" +
                    "ecline-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2153
 testRunner.And("I see the text \"POST api/Booking/Decline/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table246.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2154
 testRunner.When("I add header with token", ((string)(null)), table246, "When ");
#line 2157
 testRunner.And("I input booking reference \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2158
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2159
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Decline/{bookin" +
                    "gReference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2160
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#76498 check decline booking(failed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _76498CheckDeclineBookingFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#76498 check decline booking(failed)", ((string[])(null)));
#line 2162
this.ScenarioSetup(scenarioInfo);
#line 2163
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-D" +
                    "ecline-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2164
 testRunner.And("I see the text \"POST api/Booking/Decline/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table247.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2165
 testRunner.When("I add header with token", ((string)(null)), table247, "When ");
#line 2168
 testRunner.And("I input booking reference \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2169
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2170
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Decline/{bookin" +
                    "gReference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2171
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#76498 check decline booking(user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _76498CheckDeclineBookingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#76498 check decline booking(user not logged)", ((string[])(null)));
#line 2173
this.ScenarioSetup(scenarioInfo);
#line 2174
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-D" +
                    "ecline-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2175
 testRunner.And("I see the text \"POST api/Booking/Decline/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2176
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2177
 testRunner.And("I input booking reference \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2178
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2179
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Decline/{bookin" +
                    "gReference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2180
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73613 check display user listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73613CheckDisplayUserListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73613 check display user listing", ((string[])(null)));
#line 2182
this.ScenarioSetup(scenarioInfo);
#line 2183
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-User-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2184
 testRunner.And("I see the text \"GET api/Booking/List/User/{userId}?Offset={Offset}&Limit={Limit}&" +
                    "OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table248.AddRow(new string[] {
                        "ridwan",
                        "password"});
#line 2185
 testRunner.When("I add header with token", ((string)(null)), table248, "When ");
#line 2188
 testRunner.And("I input the user Id \"1ed19b8b-18eb-4add-9feb-942bb519e8f4\" to the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2189
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2190
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/User/{userI" +
                    "d}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirectio" +
                    "n}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2191
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2192
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73613 check display user listing (failed user is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73613CheckDisplayUserListingFailedUserIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73613 check display user listing (failed user is not exist)", ((string[])(null)));
#line 2194
this.ScenarioSetup(scenarioInfo);
#line 2195
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-User-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2196
 testRunner.And("I see the text \"GET api/Booking/List/User/{userId}?Offset={Offset}&Limit={Limit}&" +
                    "OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table249.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2197
 testRunner.When("I add header with token", ((string)(null)), table249, "When ");
#line 2200
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-qwertyuiop\" to the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2201
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2202
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/User/{userI" +
                    "d}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirectio" +
                    "n}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2203
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73613 check display user listing (failed user is not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73613CheckDisplayUserListingFailedUserIsNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73613 check display user listing (failed user is not logged)", ((string[])(null)));
#line 2205
this.ScenarioSetup(scenarioInfo);
#line 2206
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-User-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2207
 testRunner.And("I see the text \"GET api/Booking/List/User/{userId}?Offset={Offset}&Limit={Limit}&" +
                    "OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2208
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2209
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\" to the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2210
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2211
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/User/{userI" +
                    "d}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirectio" +
                    "n}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2212
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73590 check give testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73590CheckGiveTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73590 check give testimonial", ((string[])(null)));
#line 2214
this.ScenarioSetup(scenarioInfo);
#line 2215
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2216
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table250.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2217
 testRunner.When("I add header with token", ((string)(null)), table250, "When ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "description"});
            table251.AddRow(new string[] {
                        "088e5415-7638-4d12-a892-63aa74fac537",
                        "test"});
#line 2220
 testRunner.And("I input the testimonial", ((string)(null)), table251, "And ");
#line 2223
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2224
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2225
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73590 check give testimonial (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73590CheckGiveTestimonialUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73590 check give testimonial (user id is not exist)", ((string[])(null)));
#line 2227
this.ScenarioSetup(scenarioInfo);
#line 2228
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2229
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table252.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2230
 testRunner.When("I add header with token", ((string)(null)), table252, "When ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "description"});
            table253.AddRow(new string[] {
                        "088e5415-7638-4d12-a892-qwertyuiopas",
                        "test"});
#line 2233
 testRunner.And("I input the testimonial", ((string)(null)), table253, "And ");
#line 2236
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2237
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2238
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73590 check give testimonial (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73590CheckGiveTestimonialUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73590 check give testimonial (user not logged)", ((string[])(null)));
#line 2240
this.ScenarioSetup(scenarioInfo);
#line 2241
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2242
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2243
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "description"});
            table254.AddRow(new string[] {
                        "088e5415-7638-4d12-a892-63aa74fac537",
                        "test"});
#line 2244
 testRunner.And("I input the testimonial", ((string)(null)), table254, "And ");
#line 2247
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2248
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2249
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73578 check invite now")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73578CheckInviteNow()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73578 check invite now", ((string[])(null)));
#line 2251
this.ScenarioSetup(scenarioInfo);
#line 2252
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2253
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table255.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 2254
 testRunner.When("I add header with token", ((string)(null)), table255, "When ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table256.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-7d131527bc02",
                        "kan@voxteneo.asia",
                        "korytest",
                        "test"});
#line 2257
 testRunner.And("I input the invitation data", ((string)(null)), table256, "And ");
#line 2260
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2261
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2262
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table257.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-7d131527bc02",
                        "kan@voxteneo.asia",
                        "korytest",
                        "test"});
#line 2263
 testRunner.And("the data should see the data", ((string)(null)), table257, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73578 check invite now (user has invited)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73578CheckInviteNowUserHasInvited()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73578 check invite now (user has invited)", ((string[])(null)));
#line 2267
this.ScenarioSetup(scenarioInfo);
#line 2268
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2269
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table258.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 2270
 testRunner.When("I add header with token", ((string)(null)), table258, "When ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table259.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-7d131527bc02",
                        "kan@voxteneo.asia",
                        "korytest",
                        "test"});
#line 2273
 testRunner.And("I input the invitation data", ((string)(null)), table259, "And ");
#line 2276
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2277
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2278
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2279
 testRunner.And("I should see the message \"You already sent invitation for this person.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73578 check invite now (user already registered)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73578CheckInviteNowUserAlreadyRegistered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73578 check invite now (user already registered)", ((string[])(null)));
#line 2281
this.ScenarioSetup(scenarioInfo);
#line 2282
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2283
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table260.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 2284
 testRunner.When("I add header with token", ((string)(null)), table260, "When ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table261.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-7d131527bc02",
                        "kan@mailinator.com",
                        "korytest",
                        "test"});
#line 2287
 testRunner.And("I input the invitation data", ((string)(null)), table261, "And ");
#line 2290
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2291
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2292
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2293
 testRunner.And("I should see the message \"This email already registered as Educators Home Share M" +
                    "ember.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73578 check invite now (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73578CheckInviteNowUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73578 check invite now (user id is not exist)", ((string[])(null)));
#line 2295
this.ScenarioSetup(scenarioInfo);
#line 2296
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2297
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table262.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 2298
 testRunner.When("I add header with token", ((string)(null)), table262, "When ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table263.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-poiuytrewoit",
                        "kan@voxteneo.asia",
                        "korytest",
                        "test"});
#line 2301
 testRunner.And("I input the invitation data", ((string)(null)), table263, "And ");
#line 2304
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2305
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2306
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2307
 testRunner.And("I should see the message \"User account not found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73578 check invite now (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73578CheckInviteNowUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73578 check invite now (user not logged)", ((string[])(null)));
#line 2309
this.ScenarioSetup(scenarioInfo);
#line 2310
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2311
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2312
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table264.AddRow(new string[] {
                        "93941e7b-c929-41ed-84e0-7d131527bc02",
                        "kan@voxteneo.asia",
                        "korytest",
                        "test"});
#line 2313
 testRunner.And("I input the invitation data", ((string)(null)), table264, "And ");
#line 2316
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2317
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2318
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74327 check validate appy now button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74327CheckValidateAppyNowButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74327 check validate appy now button", ((string[])(null)));
#line 2320
this.ScenarioSetup(scenarioInfo);
#line 2321
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Va" +
                    "lidate-ApplyNow-listingAvailabilityId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2322
 testRunner.And("I see the text \"GET api/Booking/Validate/ApplyNow/{listingAvailabilityId}\" in the" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table265.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2323
 testRunner.When("I add header with token", ((string)(null)), table265, "When ");
#line 2326
 testRunner.And("Input the listing avaliabiity id \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2327
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2328
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Validate/ApplyNo" +
                    "w/{listingAvailabilityId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2329
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74327 check validate appy now button (ExpDate < StartDate)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74327CheckValidateAppyNowButtonExpDateStartDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74327 check validate appy now button (ExpDate < StartDate)", ((string[])(null)));
#line 2331
this.ScenarioSetup(scenarioInfo);
#line 2332
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Va" +
                    "lidate-ApplyNow-listingAvailabilityId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2333
 testRunner.And("I see the text \"GET api/Booking/Validate/ApplyNow/{listingAvailabilityId}\" in the" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table266.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2334
 testRunner.When("I add header with token", ((string)(null)), table266, "When ");
#line 2337
 testRunner.And("Input the listing avaliabiity id \"5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2338
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2339
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Validate/ApplyNo" +
                    "w/{listingAvailabilityId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2340
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2341
 testRunner.And("I should see the message \"Membership has expired\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74327 check validate appy now button (User not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74327CheckValidateAppyNowButtonUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74327 check validate appy now button (User not logged)", ((string[])(null)));
#line 2343
this.ScenarioSetup(scenarioInfo);
#line 2344
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Va" +
                    "lidate-ApplyNow-listingAvailabilityId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2345
 testRunner.And("I see the text \"GET api/Booking/Validate/ApplyNow/{listingAvailabilityId}\" in the" +
                    " page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2346
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2347
 testRunner.And("Input the listing avaliabiity id \"5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2348
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2349
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Validate/ApplyNo" +
                    "w/{listingAvailabilityId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2350
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest user by another user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuestUserByAnotherUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest user by another user", ((string[])(null)));
#line 2352
this.ScenarioSetup(scenarioInfo);
#line 2353
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2354
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table267.AddRow(new string[] {
                        "zanardi",
                        "password"});
#line 2355
 testRunner.When("I add header with token", ((string)(null)), table267, "When ");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table268.AddRow(new string[] {
                        "1",
                        "test"});
#line 2358
 testRunner.And("I input cancel booking  data", ((string)(null)), table268, "And ");
#line 2361
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2362
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2363
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest (EndDate booking no longer avaliable)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuestEndDateBookingNoLongerAvaliable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest (EndDate booking no longer avaliable)", ((string[])(null)));
#line 2365
this.ScenarioSetup(scenarioInfo);
#line 2366
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2367
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table269.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2368
 testRunner.When("I add header with token", ((string)(null)), table269, "When ");
#line hidden
            TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table270.AddRow(new string[] {
                        "3",
                        "test"});
#line 2371
 testRunner.And("I input cancel booking  data", ((string)(null)), table270, "And ");
#line 2374
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2375
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2376
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2377
 testRunner.And("I should see the message \"The booking is no longer available\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest", ((string[])(null)));
#line 2379
 this.ScenarioSetup(scenarioInfo);
#line 2380
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2381
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table271.AddRow(new string[] {
                        "samuel",
                        "password"});
#line 2382
 testRunner.When("I add header with token", ((string)(null)), table271, "When ");
#line hidden
            TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table272.AddRow(new string[] {
                        "2",
                        "test"});
#line 2385
 testRunner.And("I input cancel booking  data", ((string)(null)), table272, "And ");
#line 2388
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2389
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2390
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2391
 testRunner.And("I should see the message \"Succeed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest has canceled before")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuestHasCanceledBefore()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest has canceled before", ((string[])(null)));
#line 2393
this.ScenarioSetup(scenarioInfo);
#line 2394
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2395
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table273.AddRow(new string[] {
                        "samuel",
                        "password"});
#line 2396
 testRunner.When("I add header with token", ((string)(null)), table273, "When ");
#line hidden
            TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table274.AddRow(new string[] {
                        "2",
                        "test"});
#line 2399
 testRunner.And("I input cancel booking  data", ((string)(null)), table274, "And ");
#line 2402
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2403
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2404
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2405
 testRunner.And("I should see the message \"The booking is no longer available\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest failed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuestFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest failed", ((string[])(null)));
#line 2407
this.ScenarioSetup(scenarioInfo);
#line 2408
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2409
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table275.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2410
 testRunner.When("I add header with token", ((string)(null)), table275, "When ");
#line hidden
            TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table276.AddRow(new string[] {
                        "99",
                        "test"});
#line 2413
 testRunner.And("I input cancel booking  data", ((string)(null)), table276, "And ");
#line 2416
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2417
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2418
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74375 check cancel booking by guest user not logged")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74375CheckCancelBookingByGuestUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74375 check cancel booking by guest user not logged", ((string[])(null)));
#line 2420
this.ScenarioSetup(scenarioInfo);
#line 2421
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2422
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2423
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table277.AddRow(new string[] {
                        "3",
                        "test"});
#line 2424
 testRunner.And("I input cancel booking  data", ((string)(null)), table277, "And ");
#line 2427
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2428
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2429
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74163 check extend membership by inviting someone")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74163CheckExtendMembershipByInvitingSomeone()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74163 check extend membership by inviting someone", ((string[])(null)));
#line 2431
this.ScenarioSetup(scenarioInfo);
#line 2432
 testRunner.Given("I invite someone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "lastName",
                        "username",
                        "email",
                        "password"});
            table278.AddRow(new string[] {
                        "testfirstname",
                        "testLastname",
                        "bauketek12",
                        "bauketek12@mailinator.com",
                        "testpassword"});
#line 2433
 testRunner.When("someone do register as user", ((string)(null)), table278, "When ");
#line 2436
 testRunner.And("user choose a plan 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "educatorStatus"});
            table279.AddRow(new string[] {
                        "",
                        "testfirstname",
                        "bauketek12@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "1"});
#line 2437
 testRunner.And("user send school verification", ((string)(null)), table279, "And ");
#line 2440
 testRunner.And("School confrim the user smacontactemail@mailinator.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2441
 testRunner.Then("I should get 30 days free", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#81264 check refferal code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _81264CheckRefferalCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#81264 check refferal code", ((string[])(null)));
#line 2443
this.ScenarioSetup(scenarioInfo);
#line 2444
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Inv" +
                    "itation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2445
 testRunner.And("I see the text \"POST api/Users/Invitation\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2446
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "email",
                        "name",
                        "message"});
            table280.AddRow(new string[] {
                        "",
                        "korcantik@mailinator.com",
                        "korytest",
                        "test"});
#line 2447
 testRunner.And("I input the invitation data", ((string)(null)), table280, "And ");
#line 2450
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2451
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Invitation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2452
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2453
 testRunner.And("The referal code should be appear in the email \"korcantik@mailinator.com\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73734 check Edit User Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73734CheckEditUserVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73734 check Edit User Verification", ((string[])(null)));
#line 2455
this.ScenarioSetup(scenarioInfo);
#line 2456
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2457
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table281.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2458
 testRunner.When("I add header with token", ((string)(null)), table281, "When ");
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "VerContactPhone",
                        "educatorStatus"});
            table282.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testfirstname",
                        "kan@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "0987654321",
                        "1"});
#line 2461
 testRunner.And("I input the user data for school verification", ((string)(null)), table282, "And ");
#line 2464
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2465
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2466
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73734 check Edit User Verification (VerContactPhone is string)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73734CheckEditUserVerificationVerContactPhoneIsString()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73734 check Edit User Verification (VerContactPhone is string)", ((string[])(null)));
#line 2468
this.ScenarioSetup(scenarioInfo);
#line 2469
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2470
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table283.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2471
 testRunner.When("I add header with token", ((string)(null)), table283, "When ");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "VerContactPhone",
                        "educatorStatus"});
            table284.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testfirstname",
                        "kan@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "qwertyuiop",
                        "1"});
#line 2474
 testRunner.And("I input the user data for school verification", ((string)(null)), table284, "And ");
#line 2477
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2478
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2479
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73734 check Edit User Verification(VerContactPhone is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73734CheckEditUserVerificationVerContactPhoneIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73734 check Edit User Verification(VerContactPhone is empty)", ((string[])(null)));
#line 2481
this.ScenarioSetup(scenarioInfo);
#line 2482
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2483
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table285.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2484
 testRunner.When("I add header with token", ((string)(null)), table285, "When ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verContactPerson",
                        "verContactEmail",
                        "VerContactPhone",
                        "educatorStatus"});
            table286.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testfirstname",
                        "kan@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "smacontactemail@mailinator.com",
                        "",
                        "1"});
#line 2487
 testRunner.And("I input the user data for school verification", ((string)(null)), table286, "And ");
#line 2490
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2491
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2492
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#78978 check email booking request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _78978CheckEmailBookingRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#78978 check email booking request", ((string[])(null)));
#line 2494
this.ScenarioSetup(scenarioInfo);
#line 2495
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-A" +
                    "pplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2496
 testRunner.And("I see the text \"POST api/Booking/ApplyBooking\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table287.AddRow(new string[] {
                        "ridwan",
                        "password"});
#line 2497
 testRunner.When("I add header with token", ((string)(null)), table287, "When ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "ListingAvailabilityId",
                        "BookingMessage",
                        "StartDate",
                        "EndDate"});
            table288.AddRow(new string[] {
                        "2",
                        "test",
                        "2016-10-10",
                        "2016-10-14"});
#line 2500
 testRunner.And("I input listing avalibiity data", ((string)(null)), table288, "And ");
#line 2503
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2504
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/ApplyBooking\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2505
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73096 check display testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73096CheckDisplayTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73096 check display testimonial", ((string[])(null)));
#line 2507
this.ScenarioSetup(scenarioInfo);
#line 2508
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2509
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2510
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2511
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2512
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "al\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2513
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2514
 testRunner.And("the result should show 5 data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74370 check view accept booking form")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74370CheckViewAcceptBookingForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74370 check view accept booking form", ((string[])(null)));
#line 2516
this.ScenarioSetup(scenarioInfo);
#line 2517
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-De" +
                    "tail-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2518
 testRunner.And("I see the text \"GET api/Booking/Detail/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table289.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2519
 testRunner.When("I add header with token", ((string)(null)), table289, "When ");
#line 2522
 testRunner.And("I input booking reference \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2523
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2524
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Detail/{bookingR" +
                    "eference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2525
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74370 check view accept booking form (booking reference is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74370CheckViewAcceptBookingFormBookingReferenceIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74370 check view accept booking form (booking reference is not exist)", ((string[])(null)));
#line 2527
this.ScenarioSetup(scenarioInfo);
#line 2528
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-De" +
                    "tail-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2529
 testRunner.And("I see the text \"GET api/Booking/Detail/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table290.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2530
 testRunner.When("I add header with token", ((string)(null)), table290, "When ");
#line 2533
 testRunner.And("I input booking reference \"99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2534
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2535
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Detail/{bookingR" +
                    "eference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2536
 testRunner.And("Status should be Not Found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74370 check view accept booking form (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74370CheckViewAcceptBookingFormUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74370 check view accept booking form (user not logged)", ((string[])(null)));
#line 2538
this.ScenarioSetup(scenarioInfo);
#line 2539
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-De" +
                    "tail-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2540
 testRunner.And("I see the text \"GET api/Booking/Detail/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2541
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2542
 testRunner.And("I input booking reference \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2543
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2544
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/Detail/{bookingR" +
                    "eference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2545
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#83494 check result of view accept booking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _83494CheckResultOfViewAcceptBooking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#83494 check result of view accept booking", ((string[])(null)));
#line 2547
this.ScenarioSetup(scenarioInfo);
#line 2548
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-De" +
                    "tail-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table291.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2549
 testRunner.When("I add header with token", ((string)(null)), table291, "When ");
#line 2552
 testRunner.And("I input booking reference \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2553
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2554
 testRunner.Then("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2555
 testRunner.And("I should see the username of the data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#79127 check school verification email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _79127CheckSchoolVerificationEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#79127 check school verification email", ((string[])(null)));
#line 2557
this.ScenarioSetup(scenarioInfo);
#line 2558
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2559
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table292.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2560
 testRunner.When("I add header with token", ((string)(null)), table292, "When ");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verSchoolPhone",
                        "verContactPerson",
                        "verContactEmail",
                        "verContactPhone"});
            table293.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testfirstname",
                        "lucubanget@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "aaa",
                        "smacontactemail@mailinator.com",
                        "0987654321"});
#line 2563
 testRunner.And("I input the user data for school verification", ((string)(null)), table293, "And ");
#line 2566
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2567
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2568
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#83229 check display user listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _83229CheckDisplayUserListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#83229 check display user listing", ((string[])(null)));
#line 2570
this.ScenarioSetup(scenarioInfo);
#line 2571
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Booking-Li" +
                    "st-User-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2572
 testRunner.And("I see the text \"GET api/Booking/List/User/{userId}?Offset={Offset}&Limit={Limit}&" +
                    "OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table294.AddRow(new string[] {
                        "ridwan",
                        "password"});
#line 2573
 testRunner.When("I add header with token", ((string)(null)), table294, "When ");
#line 2576
 testRunner.And("I input the user Id \"1ed19b8b-18eb-4add-9feb-942bb519e8f4\" to the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2577
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2578
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Booking/List/User/{userI" +
                    "d}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirectio" +
                    "n}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2579
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2580
 testRunner.And("the result should been have 2 data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84050 check display testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84050CheckDisplayTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84050 check display testimonial", ((string[])(null)));
#line 2582
this.ScenarioSetup(scenarioInfo);
#line 2583
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonial-total\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2584
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonial/{total}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2585
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2586
 testRunner.And("I input total testimonial 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2587
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2588
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "al/{total}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2589
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2590
 testRunner.And("the result should show 4 data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84038 check edit testimonial (chage to approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84038CheckEditTestimonialChageToApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84038 check edit testimonial (chage to approved)", ((string[])(null)));
#line 2592
this.ScenarioSetup(scenarioInfo);
#line 2593
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2594
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table295.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2595
 testRunner.When("I add header with token", ((string)(null)), table295, "When ");
#line hidden
            TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "desciption",
                        "approved"});
            table296.AddRow(new string[] {
                        "2",
                        "test approve",
                        "true"});
#line 2598
 testRunner.And("I input edit testimonial data", ((string)(null)), table296, "And ");
#line 2601
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2602
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2603
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84038 check edit testimonial (chage to not approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84038CheckEditTestimonialChageToNotApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84038 check edit testimonial (chage to not approved)", ((string[])(null)));
#line 2605
this.ScenarioSetup(scenarioInfo);
#line 2606
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2607
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table297.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2608
 testRunner.When("I add header with token", ((string)(null)), table297, "When ");
#line hidden
            TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "desciption",
                        "approved"});
            table298.AddRow(new string[] {
                        "1",
                        "test approve",
                        "false"});
#line 2611
 testRunner.And("I input edit testimonial data", ((string)(null)), table298, "And ");
#line 2614
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2615
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2616
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84038 check edit testimonial (testimonial is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84038CheckEditTestimonialTestimonialIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84038 check edit testimonial (testimonial is not exist)", ((string[])(null)));
#line 2618
this.ScenarioSetup(scenarioInfo);
#line 2619
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2620
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table299.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2621
 testRunner.When("I add header with token", ((string)(null)), table299, "When ");
#line hidden
            TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "desciption",
                        "approved"});
            table300.AddRow(new string[] {
                        "99",
                        "test approve",
                        "false"});
#line 2624
 testRunner.And("I input edit testimonial data", ((string)(null)), table300, "And ");
#line 2627
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2628
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2629
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84038 check edit testimonial (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84038CheckEditTestimonialUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84038 check edit testimonial (user not logged)", ((string[])(null)));
#line 2631
this.ScenarioSetup(scenarioInfo);
#line 2632
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2633
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2634
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "desciption",
                        "approved"});
            table301.AddRow(new string[] {
                        "1",
                        "test approve",
                        "false"});
#line 2635
 testRunner.And("I input edit testimonial data", ((string)(null)), table301, "And ");
#line 2638
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2639
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2640
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#83718 search listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _83718SearchListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#83718 search listing", ((string[])(null)));
#line 2642
this.ScenarioSetup(scenarioInfo);
#line 2643
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-S" +
                    "earch\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2644
 testRunner.And("I see the text \"POST api/Listing/Search\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table302.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2645
 testRunner.When("I add header with token", ((string)(null)), table302, "When ");
#line hidden
            TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                        "Offset",
                        "Limit"});
            table303.AddRow(new string[] {
                        "0",
                        "12"});
#line 2648
 testRunner.And("I input search data listing(offset and limit)", ((string)(null)), table303, "And ");
#line 2651
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2652
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Search\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2653
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2654
 testRunner.And("user id should be appear in the result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82035 check delete image that already saved on listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82035CheckDeleteImageThatAlreadySavedOnListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82035 check delete image that already saved on listing", ((string[])(null)));
#line 2656
this.ScenarioSetup(scenarioInfo);
#line 2657
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2658
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table304.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2659
 testRunner.When("I add header with token", ((string)(null)), table304, "When ");
#line hidden
            TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table305.AddRow(new string[] {
                        "3969ABD1-5D64-4DEE-8939-0217C1151EAD",
                        "1"});
#line 2662
 testRunner.And("I input image id and listing id", ((string)(null)), table305, "And ");
#line 2665
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2666
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2667
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82035 check delete image that already saved on listing (listing is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82035CheckDeleteImageThatAlreadySavedOnListingListingIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82035 check delete image that already saved on listing (listing is not exist)", ((string[])(null)));
#line 2669
this.ScenarioSetup(scenarioInfo);
#line 2670
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2671
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table306.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2672
 testRunner.When("I add header with token", ((string)(null)), table306, "When ");
#line hidden
            TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table307.AddRow(new string[] {
                        "3969ABD1-5D64-4DEE-8939-0217C1151EAD",
                        "99"});
#line 2675
 testRunner.And("I input image id and listing id", ((string)(null)), table307, "And ");
#line 2678
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2679
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2680
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82035 check delete image that already saved on listing (image is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82035CheckDeleteImageThatAlreadySavedOnListingImageIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82035 check delete image that already saved on listing (image is not exist)", ((string[])(null)));
#line 2682
this.ScenarioSetup(scenarioInfo);
#line 2683
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2684
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table308.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2685
 testRunner.When("I add header with token", ((string)(null)), table308, "When ");
#line hidden
            TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table309.AddRow(new string[] {
                        "3969ABD1-5D64-4DEE-8939-098765432123",
                        "2"});
#line 2688
 testRunner.And("I input image id and listing id", ((string)(null)), table309, "And ");
#line 2691
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2692
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2693
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#82035 check delete image that already saved on listing (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _82035CheckDeleteImageThatAlreadySavedOnListingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#82035 check delete image that already saved on listing (user not logged)", ((string[])(null)));
#line 2695
this.ScenarioSetup(scenarioInfo);
#line 2696
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Media-Ima" +
                    "ges-DeleteListing-imageId_listingId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2697
 testRunner.And("I see the text \"POST api/Media/Images/DeleteListing/{imageId}?listingId={listingI" +
                    "d}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2698
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                        "imageId",
                        "listingId"});
            table310.AddRow(new string[] {
                        "3969ABD1-5D64-4DEE-8939-0217C1151EAD",
                        "1"});
#line 2699
 testRunner.And("I input image id and listing id", ((string)(null)), table310, "And ");
#line 2702
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2703
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Media/Images/DeleteList" +
                    "ing/{imageId}?listingId={listingId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2704
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73570 check contact me")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73570CheckContactMe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73570 check contact me", ((string[])(null)));
#line 2706
this.ScenarioSetup(scenarioInfo);
#line 2707
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Con" +
                    "tactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2708
 testRunner.And("I see the text \"POST api/Users/ContactMe\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table311.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2709
 testRunner.When("I add header with token", ((string)(null)), table311, "When ");
#line hidden
            TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReceiverId",
                        "Subject",
                        "Body"});
            table312.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testsubject",
                        "test body"});
#line 2712
 testRunner.And("I input contact me data", ((string)(null)), table312, "And ");
#line 2715
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2716
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/ContactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2717
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73570 check contact me(receiver id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73570CheckContactMeReceiverIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73570 check contact me(receiver id is not exist)", ((string[])(null)));
#line 2719
this.ScenarioSetup(scenarioInfo);
#line 2720
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Con" +
                    "tactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2721
 testRunner.And("I see the text \"POST api/Users/ContactMe\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table313.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2722
 testRunner.When("I add header with token", ((string)(null)), table313, "When ");
#line hidden
            TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReceiverId",
                        "Subject",
                        "Body"});
            table314.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-123456789000",
                        "testsubject",
                        "test body"});
#line 2725
 testRunner.And("I input contact me data", ((string)(null)), table314, "And ");
#line 2728
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2729
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/ContactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2730
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73570 check contact me (user not login)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73570CheckContactMeUserNotLogin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73570 check contact me (user not login)", ((string[])(null)));
#line 2732
this.ScenarioSetup(scenarioInfo);
#line 2733
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Con" +
                    "tactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2734
 testRunner.And("I see the text \"POST api/Users/ContactMe\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2735
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReceiverId",
                        "Subject",
                        "Body"});
            table315.AddRow(new string[] {
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "testsubject",
                        "test body"});
#line 2736
 testRunner.And("I input contact me data", ((string)(null)), table315, "And ");
#line 2739
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2740
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/ContactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2741
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73580 check get recommendation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73580CheckGetRecommendation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73580 check get recommendation", ((string[])(null)));
#line 2743
this.ScenarioSetup(scenarioInfo);
#line 2744
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-userName\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2745
 testRunner.And("I see the text \"GET api/Users/Recommendation/{userName}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table316.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2746
 testRunner.When("I add header with token", ((string)(null)), table316, "When ");
#line 2749
 testRunner.And("I input username \"anggraeni\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2750
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2751
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/{us" +
                    "erName}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2752
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73580 check get recommendation (username is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73580CheckGetRecommendationUsernameIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73580 check get recommendation (username is not exist)", ((string[])(null)));
#line 2754
this.ScenarioSetup(scenarioInfo);
#line 2755
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-userName\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2756
 testRunner.And("I see the text \"GET api/Users/Recommendation/{userName}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table317.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2757
 testRunner.When("I add header with token", ((string)(null)), table317, "When ");
#line 2760
 testRunner.And("I input username \"1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2761
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2762
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/{us" +
                    "erName}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2763
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73580 check get recommendation (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73580CheckGetRecommendationUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73580 check get recommendation (user not logged)", ((string[])(null)));
#line 2765
this.ScenarioSetup(scenarioInfo);
#line 2766
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-userName\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2767
 testRunner.And("I see the text \"GET api/Users/Recommendation/{userName}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2768
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2769
 testRunner.And("I input username \"anggraeni\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2770
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2771
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/{us" +
                    "erName}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2772
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74377 check view message in inbox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74377CheckViewMessageInInbox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74377 check view message in inbox", ((string[])(null)));
#line 2774
this.ScenarioSetup(scenarioInfo);
#line 2775
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etInbox_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2776
 testRunner.And("I see the text \"GET api/Messages/GetInbox?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table318.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2777
 testRunner.When("I input received id to inbox", ((string)(null)), table318, "When ");
#line 2780
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2781
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetInbox?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2782
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2783
 testRunner.And("the message data should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74377 check view message in inbox (inbox is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74377CheckViewMessageInInboxInboxIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74377 check view message in inbox (inbox is empty)", ((string[])(null)));
#line 2785
this.ScenarioSetup(scenarioInfo);
#line 2786
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etInbox_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2787
 testRunner.And("I see the text \"GET api/Messages/GetInbox?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table319.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2788
 testRunner.When("I input received id to inbox", ((string)(null)), table319, "When ");
#line 2791
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2792
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetInbox?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2793
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2794
 testRunner.And("the data should empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74377 check view message in inbox (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74377CheckViewMessageInInboxUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74377 check view message in inbox (user not logged)", ((string[])(null)));
#line 2796
this.ScenarioSetup(scenarioInfo);
#line 2797
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etInbox_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2798
 testRunner.And("I see the text \"GET api/Messages/GetInbox?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2799
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2800
 testRunner.And("I input the receiveid \"qwertyuioppsdfghjkcvbnm\" to inbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2801
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2802
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetInbox?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2803
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74381 check view message in archive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74381CheckViewMessageInArchive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74381 check view message in archive", ((string[])(null)));
#line 2805
this.ScenarioSetup(scenarioInfo);
#line 2806
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etArchived_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2807
 testRunner.And("I see the text \"GET api/Messages/GetArchived?ReceiverId={ReceiverId}&SearchKey={S" +
                    "earchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderD" +
                    "irection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table320.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2808
 testRunner.When("I input received id to archive", ((string)(null)), table320, "When ");
#line 2811
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2812
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetArchived?Rec" +
                    "eiverId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy" +
                    "={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2813
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2814
 testRunner.And("the message data should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74381 check view message in archive (archive is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74381CheckViewMessageInArchiveArchiveIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74381 check view message in archive (archive is empty)", ((string[])(null)));
#line 2816
this.ScenarioSetup(scenarioInfo);
#line 2817
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etArchived_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2818
 testRunner.And("I see the text \"GET api/Messages/GetArchived?ReceiverId={ReceiverId}&SearchKey={S" +
                    "earchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderD" +
                    "irection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table321.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 2819
 testRunner.When("I input received id to archive", ((string)(null)), table321, "When ");
#line 2822
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2823
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetArchived?Rec" +
                    "eiverId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy" +
                    "={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2824
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2825
 testRunner.And("the data should empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74381 check view message in archive (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74381CheckViewMessageInArchiveUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74381 check view message in archive (user not logged)", ((string[])(null)));
#line 2827
this.ScenarioSetup(scenarioInfo);
#line 2828
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etArchived_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2829
 testRunner.And("I see the text \"GET api/Messages/GetArchived?ReceiverId={ReceiverId}&SearchKey={S" +
                    "earchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderD" +
                    "irection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2830
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2831
 testRunner.And("I input the receiveid \"qwertyuioppsdfghjkcvbnm\" to archive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2832
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2833
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetArchived?Rec" +
                    "eiverId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy" +
                    "={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2834
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74382 check move message to archive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74382CheckMoveMessageToArchive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74382 check move message to archive", ((string[])(null)));
#line 2836
this.ScenarioSetup(scenarioInfo);
#line 2837
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToArchived\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2838
 testRunner.And("I see the text \"POST api/Messages/MoveToArchived\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table322.AddRow(new string[] {
                        "2",
                        "anggraeni",
                        "password"});
#line 2839
 testRunner.When("I input message id that want to moved", ((string)(null)), table322, "When ");
#line 2842
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2843
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToArchived" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2844
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74382 check move message to archive (message id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74382CheckMoveMessageToArchiveMessageIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74382 check move message to archive (message id is not exist)", ((string[])(null)));
#line 2846
this.ScenarioSetup(scenarioInfo);
#line 2847
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToArchived\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2848
 testRunner.And("I see the text \"POST api/Messages/MoveToArchived\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table323.AddRow(new string[] {
                        "99",
                        "anggraeni",
                        "password"});
#line 2849
 testRunner.When("I input message id that want to moved", ((string)(null)), table323, "When ");
#line 2852
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2853
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToArchived" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2854
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74382 check move message to archive (user have no message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74382CheckMoveMessageToArchiveUserHaveNoMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74382 check move message to archive (user have no message)", ((string[])(null)));
#line 2856
this.ScenarioSetup(scenarioInfo);
#line 2857
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToArchived\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2858
 testRunner.And("I see the text \"POST api/Messages/MoveToArchived\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table324.AddRow(new string[] {
                        "2",
                        "pedrosa",
                        "password"});
#line 2859
 testRunner.When("I input message id that want to moved", ((string)(null)), table324, "When ");
#line 2862
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2863
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToArchived" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2864
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74382 check move message to archive (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74382CheckMoveMessageToArchiveUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74382 check move message to archive (user not logged)", ((string[])(null)));
#line 2866
this.ScenarioSetup(scenarioInfo);
#line 2867
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToArchived\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2868
 testRunner.And("I see the text \"POST api/Messages/MoveToArchived\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2869
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2870
 testRunner.And("I input message id \"2\" and received id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2871
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2872
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToArchived" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2873
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74387 check move message to inbox")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74387CheckMoveMessageToInbox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74387 check move message to inbox", ((string[])(null)));
#line 2875
this.ScenarioSetup(scenarioInfo);
#line 2876
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2877
 testRunner.And("I see the text \"POST api/Messages/MoveToInbox\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table325.AddRow(new string[] {
                        "2",
                        "anggraeni",
                        "password"});
#line 2878
 testRunner.When("I input message id that want to moved", ((string)(null)), table325, "When ");
#line 2881
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2882
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2883
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74387 check move message to inbox (message id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74387CheckMoveMessageToInboxMessageIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74387 check move message to inbox (message id is not exist)", ((string[])(null)));
#line 2885
this.ScenarioSetup(scenarioInfo);
#line 2886
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2887
 testRunner.And("I see the text \"POST api/Messages/MoveToInbox\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table326.AddRow(new string[] {
                        "99",
                        "anggraeni",
                        "password"});
#line 2888
 testRunner.When("I input message id that want to moved", ((string)(null)), table326, "When ");
#line 2891
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2892
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2893
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74387 check move message to inbox (user have no message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74387CheckMoveMessageToInboxUserHaveNoMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74387 check move message to inbox (user have no message)", ((string[])(null)));
#line 2895
this.ScenarioSetup(scenarioInfo);
#line 2896
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2897
 testRunner.And("I see the text \"POST api/Messages/MoveToInbox\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table327.AddRow(new string[] {
                        "2",
                        "pedrosa",
                        "password"});
#line 2898
 testRunner.When("I input message id that want to moved", ((string)(null)), table327, "When ");
#line 2901
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2902
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2903
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74387 check move message to inbox (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74387CheckMoveMessageToInboxUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74387 check move message to inbox (user not logged)", ((string[])(null)));
#line 2905
this.ScenarioSetup(scenarioInfo);
#line 2906
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2907
 testRunner.And("I see the text \"POST api/Messages/MoveToInbox\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2908
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2909
 testRunner.And("I input message id \"2\" and received id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2910
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2911
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToInbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2912
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75001 check move message to trash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75001CheckMoveMessageToTrash()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75001 check move message to trash", ((string[])(null)));
#line 2914
this.ScenarioSetup(scenarioInfo);
#line 2915
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2916
 testRunner.And("I see the text \"POST api/Messages/MoveToTrash\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table328.AddRow(new string[] {
                        "2",
                        "anggraeni",
                        "password"});
#line 2917
 testRunner.When("I input message id that want to moved", ((string)(null)), table328, "When ");
#line 2920
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2921
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2922
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75001 check move message to trash (message id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75001CheckMoveMessageToTrashMessageIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75001 check move message to trash (message id is not exist)", ((string[])(null)));
#line 2924
this.ScenarioSetup(scenarioInfo);
#line 2925
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2926
 testRunner.And("I see the text \"POST api/Messages/MoveToTrash\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table329.AddRow(new string[] {
                        "99",
                        "anggraeni",
                        "password"});
#line 2927
 testRunner.When("I input message id that want to moved", ((string)(null)), table329, "When ");
#line 2930
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2931
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2932
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75001 check move message to trash (user have no message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75001CheckMoveMessageToTrashUserHaveNoMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75001 check move message to trash (user have no message)", ((string[])(null)));
#line 2934
this.ScenarioSetup(scenarioInfo);
#line 2935
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2936
 testRunner.And("I see the text \"POST api/Messages/MoveToTrash\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table330.AddRow(new string[] {
                        "2",
                        "pedrosa",
                        "password"});
#line 2937
 testRunner.When("I input message id that want to moved", ((string)(null)), table330, "When ");
#line 2940
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2941
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2942
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#75001 check move message to trash (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _75001CheckMoveMessageToTrashUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#75001 check move message to trash (user not logged)", ((string[])(null)));
#line 2944
this.ScenarioSetup(scenarioInfo);
#line 2945
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2946
 testRunner.And("I see the text \"POST api/Messages/MoveToTrash\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2947
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2948
 testRunner.And("I input message id \"2\" and received id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2949
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2950
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/MoveToTrash\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2951
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74388 check delete massage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74388CheckDeleteMassage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74388 check delete massage", ((string[])(null)));
#line 2953
this.ScenarioSetup(scenarioInfo);
#line 2954
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2955
 testRunner.And("I see the text \"POST api/Messages/Delete\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table331.AddRow(new string[] {
                        "2",
                        "anggraeni",
                        "password"});
#line 2956
 testRunner.When("I input message id that want to delete", ((string)(null)), table331, "When ");
#line 2959
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2960
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2961
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74388 check delete massage (message id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74388CheckDeleteMassageMessageIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74388 check delete massage (message id is not exist)", ((string[])(null)));
#line 2963
this.ScenarioSetup(scenarioInfo);
#line 2964
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2965
 testRunner.And("I see the text \"POST api/Messages/Delete\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table332.AddRow(new string[] {
                        "99",
                        "anggraeni",
                        "password"});
#line 2966
 testRunner.When("I input message id that want to delete", ((string)(null)), table332, "When ");
#line 2969
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2970
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2971
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74388 check delete massage (user have no messages)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74388CheckDeleteMassageUserHaveNoMessages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74388 check delete massage (user have no messages)", ((string[])(null)));
#line 2973
this.ScenarioSetup(scenarioInfo);
#line 2974
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2975
 testRunner.And("I see the text \"POST api/Messages/Delete\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                        "messageId",
                        "username",
                        "password"});
            table333.AddRow(new string[] {
                        "2",
                        "pedrosa",
                        "password"});
#line 2976
 testRunner.When("I input message id that want to delete", ((string)(null)), table333, "When ");
#line 2979
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2980
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2981
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74388 check delete massage (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74388CheckDeleteMassageUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74388 check delete massage (user not logged)", ((string[])(null)));
#line 2983
this.ScenarioSetup(scenarioInfo);
#line 2984
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Messages-" +
                    "Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2985
 testRunner.And("I see the text \"POST api/Messages/Delete\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2986
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2987
 testRunner.And("I input message id \"2\" and received id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2988
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2989
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Messages/Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2990
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74998 check view message in trash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74998CheckViewMessageInTrash()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74998 check view message in trash", ((string[])(null)));
#line 2992
this.ScenarioSetup(scenarioInfo);
#line 2993
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etTrash_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2994
 testRunner.And("I see the text \"GET api/Messages/GetTrash?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table334.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 2995
 testRunner.When("I input received id to trash", ((string)(null)), table334, "When ");
#line 2998
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2999
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetTrash?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3000
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3001
 testRunner.And("the message data should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74998 check view message in trash (trash is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74998CheckViewMessageInTrashTrashIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74998 check view message in trash (trash is empty)", ((string[])(null)));
#line 3003
this.ScenarioSetup(scenarioInfo);
#line 3004
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etTrash_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3005
 testRunner.And("I see the text \"GET api/Messages/GetTrash?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table335.AddRow(new string[] {
                        "pedrosa",
                        "password"});
#line 3006
 testRunner.When("I input received id to trash", ((string)(null)), table335, "When ");
#line 3009
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3010
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetTrash?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3011
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3012
 testRunner.And("the data should empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74998 check view message in trash (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74998CheckViewMessageInTrashUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74998 check view message in trash (user not logged)", ((string[])(null)));
#line 3014
this.ScenarioSetup(scenarioInfo);
#line 3015
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etTrash_ReceiverId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3016
 testRunner.And("I see the text \"GET api/Messages/GetTrash?ReceiverId={ReceiverId}&SearchKey={Sear" +
                    "chKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3017
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3018
 testRunner.And("I input the receiveid \"qwertyuioppsdfghjkcvbnm\" to trash", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3019
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3020
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetTrash?Receiv" +
                    "erId={ReceiverId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={O" +
                    "rderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3021
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#80334 check source data")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _80334CheckSourceData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#80334 check source data", ((string[])(null)));
#line 3023
this.ScenarioSetup(scenarioInfo);
#line 3024
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-StaticPage" +
                    "s-GetPhotoCredits\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3025
 testRunner.And("I see the text \"GET api/StaticPages/GetPhotoCredits\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3026
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3027
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3028
 testRunner.Then("The result pop-up should be opened \"Response for GET api/StaticPages/GetPhotoCred" +
                    "its\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3029
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3030
 testRunner.And("source should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74394 check display review for me")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74394CheckDisplayReviewForMe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74394 check display review for me", ((string[])(null)));
#line 3032
this.ScenarioSetup(scenarioInfo);
#line 3033
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3034
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table336.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3035
 testRunner.When("I input user id to show review for me", ((string)(null)), table336, "When ");
#line 3038
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3039
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3040
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3041
 testRunner.And("the data should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74394 check display review for me (review is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74394CheckDisplayReviewForMeReviewIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74394 check display review for me (review is empty)", ((string[])(null)));
#line 3043
this.ScenarioSetup(scenarioInfo);
#line 3044
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3045
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table337.AddRow(new string[] {
                        "korycantik",
                        "password"});
#line 3046
 testRunner.When("I input user id to show review for me", ((string)(null)), table337, "When ");
#line 3049
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3050
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3051
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3052
 testRunner.And("the data should empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74394 check display review for me (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74394CheckDisplayReviewForMeUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74394 check display review for me (user not logged)", ((string[])(null)));
#line 3054
this.ScenarioSetup(scenarioInfo);
#line 3055
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3056
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3057
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3058
 testRunner.And("I input the userid \"qwertyuioppsdfghjkcvbnm\" to show review for me", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3059
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3060
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3061
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74395 check display review from me")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74395CheckDisplayReviewFromMe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74395 check display review from me", ((string[])(null)));
#line 3063
this.ScenarioSetup(scenarioInfo);
#line 3064
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3065
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table338.AddRow(new string[] {
                        "hhilmi",
                        "password"});
#line 3066
 testRunner.When("I input user id to show review from me", ((string)(null)), table338, "When ");
#line 3069
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3070
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3071
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3072
 testRunner.And("the data should be appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74395 check display review from me (review is empty)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74395CheckDisplayReviewFromMeReviewIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74395 check display review from me (review is empty)", ((string[])(null)));
#line 3074
this.ScenarioSetup(scenarioInfo);
#line 3075
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3076
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table339.AddRow(new string[] {
                        "korycantik",
                        "password"});
#line 3077
 testRunner.When("I input user id to show review from me", ((string)(null)), table339, "When ");
#line 3080
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3081
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3082
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3083
 testRunner.And("the data should empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74395 check display review from me (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74395CheckDisplayReviewFromMeUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74395 check display review from me (user not logged)", ((string[])(null)));
#line 3085
this.ScenarioSetup(scenarioInfo);
#line 3086
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-FromMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3087
 testRunner.And("I see the text \"GET api/Listing/Review/FromMe/{userId}?Offset={Offset}&Limit={Lim" +
                    "it}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3088
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3089
 testRunner.And("I input the userid \"qwertyuioppsdfghjkcvbnm\" to show review from me", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3090
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3091
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/FromMe/{u" +
                    "serId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDire" +
                    "ction}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3092
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73572 check report")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73572CheckReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73572 check report", ((string[])(null)));
#line 3094
this.ScenarioSetup(scenarioInfo);
#line 3095
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rep" +
                    "ort\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3096
 testRunner.And("I see the text \"POST api/Users/Report\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                        "userIdToReport",
                        "subject",
                        "message",
                        "username",
                        "password"});
            table340.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-f805b4e4bc06",
                        "test",
                        "test report",
                        "anggraeni",
                        "password"});
#line 3097
 testRunner.When("I input user id to report", ((string)(null)), table340, "When ");
#line 3100
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3101
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Report\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3102
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73572 check report(user to report is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73572CheckReportUserToReportIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73572 check report(user to report is not exist)", ((string[])(null)));
#line 3104
this.ScenarioSetup(scenarioInfo);
#line 3105
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rep" +
                    "ort\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3106
 testRunner.And("I see the text \"POST api/Users/Report\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                        "userIdToReport",
                        "subject",
                        "message",
                        "username",
                        "password"});
            table341.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-qwertyuiopoi",
                        "test",
                        "test report",
                        "anggraeni",
                        "password"});
#line 3107
 testRunner.When("I input user id to report", ((string)(null)), table341, "When ");
#line 3110
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3111
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Report\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3112
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73572 check report(subject and message is blank)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73572CheckReportSubjectAndMessageIsBlank()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73572 check report(subject and message is blank)", ((string[])(null)));
#line 3114
this.ScenarioSetup(scenarioInfo);
#line 3115
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rep" +
                    "ort\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3116
 testRunner.And("I see the text \"POST api/Users/Report\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                        "userIdToReport",
                        "subject",
                        "message",
                        "username",
                        "password"});
            table342.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-f805b4e4bc06",
                        "",
                        "",
                        "anggraeni",
                        "password"});
#line 3117
 testRunner.When("I input user id to report", ((string)(null)), table342, "When ");
#line 3120
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3121
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Report\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3122
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73572 check report (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73572CheckReportUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73572 check report (user not logged)", ((string[])(null)));
#line 3124
this.ScenarioSetup(scenarioInfo);
#line 3125
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rep" +
                    "ort\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3126
 testRunner.And("I see the text \"POST api/Users/Report\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3127
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                        "userIdToReport",
                        "userIdReported",
                        "subject",
                        "message"});
            table343.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-f805b4e4bc06",
                        "4504dd98-96b4-4509-a669-9c05e7ec3aa6",
                        "test",
                        "test report"});
#line 3128
 testRunner.And("I input userid to report", ((string)(null)), table343, "And ");
#line 3131
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3132
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Report\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3133
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#72970 check payment paypal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _72970CheckPaymentPaypal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#72970 check payment paypal", ((string[])(null)));
#line 3135
this.ScenarioSetup(scenarioInfo);
#line 3136
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3137
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "transactionid",
                        "username",
                        "password"});
            table344.AddRow(new string[] {
                        "2",
                        "2L310270E7559882C",
                        "anggraeni",
                        "password"});
#line 3138
 testRunner.When("I input paypal data", ((string)(null)), table344, "When ");
#line 3141
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3142
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3143
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#72970 check payment paypal (plan not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _72970CheckPaymentPaypalPlanNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#72970 check payment paypal (plan not exist)", ((string[])(null)));
#line 3145
this.ScenarioSetup(scenarioInfo);
#line 3146
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3147
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "transactionid",
                        "username",
                        "password"});
            table345.AddRow(new string[] {
                        "10",
                        "2L310270E7559882C",
                        "anggraeni",
                        "password"});
#line 3148
 testRunner.When("I input paypal data", ((string)(null)), table345, "When ");
#line 3151
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3152
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3153
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#72970 check payment paypal (transaction not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _72970CheckPaymentPaypalTransactionNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#72970 check payment paypal (transaction not exist)", ((string[])(null)));
#line 3155
this.ScenarioSetup(scenarioInfo);
#line 3156
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3157
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "transactionid",
                        "username",
                        "password"});
            table346.AddRow(new string[] {
                        "2",
                        "1234567890",
                        "anggraeni",
                        "password"});
#line 3158
 testRunner.When("I input paypal data", ((string)(null)), table346, "When ");
#line 3161
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3162
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3163
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#72970 check payment paypal (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _72970CheckPaymentPaypalUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#72970 check payment paypal (user not logged)", ((string[])(null)));
#line 3165
this.ScenarioSetup(scenarioInfo);
#line 3166
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3167
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3168
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "transactionid",
                        "userId"});
            table347.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-f805b4e4bc06",
                        "test",
                        "qwertyuiop123456789"});
#line 3169
 testRunner.And("I input data of paypal", ((string)(null)), table347, "And ");
#line 3172
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3173
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3174
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#85038 search listing (filter using more than one feature)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _85038SearchListingFilterUsingMoreThanOneFeature()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#85038 search listing (filter using more than one feature)", ((string[])(null)));
#line 3176
this.ScenarioSetup(scenarioInfo);
#line 3177
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Se" +
                    "arch_UserName_Destination_DateFrom_DateTo_NumberPeople_NumberBedRoom_LengthOfSta" +
                    "y_IsFlexibleLengthOfStay_Features_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3178
 testRunner.And(@"I see the text ""GET api/Listing/Search?UserName={UserName}&Destination={Destination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table348.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3179
 testRunner.When("I add header with token", ((string)(null)), table348, "When ");
#line hidden
            TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table349.AddRow(new string[] {
                        "",
                        "Bandung",
                        "2016-10-11",
                        "2016-10-13",
                        "1",
                        "1",
                        "1",
                        "true",
                        "8,10,11",
                        "0",
                        "10"});
#line 3182
 testRunner.And("I input search data listing", ((string)(null)), table349, "And ");
#line 3185
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3186
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/Search?UserName={UserName}&Destination={Destination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3187
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3188
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#85038 search public listing (filter using more than one feature)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _85038SearchPublicListingFilterUsingMoreThanOneFeature()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#85038 search public listing (filter using more than one feature)", ((string[])(null)));
#line 3190
this.ScenarioSetup(scenarioInfo);
#line 3191
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Se" +
                    "archPublic_UserName_Destination_DateFrom_DateTo_NumberPeople_NumberBedRoom_Lengt" +
                    "hOfStay_IsFlexibleLengthOfStay_Features_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3192
 testRunner.And(@"I see the text ""GET api/Listing/SearchPublic?UserName={UserName}&Destination={Destination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table350.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3193
 testRunner.When("I add header with token", ((string)(null)), table350, "When ");
#line hidden
            TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table351.AddRow(new string[] {
                        "",
                        "Bandung",
                        "2016-10-11",
                        "2016-10-13",
                        "1",
                        "1",
                        "1",
                        "true",
                        "8,10,11",
                        "0",
                        "10"});
#line 3196
 testRunner.And("I input search public data listing", ((string)(null)), table351, "And ");
#line 3199
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3200
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/SearchPublic?UserName={UserName}&Destination={Destination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3201
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3202
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#81347 check create testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _81347CheckCreateTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#81347 check create testimonial", ((string[])(null)));
#line 3204
this.ScenarioSetup(scenarioInfo);
#line 3205
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-UserTestimonial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3206
 testRunner.And("I see the text \"POST api/Testimonial/UserTestimonial\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                        "description",
                        "approved",
                        "username",
                        "password"});
            table352.AddRow(new string[] {
                        "change description",
                        "false",
                        "anggraeni",
                        "password"});
#line 3207
 testRunner.When("I input testimonial data", ((string)(null)), table352, "When ");
#line 3210
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3211
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/UserTestimo" +
                    "nial\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3212
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#81347 check update testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _81347CheckUpdateTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#81347 check update testimonial", ((string[])(null)));
#line 3214
this.ScenarioSetup(scenarioInfo);
#line 3215
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3216
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description",
                        "approved",
                        "username",
                        "password"});
            table353.AddRow(new string[] {
                        "1",
                        "change description",
                        "true",
                        "anggraeni",
                        "password"});
#line 3217
 testRunner.When("I input edit testimonial data", ((string)(null)), table353, "When ");
#line 3220
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3221
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3222
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#85259 check report")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _85259CheckReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#85259 check report", ((string[])(null)));
#line 3224
this.ScenarioSetup(scenarioInfo);
#line 3225
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rep" +
                    "ort\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3226
 testRunner.And("I see the text \"POST api/Users/Report\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                        "userIdToReport",
                        "subject",
                        "message",
                        "username",
                        "password"});
            table354.AddRow(new string[] {
                        "aba4e1e1-6651-4e7b-9283-f805b4e4bc06",
                        "test",
                        "test report",
                        "anggraeni",
                        "password"});
#line 3227
 testRunner.When("I input user id to report", ((string)(null)), table354, "When ");
#line 3230
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3231
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Report\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3232
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84846 check contact us email receiver")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84846CheckContactUsEmailReceiver()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84846 check contact us email receiver", ((string[])(null)));
#line 3234
this.ScenarioSetup(scenarioInfo);
#line 3235
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-ContactUs" +
                    "-Submit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3236
 testRunner.And("I see the text \"POST api/ContactUs/Submit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3237
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "firstName",
                        "lastName",
                        "message"});
            table355.AddRow(new string[] {
                        "kan@voxteneo.asia",
                        "kory",
                        "anggraeni",
                        "test contact us"});
#line 3238
 testRunner.And("I input contact us data", ((string)(null)), table355, "And ");
#line 3241
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3242
 testRunner.Then("The result pop-up should be opened \"Response for POST api/ContactUs/Submit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3243
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74685 check register user(password less than 8 character)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74685CheckRegisterUserPasswordLessThan8Character()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74685 check register user(password less than 8 character)", ((string[])(null)));
#line 3245
this.ScenarioSetup(scenarioInfo);
#line 3246
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Account-R" +
                    "egister\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3247
 testRunner.And("I see the text \"POST api/Account/Register\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3248
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "lastName",
                        "username",
                        "email",
                        "password"});
            table356.AddRow(new string[] {
                        "bau",
                        "ketek",
                        "bauketek",
                        "bauketek@mailinator.com",
                        "123456"});
#line 3249
 testRunner.And("input the register data", ((string)(null)), table356, "And ");
#line 3252
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3253
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Account/Register\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3254
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74684 check register user(username longer than 15 character)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74684CheckRegisterUserUsernameLongerThan15Character()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74684 check register user(username longer than 15 character)", ((string[])(null)));
#line 3256
this.ScenarioSetup(scenarioInfo);
#line 3257
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Account-R" +
                    "egister\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3258
 testRunner.And("I see the text \"POST api/Account/Register\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3259
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "lastName",
                        "username",
                        "email",
                        "password"});
            table357.AddRow(new string[] {
                        "bau",
                        "ketek",
                        "bauketekbanget12345",
                        "bauketek@mailinator.com",
                        "12345678"});
#line 3260
 testRunner.And("input the register data", ((string)(null)), table357, "And ");
#line 3263
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3264
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Account/Register\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3265
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#85471 check update last login date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _85471CheckUpdateLastLoginDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#85471 check update last login date", ((string[])(null)));
#line 3267
this.ScenarioSetup(scenarioInfo);
#line 3268
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Account-L" +
                    "ogin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3269
 testRunner.And("I see the text \"POST api/Account/Login\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3270
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table358.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3271
 testRunner.And("I input the username and password", ((string)(null)), table358, "And ");
#line 3274
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3275
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Account/Login\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3276
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84840 check decline booking email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84840CheckDeclineBookingEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84840 check decline booking email", ((string[])(null)));
#line 3278
this.ScenarioSetup(scenarioInfo);
#line 3279
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-D" +
                    "ecline-bookingReference\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3280
 testRunner.And("I see the text \"POST api/Booking/Decline/{bookingReference}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table359.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3281
 testRunner.When("I add header with token", ((string)(null)), table359, "When ");
#line 3284
 testRunner.And("I input booking reference \"10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3285
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3286
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Decline/{bookin" +
                    "gReference}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3287
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84839 check orientation image in country")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84839CheckOrientationImageInCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84839 check orientation image in country", ((string[])(null)));
#line 3289
this.ScenarioSetup(scenarioInfo);
#line 3290
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Country-co" +
                    "untryId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3291
 testRunner.And("I see the text \"GET api/Country/{countryId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3292
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3293
 testRunner.And("I input country Id \"66\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3294
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3295
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Country/{countryId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3296
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3297
 testRunner.And("I should the image orientation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84839 check orientation image in news")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84839CheckOrientationImageInNews()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84839 check orientation image in news", ((string[])(null)));
#line 3299
this.ScenarioSetup(scenarioInfo);
#line 3300
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-News-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3301
 testRunner.And("I see the text \"GET api/News/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3302
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3303
 testRunner.And("I input news id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3304
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3305
 testRunner.Then("The result pop-up should be opened \"Response for GET api/News/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3306
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3307
 testRunner.And("I should the image orientation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84839 check view listing detail API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84839CheckViewListingDetailAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84839 check view listing detail API", ((string[])(null)));
#line 3309
this.ScenarioSetup(scenarioInfo);
#line 3310
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-De" +
                    "tail-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3311
 testRunner.And("I see the text \"GET api/Listing/Detail/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table360.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3312
 testRunner.When("I input the user Id", ((string)(null)), table360, "When ");
#line 3315
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3316
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Detail/{userId}\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3317
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3318
 testRunner.And("I should the image orientation in listing data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#83362 check cancel booking by guest user by another user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _83362CheckCancelBookingByGuestUserByAnotherUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#83362 check cancel booking by guest user by another user", ((string[])(null)));
#line 3320
this.ScenarioSetup(scenarioInfo);
#line 3321
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-G" +
                    "uestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3322
 testRunner.And("I see the text \"POST api/Booking/GuestCancel\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table361.AddRow(new string[] {
                        "bamsoek",
                        "password"});
#line 3323
 testRunner.When("I add header with token", ((string)(null)), table361, "When ");
#line hidden
            TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                        "BookReference",
                        "BookingCancelMessage"});
            table362.AddRow(new string[] {
                        "9",
                        "test"});
#line 3326
 testRunner.And("I input cancel booking  data", ((string)(null)), table362, "And ");
#line 3329
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3330
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/GuestCancel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3331
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73755 create new voucher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73755CreateNewVoucher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73755 create new voucher", ((string[])(null)));
#line 3333
this.ScenarioSetup(scenarioInfo);
#line 3334
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3335
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserId",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table363.AddRow(new string[] {
                        "ojan1236",
                        "test",
                        "kimwoobin@mailintor.com",
                        "3",
                        "1",
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3336
 testRunner.When("I input voucher data", ((string)(null)), table363, "When ");
#line 3339
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3340
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3341
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73755 create new voucher (voucher is already exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73755CreateNewVoucherVoucherIsAlreadyExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73755 create new voucher (voucher is already exist)", ((string[])(null)));
#line 3343
this.ScenarioSetup(scenarioInfo);
#line 3344
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3345
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserId",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table364.AddRow(new string[] {
                        "12345678",
                        "test",
                        "289aa78b-4386-46ab-b85e-a3313d4ba19b",
                        "3",
                        "1",
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3346
 testRunner.When("I input voucher data", ((string)(null)), table364, "When ");
#line 3349
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3350
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3351
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73755 create new voucher (voucher is already exist and voucher is already expire" +
            "d)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73755CreateNewVoucherVoucherIsAlreadyExistAndVoucherIsAlreadyExpired()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73755 create new voucher (voucher is already exist and voucher is already expire" +
                    "d)", ((string[])(null)));
#line 3353
this.ScenarioSetup(scenarioInfo);
#line 3354
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3355
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserId",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table365.AddRow(new string[] {
                        "12345679",
                        "test",
                        "289aa78b-4386-46ab-b85e-a3313d4ba19b",
                        "3",
                        "1",
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3356
 testRunner.When("I input voucher data", ((string)(null)), table365, "When ");
#line 3359
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3360
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3361
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73755 create new voucher (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73755CreateNewVoucherUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73755 create new voucher (user not logged)", ((string[])(null)));
#line 3363
this.ScenarioSetup(scenarioInfo);
#line 3364
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3365
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3366
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserId",
                        "VoucherLength",
                        "Expired"});
            table366.AddRow(new string[] {
                        "12345677",
                        "test",
                        "289aa78b-4386-46ab-b85e-a3313d4ba19b",
                        "3",
                        "1"});
#line 3367
 testRunner.And("I input voucherdata", ((string)(null)), table366, "And ");
#line 3370
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3371
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3372
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73755 create new voucher (user logged as user)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73755CreateNewVoucherUserLoggedAsUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73755 create new voucher (user logged as user)", ((string[])(null)));
#line 3374
this.ScenarioSetup(scenarioInfo);
#line 3375
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3376
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserId",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table367.AddRow(new string[] {
                        "12345677",
                        "test",
                        "289aa78b-4386-46ab-b85e-a3313d4ba19b",
                        "3",
                        "1",
                        "anggraeni",
                        "password"});
#line 3377
 testRunner.When("I input voucher data", ((string)(null)), table367, "When ");
#line 3380
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3381
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3382
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher (voucher number is not found)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucherVoucherNumberIsNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher (voucher number is not found)", ((string[])(null)));
#line 3384
this.ScenarioSetup(scenarioInfo);
#line 3385
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3386
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "username",
                        "password"});
            table368.AddRow(new string[] {
                        "99999999",
                        "anggraeni",
                        "password"});
#line 3387
 testRunner.When("I input voucher number data", ((string)(null)), table368, "When ");
#line 3390
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3391
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3392
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher (voucher is already expired)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucherVoucherIsAlreadyExpired()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher (voucher is already expired)", ((string[])(null)));
#line 3394
this.ScenarioSetup(scenarioInfo);
#line 3395
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3396
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "username",
                        "password"});
            table369.AddRow(new string[] {
                        "12345679",
                        "bamsoek",
                        "password"});
#line 3397
 testRunner.When("I input voucher number data", ((string)(null)), table369, "When ");
#line 3400
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3401
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3402
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher (not valid user for this voucher)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucherNotValidUserForThisVoucher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher (not valid user for this voucher)", ((string[])(null)));
#line 3404
this.ScenarioSetup(scenarioInfo);
#line 3405
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3406
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "username",
                        "password"});
            table370.AddRow(new string[] {
                        "12345678",
                        "bamsoek",
                        "password"});
#line 3407
 testRunner.When("I input voucher number data", ((string)(null)), table370, "When ");
#line 3410
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3411
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3412
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucherUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher (user not logged)", ((string[])(null)));
#line 3414
this.ScenarioSetup(scenarioInfo);
#line 3415
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3416
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3417
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3418
 testRunner.And("I input vouchernumber data \"12345678\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3419
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3420
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3421
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher", ((string[])(null)));
#line 3423
this.ScenarioSetup(scenarioInfo);
#line 3424
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3425
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "username",
                        "password"});
            table371.AddRow(new string[] {
                        "12345678",
                        "anggraeni",
                        "password"});
#line 3426
 testRunner.When("I input voucher number data", ((string)(null)), table371, "When ");
#line 3429
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3430
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3431
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73589 check claim voucher (voucher has been claimed)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73589CheckClaimVoucherVoucherHasBeenClaimed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73589 check claim voucher (voucher has been claimed)", ((string[])(null)));
#line 3433
this.ScenarioSetup(scenarioInfo);
#line 3434
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "laim-voucherNumber\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3435
 testRunner.And("I see the text \"POST api/Voucher/Claim/{voucherNumber}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "username",
                        "password"});
            table372.AddRow(new string[] {
                        "12345678",
                        "anggraeni",
                        "password"});
#line 3436
 testRunner.When("I input voucher number data", ((string)(null)), table372, "When ");
#line 3439
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3440
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Claim/{voucherN" +
                    "umber}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3441
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74669 check export membership to excel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74669CheckExportMembershipToExcel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74669 check export membership to excel", ((string[])(null)));
#line 3443
this.ScenarioSetup(scenarioInfo);
#line 3444
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-ExportExcel-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3445
 testRunner.And("I see the text \"GET api/Memberships/ExportExcel/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table373.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3446
 testRunner.When("I add header with token", ((string)(null)), table373, "When ");
#line 3449
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3450
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3451
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/ExportExcel/" +
                    "{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3452
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74669 check export membership to excel (user are not membership)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74669CheckExportMembershipToExcelUserAreNotMembership()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74669 check export membership to excel (user are not membership)", ((string[])(null)));
#line 3454
this.ScenarioSetup(scenarioInfo);
#line 3455
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-ExportExcel-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3456
 testRunner.And("I see the text \"GET api/Memberships/ExportExcel/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3457
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3458
 testRunner.And("I input the user Id \"077e3c93-a17d-47a2-b1ad-6af4f2c2866f\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3459
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3460
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/ExportExcel/" +
                    "{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3461
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#81251 check school verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _81251CheckSchoolVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#81251 check school verification", ((string[])(null)));
#line 3463
this.ScenarioSetup(scenarioInfo);
#line 3464
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3465
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table374.AddRow(new string[] {
                        "bamsoek",
                        "password"});
#line 3466
 testRunner.When("I add header with token", ((string)(null)), table374, "When ");
#line hidden
            TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verSchoolPhone",
                        "verContactPerson",
                        "verContactEmail",
                        "verContactPhone"});
            table375.AddRow(new string[] {
                        "077e3c93-a17d-47a2-b1ad-6af4f2c2866f",
                        "bambang",
                        "poer91@gmail.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "bambang",
                        "smacontactemail@mailinator.com",
                        "0987654321"});
#line 3469
 testRunner.And("I input the user data for school verification", ((string)(null)), table375, "And ");
#line 3472
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3473
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3474
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84502 check give review")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84502CheckGiveReview()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84502 check give review", ((string[])(null)));
#line 3476
this.ScenarioSetup(scenarioInfo);
#line 3477
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Listing-R" +
                    "eview-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3478
 testRunner.And("I see the text \"POST api/Listing/Review/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "BookReference",
                        "AccuracyScore",
                        "CommunicationScore",
                        "CleanlinessScore",
                        "LocationScore",
                        "ArrivalScore",
                        "Review"});
            table376.AddRow(new string[] {
                        "yooneunhye",
                        "password",
                        "65",
                        "2",
                        "3",
                        "5",
                        "4",
                        "1",
                        "test"});
#line 3479
 testRunner.When("I input the review", ((string)(null)), table376, "When ");
#line 3482
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3483
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Listing/Review/Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3484
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84435 check get testimonial by user id")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84435CheckGetTestimonialByUserId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84435 check get testimonial by user id", ((string[])(null)));
#line 3486
this.ScenarioSetup(scenarioInfo);
#line 3487
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonialByUser-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3488
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonialByUser/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table377.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3489
 testRunner.When("I add header with token", ((string)(null)), table377, "When ");
#line 3492
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3493
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3494
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "alByUser/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3495
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84435 check get testimonial by user id (login using user not admin)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84435CheckGetTestimonialByUserIdLoginUsingUserNotAdmin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84435 check get testimonial by user id (login using user not admin)", ((string[])(null)));
#line 3497
this.ScenarioSetup(scenarioInfo);
#line 3498
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonialByUser-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3499
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonialByUser/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table378.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3500
 testRunner.When("I add header with token", ((string)(null)), table378, "When ");
#line 3503
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3504
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3505
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "alByUser/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3506
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84435 check get testimonial by user id (user have not testimonial data)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84435CheckGetTestimonialByUserIdUserHaveNotTestimonialData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84435 check get testimonial by user id (user have not testimonial data)", ((string[])(null)));
#line 3508
this.ScenarioSetup(scenarioInfo);
#line 3509
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonialByUser-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3510
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonialByUser/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table379.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3511
 testRunner.When("I add header with token", ((string)(null)), table379, "When ");
#line 3514
 testRunner.And("I input the user Id \"35de925a-5a29-4fed-9a07-ff4f128a0beb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3515
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3516
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "alByUser/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3517
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3518
 testRunner.And("data should be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84435 check get testimonial by user id (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84435CheckGetTestimonialByUserIdUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84435 check get testimonial by user id (user id not exist)", ((string[])(null)));
#line 3520
this.ScenarioSetup(scenarioInfo);
#line 3521
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonialByUser-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3522
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonialByUser/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table380.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3523
 testRunner.When("I add header with token", ((string)(null)), table380, "When ");
#line 3526
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3527
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3528
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "alByUser/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3529
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#84435 check get testimonial by user id (user not login)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _84435CheckGetTestimonialByUserIdUserNotLogin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#84435 check get testimonial by user id (user not login)", ((string[])(null)));
#line 3531
this.ScenarioSetup(scenarioInfo);
#line 3532
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-GetTestimonialByUser-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3533
 testRunner.And("I see the text \"GET api/Testimonial/GetTestimonialByUser/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3534
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3535
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3536
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3537
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/GetTestimoni" +
                    "alByUser/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3538
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73754 display of voucher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73754DisplayOfVoucher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73754 display of voucher", ((string[])(null)));
#line 3540
this.ScenarioSetup(scenarioInfo);
#line 3541
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Voucher-Se" +
                    "arch_VoucherNumber_IdStart_IdEnd_CreatedDateStart_CreatedDateEnd_ExpiredDateStar" +
                    "t_ExpiredDateEnd_LengthStart_LengthEnd_Status_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3542
 testRunner.And(@"I see the text ""GET api/Voucher/Search?VoucherNumber={VoucherNumber}&IdStart={IdStart}&IdEnd={IdEnd}&CreatedDateStart={CreatedDateStart}&CreatedDateEnd={CreatedDateEnd}&ExpiredDateStart={ExpiredDateStart}&ExpiredDateEnd={ExpiredDateEnd}&LengthStart={LengthStart}&LengthEnd={LengthEnd}&Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table381.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3543
 testRunner.When("I add header with token", ((string)(null)), table381, "When ");
#line 3546
 testRunner.And("I input the api link \"api/Voucher/Search/?Offset=0&Limit=10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3547
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3548
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Voucher/Search?VoucherNumber={VoucherNumber}&IdStart={IdStart}&IdEnd={IdEnd}&CreatedDateStart={CreatedDateStart}&CreatedDateEnd={CreatedDateEnd}&ExpiredDateStart={ExpiredDateStart}&ExpiredDateEnd={ExpiredDateEnd}&LengthStart={LengthStart}&LengthEnd={LengthEnd}&Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3549
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3550
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#78912 check email setting page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _78912CheckEmailSettingPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#78912 check email setting page", ((string[])(null)));
#line 3552
this.ScenarioSetup(scenarioInfo);
#line 3553
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-EmailSetti" +
                    "ng-Get-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3554
 testRunner.And("I see the text \"GET api/EmailSetting/Get/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table382.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3555
 testRunner.When("I add header with token", ((string)(null)), table382, "When ");
#line 3558
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3559
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3560
 testRunner.Then("The result pop-up should be opened \"Response for GET api/EmailSetting/Get/{userId" +
                    "}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3561
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#78912 check email setting page (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _78912CheckEmailSettingPageUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#78912 check email setting page (user id is not exist)", ((string[])(null)));
#line 3563
this.ScenarioSetup(scenarioInfo);
#line 3564
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-EmailSetti" +
                    "ng-Get-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3565
 testRunner.And("I see the text \"GET api/EmailSetting/Get/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table383.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3566
 testRunner.When("I add header with token", ((string)(null)), table383, "When ");
#line 3569
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-qwertyuioplkjhgfd\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3570
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3571
 testRunner.Then("The result pop-up should be opened \"Response for GET api/EmailSetting/Get/{userId" +
                    "}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3572
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#78912 check email setting page (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _78912CheckEmailSettingPageUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#78912 check email setting page (user not logged)", ((string[])(null)));
#line 3574
this.ScenarioSetup(scenarioInfo);
#line 3575
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-EmailSetti" +
                    "ng-Get-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3576
 testRunner.And("I see the text \"GET api/EmailSetting/Get/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3577
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3578
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3579
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3580
 testRunner.Then("The result pop-up should be opened \"Response for GET api/EmailSetting/Get/{userId" +
                    "}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3581
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#78912 check email setting save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _78912CheckEmailSettingSave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#78912 check email setting save", ((string[])(null)));
#line 3583
this.ScenarioSetup(scenarioInfo);
#line 3584
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-EmailSett" +
                    "ing-UserEmailSetting-Save-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3585
 testRunner.And("I see the text \"POST api/EmailSetting/UserEmailSetting/Save/{userId}\" in the page" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table384.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3586
 testRunner.When("I add header with token", ((string)(null)), table384, "When ");
#line 3589
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                        "emailSettingId",
                        "Active"});
            table385.AddRow(new string[] {
                        "1",
                        "true"});
            table385.AddRow(new string[] {
                        "2",
                        "true"});
            table385.AddRow(new string[] {
                        "3",
                        "true"});
            table385.AddRow(new string[] {
                        "4",
                        "false"});
#line 3590
 testRunner.And("I input email setting", ((string)(null)), table385, "And ");
#line 3596
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3597
 testRunner.Then("The result pop-up should be opened \"Response for POST api/EmailSetting/UserEmailS" +
                    "etting/Save/{userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3598
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73585 give recommendation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73585GiveRecommendation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73585 give recommendation", ((string[])(null)));
#line 3600
this.ScenarioSetup(scenarioInfo);
#line 3601
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rec" +
                    "ommendation-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3602
 testRunner.And("I see the text \"POST api/Users/Recommendation/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table386.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3603
 testRunner.When("I add header with token", ((string)(null)), table386, "When ");
#line hidden
            TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "Message"});
            table387.AddRow(new string[] {
                        "15",
                        "test recommendation"});
#line 3606
 testRunner.And("I input the recommendation", ((string)(null)), table387, "And ");
#line 3609
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3610
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Recommendation/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3611
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73585 give recommendation (listing ID is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73585GiveRecommendationListingIDIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73585 give recommendation (listing ID is not exist)", ((string[])(null)));
#line 3613
this.ScenarioSetup(scenarioInfo);
#line 3614
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rec" +
                    "ommendation-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3615
 testRunner.And("I see the text \"POST api/Users/Recommendation/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table388 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table388.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3616
 testRunner.When("I add header with token", ((string)(null)), table388, "When ");
#line hidden
            TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "Message"});
            table389.AddRow(new string[] {
                        "qwerty",
                        "test recommendation"});
#line 3619
 testRunner.And("I input the recommendation", ((string)(null)), table389, "And ");
#line 3622
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3623
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Recommendation/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3624
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73585 give recommendation (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73585GiveRecommendationUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73585 give recommendation (user not logged)", ((string[])(null)));
#line 3626
this.ScenarioSetup(scenarioInfo);
#line 3627
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rec" +
                    "ommendation-Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3628
 testRunner.And("I see the text \"POST api/Users/Recommendation/Save\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3629
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                        "listingId",
                        "Message"});
            table390.AddRow(new string[] {
                        "15",
                        "test recommendation"});
#line 3630
 testRunner.And("I input the recommendation", ((string)(null)), table390, "And ");
#line 3633
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3634
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Recommendation/Sa" +
                    "ve\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3635
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74492 check display recommendation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74492CheckDisplayRecommendation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74492 check display recommendation", ((string[])(null)));
#line 3637
this.ScenarioSetup(scenarioInfo);
#line 3638
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rec" +
                    "ommendations\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3639
 testRunner.And("I see the text \"POST api/Users/Recommendations\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table391.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3640
 testRunner.When("I add header with token", ((string)(null)), table391, "When ");
#line hidden
            TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                        "Offset",
                        "Limit",
                        "OrderBy",
                        "OrderDirection",
                        "Lang"});
            table392.AddRow(new string[] {
                        "0",
                        "10",
                        "",
                        "",
                        ""});
#line 3643
 testRunner.And("I input the recommendation for display", ((string)(null)), table392, "And ");
#line 3646
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3647
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Recommendations\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3648
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#74492 check display recommendation (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _74492CheckDisplayRecommendationUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#74492 check display recommendation (user not logged)", ((string[])(null)));
#line 3650
this.ScenarioSetup(scenarioInfo);
#line 3651
testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Rec" +
                    "ommendations\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3652
 testRunner.And("I see the text \"POST api/Users/Recommendations\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3653
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                        "Offset",
                        "Limit",
                        "OrderBy",
                        "OrderDirection",
                        "Lang"});
            table393.AddRow(new string[] {
                        "0",
                        "10",
                        "",
                        "",
                        ""});
#line 3654
 testRunner.And("I input the recommendation for display", ((string)(null)), table393, "And ");
#line 3657
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3658
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/Recommendations\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3659
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#87954 check delete account failed (password is wrong)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _87954CheckDeleteAccountFailedPasswordIsWrong()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#87954 check delete account failed (password is wrong)", ((string[])(null)));
#line 3661
this.ScenarioSetup(scenarioInfo);
#line 3662
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3663
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "passwordverification"});
            table394.AddRow(new string[] {
                        "korycantik",
                        "password",
                        "1234567890"});
#line 3664
 testRunner.When("I input the user to delete", ((string)(null)), table394, "When ");
#line 3667
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3668
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3669
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#87954 check delete account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _87954CheckDeleteAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#87954 check delete account", ((string[])(null)));
#line 3671
this.ScenarioSetup(scenarioInfo);
#line 3672
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/DELETE-api-Account" +
                    "-DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3673
 testRunner.And("I see the text \"DELETE api/Account/DeleteUser\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "passwordverification"});
            table395.AddRow(new string[] {
                        "korycantik",
                        "password",
                        "password"});
#line 3674
 testRunner.When("I input the user to delete", ((string)(null)), table395, "When ");
#line 3677
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3678
 testRunner.Then("The result pop-up should be opened \"Response for DELETE api/Account/DeleteUser\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3679
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#89430 check email setting page (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _89430CheckEmailSettingPageUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#89430 check email setting page (user id is not exist)", ((string[])(null)));
#line 3681
this.ScenarioSetup(scenarioInfo);
#line 3682
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-EmailSetti" +
                    "ng-Get-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3683
 testRunner.And("I see the text \"GET api/EmailSetting/Get/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table396.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 3684
 testRunner.When("I add header with token", ((string)(null)), table396, "When ");
#line 3687
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-qwertyuioplkjhgfd\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3688
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3689
 testRunner.Then("The result pop-up should be opened \"Response for GET api/EmailSetting/Get/{userId" +
                    "}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3690
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#89170 display of voucher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _89170DisplayOfVoucher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#89170 display of voucher", ((string[])(null)));
#line 3692
this.ScenarioSetup(scenarioInfo);
#line 3693
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Voucher-Se" +
                    "arch_VoucherNumber_IdStart_IdEnd_CreatedDateStart_CreatedDateEnd_ExpiredDateStar" +
                    "t_ExpiredDateEnd_LengthStart_LengthEnd_Status_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3694
 testRunner.And(@"I see the text ""GET api/Voucher/Search?VoucherNumber={VoucherNumber}&IdStart={IdStart}&IdEnd={IdEnd}&CreatedDateStart={CreatedDateStart}&CreatedDateEnd={CreatedDateEnd}&ExpiredDateStart={ExpiredDateStart}&ExpiredDateEnd={ExpiredDateEnd}&LengthStart={LengthStart}&LengthEnd={LengthEnd}&Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table397.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3695
 testRunner.When("I add header with token", ((string)(null)), table397, "When ");
#line 3698
 testRunner.And("I input the api link \"api/Voucher/Search\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3699
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3700
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Voucher/Search?VoucherNumber={VoucherNumber}&IdStart={IdStart}&IdEnd={IdEnd}&CreatedDateStart={CreatedDateStart}&CreatedDateEnd={CreatedDateEnd}&ExpiredDateStart={ExpiredDateStart}&ExpiredDateEnd={ExpiredDateEnd}&LengthStart={LengthStart}&LengthEnd={LengthEnd}&Status={Status}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3701
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3702
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#88283 check unread message")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _88283CheckUnreadMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#88283 check unread message", ((string[])(null)));
#line 3704
this.ScenarioSetup(scenarioInfo);
#line 3705
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-U" +
                    "nread-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3706
 testRunner.And("I see the text \"GET api/Messages/Unread/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table398 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table398.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3707
 testRunner.When("I input the user Id", ((string)(null)), table398, "When ");
#line 3710
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3711
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/Unread/{userId}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3712
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#88283 check unread message (user id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _88283CheckUnreadMessageUserIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#88283 check unread message (user id is not exist)", ((string[])(null)));
#line 3714
this.ScenarioSetup(scenarioInfo);
#line 3715
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-U" +
                    "nread-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3716
 testRunner.And("I see the text \"GET api/Messages/Unread/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table399 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table399.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3717
 testRunner.When("I add header with token", ((string)(null)), table399, "When ");
#line 3720
 testRunner.And("I input the user Id \"qwertyuisdfghjxcvbndfgh\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3721
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3722
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/Unread/{userId}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3723
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#88283 check unread message (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _88283CheckUnreadMessageUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#88283 check unread message (user not logged)", ((string[])(null)));
#line 3725
this.ScenarioSetup(scenarioInfo);
#line 3726
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-U" +
                    "nread-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3727
 testRunner.And("I see the text \"GET api/Messages/Unread/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3728
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3729
 testRunner.And("I input the user Id \"4504dd98-96b4-4509-a669-9c05e7ec3aa6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3730
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3731
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/Unread/{userId}" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3732
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73747 check search and view recommendation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73747CheckSearchAndViewRecommendation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73747 check search and view recommendation", ((string[])(null)));
#line 3734
this.ScenarioSetup(scenarioInfo);
#line 3735
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-Search_HostUserId_StartDate_EndDate_Offset_Limit_OrderBy_OrderDirecti" +
                    "on\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3736
 testRunner.And("I see the text \"GET api/Users/Recommendation/Search?HostUserId={HostUserId}&Start" +
                    "Date={StartDate}&EndDate={EndDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table400 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table400.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3737
 testRunner.When("I add header with token", ((string)(null)), table400, "When ");
#line 3740
 testRunner.And("I input the api link \"api/Users/Recommendation/Search?Offset=0&Limit=10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3741
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3742
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/Sea" +
                    "rch?HostUserId={HostUserId}&StartDate={StartDate}&EndDate={EndDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3743
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3744
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73747 check search and view recommendation (per user id)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73747CheckSearchAndViewRecommendationPerUserId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73747 check search and view recommendation (per user id)", ((string[])(null)));
#line 3746
this.ScenarioSetup(scenarioInfo);
#line 3747
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-Search_HostUserId_StartDate_EndDate_Offset_Limit_OrderBy_OrderDirecti" +
                    "on\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3748
 testRunner.And("I see the text \"GET api/Users/Recommendation/Search?HostUserId={HostUserId}&Start" +
                    "Date={StartDate}&EndDate={EndDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table401 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table401.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3749
 testRunner.When("I add header with token", ((string)(null)), table401, "When ");
#line 3752
 testRunner.And("I input the api link \"api/Users/Recommendation/Search?HostUserId=35de925a-5a29-4f" +
                    "ed-9a07-ff4f128a0beb&Offset=0&Limit=10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3753
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3754
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/Sea" +
                    "rch?HostUserId={HostUserId}&StartDate={StartDate}&EndDate={EndDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3755
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73747 check search and view recommendation (not using admin account)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73747CheckSearchAndViewRecommendationNotUsingAdminAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73747 check search and view recommendation (not using admin account)", ((string[])(null)));
#line 3757
this.ScenarioSetup(scenarioInfo);
#line 3758
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-Search_HostUserId_StartDate_EndDate_Offset_Limit_OrderBy_OrderDirecti" +
                    "on\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3759
 testRunner.And("I see the text \"GET api/Users/Recommendation/Search?HostUserId={HostUserId}&Start" +
                    "Date={StartDate}&EndDate={EndDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table402 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table402.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3760
 testRunner.When("I add header with token", ((string)(null)), table402, "When ");
#line 3763
 testRunner.And("I input the api link \"api/Users/Recommendation/Search?Offset=0&Limit=10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3764
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3765
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/Sea" +
                    "rch?HostUserId={HostUserId}&StartDate={StartDate}&EndDate={EndDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3766
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73747 check search and view recommendation (limit and offset is null)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73747CheckSearchAndViewRecommendationLimitAndOffsetIsNull()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73747 check search and view recommendation (limit and offset is null)", ((string[])(null)));
#line 3768
this.ScenarioSetup(scenarioInfo);
#line 3769
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-Search_HostUserId_StartDate_EndDate_Offset_Limit_OrderBy_OrderDirecti" +
                    "on\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3770
 testRunner.And("I see the text \"GET api/Users/Recommendation/Search?HostUserId={HostUserId}&Start" +
                    "Date={StartDate}&EndDate={EndDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table403 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table403.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3771
 testRunner.When("I add header with token", ((string)(null)), table403, "When ");
#line 3774
 testRunner.And("I input the api link \"api/Users/Recommendation/Search\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3775
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3776
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/Sea" +
                    "rch?HostUserId={HostUserId}&StartDate={StartDate}&EndDate={EndDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3777
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73747 check search and view recommendation (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73747CheckSearchAndViewRecommendationUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73747 check search and view recommendation (user not logged)", ((string[])(null)));
#line 3779
this.ScenarioSetup(scenarioInfo);
#line 3780
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Users-Reco" +
                    "mmendation-Search_HostUserId_StartDate_EndDate_Offset_Limit_OrderBy_OrderDirecti" +
                    "on\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3781
 testRunner.And("I see the text \"GET api/Users/Recommendation/Search?HostUserId={HostUserId}&Start" +
                    "Date={StartDate}&EndDate={EndDate}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3782
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3783
 testRunner.And("I input the api link \"api/Users/Recommendation/Search?Offset=0&Limit=10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3784
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3785
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Users/Recommendation/Sea" +
                    "rch?HostUserId={HostUserId}&StartDate={StartDate}&EndDate={EndDate}&Offset={Offs" +
                    "et}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3786
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90127 check country code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90127CheckCountryCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90127 check country code", ((string[])(null)));
#line 3788
this.ScenarioSetup(scenarioInfo);
#line 3789
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Country-Ph" +
                    "oneCode\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3790
 testRunner.And("I see the text \"GET api/Country/PhoneCode\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table404 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table404.AddRow(new string[] {
                        "yooneunhye",
                        "password"});
#line 3791
 testRunner.When("I add header with token", ((string)(null)), table404, "When ");
#line 3794
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3795
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Country/PhoneCode\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3796
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90127 check country code (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90127CheckCountryCodeUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90127 check country code (user not logged)", ((string[])(null)));
#line 3798
this.ScenarioSetup(scenarioInfo);
#line 3799
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Country-Ph" +
                    "oneCode\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3800
 testRunner.And("I see the text \"GET api/Country/PhoneCode\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3801
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3802
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3803
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Country/PhoneCode\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3804
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 view testimonial")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745ViewTestimonial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 view testimonial", ((string[])(null)));
#line 3806
this.ScenarioSetup(scenarioInfo);
#line 3807
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-View-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3808
 testRunner.And("I see the text \"GET api/Testimonial/View/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table405 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table405.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3809
 testRunner.When("I add header with token", ((string)(null)), table405, "When ");
#line 3812
 testRunner.And("I input the testimonial id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3813
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3814
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/View/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3815
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3816
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 view testimonial (testimonial not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745ViewTestimonialTestimonialNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 view testimonial (testimonial not exist)", ((string[])(null)));
#line 3818
this.ScenarioSetup(scenarioInfo);
#line 3819
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-View-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3820
 testRunner.And("I see the text \"GET api/Testimonial/View/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table406 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table406.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3821
 testRunner.When("I add header with token", ((string)(null)), table406, "When ");
#line 3824
 testRunner.And("I input the testimonial id \"p899876tt678iu8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3825
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3826
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/View/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3827
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 view testimonial (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745ViewTestimonialUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 view testimonial (user not logged)", ((string[])(null)));
#line 3829
this.ScenarioSetup(scenarioInfo);
#line 3830
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Testimonia" +
                    "l-View-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3831
 testRunner.And("I see the text \"GET api/Testimonial/View/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3832
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3833
 testRunner.And("I input the testimonial id \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3834
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3835
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Testimonial/View/{id}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3836
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 check edit testimonial (chage to approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745CheckEditTestimonialChageToApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 check edit testimonial (chage to approved)", ((string[])(null)));
#line 3838
this.ScenarioSetup(scenarioInfo);
#line 3839
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3840
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table407 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table407.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3841
 testRunner.When("I add header with token", ((string)(null)), table407, "When ");
#line hidden
            TechTalk.SpecFlow.Table table408 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description",
                        "approved"});
            table408.AddRow(new string[] {
                        "2",
                        "test approve",
                        "true"});
#line 3844
 testRunner.And("I input edit testimonial data", ((string)(null)), table408, "And ");
#line 3847
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3848
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3849
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 check edit testimonial (chage to not approved)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745CheckEditTestimonialChageToNotApproved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 check edit testimonial (chage to not approved)", ((string[])(null)));
#line 3851
this.ScenarioSetup(scenarioInfo);
#line 3852
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3853
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table409 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table409.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3854
 testRunner.When("I add header with token", ((string)(null)), table409, "When ");
#line hidden
            TechTalk.SpecFlow.Table table410 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description",
                        "approved"});
            table410.AddRow(new string[] {
                        "1",
                        "test approve",
                        "false"});
#line 3857
 testRunner.And("I input edit testimonial data", ((string)(null)), table410, "And ");
#line 3860
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3861
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3862
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 check edit testimonial (testimonial is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745CheckEditTestimonialTestimonialIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 check edit testimonial (testimonial is not exist)", ((string[])(null)));
#line 3864
this.ScenarioSetup(scenarioInfo);
#line 3865
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3866
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table411 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table411.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3867
 testRunner.When("I add header with token", ((string)(null)), table411, "When ");
#line hidden
            TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description",
                        "approved"});
            table412.AddRow(new string[] {
                        "9g9",
                        "test approve",
                        "false"});
#line 3870
 testRunner.And("I input edit testimonial data", ((string)(null)), table412, "And ");
#line 3873
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3874
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3875
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73745 check edit testimonial (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73745CheckEditTestimonialUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73745 check edit testimonial (user not logged)", ((string[])(null)));
#line 3877
this.ScenarioSetup(scenarioInfo);
#line 3878
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Testimoni" +
                    "al-Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3879
 testRunner.And("I see the text \"POST api/Testimonial/Edit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3880
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "description",
                        "approved"});
            table413.AddRow(new string[] {
                        "1",
                        "test approve",
                        "false"});
#line 3881
 testRunner.And("I input edit testimonial data", ((string)(null)), table413, "And ");
#line 3884
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3885
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Testimonial/Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3886
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92320 check user message")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92320CheckUserMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92320 check user message", ((string[])(null)));
#line 3888
this.ScenarioSetup(scenarioInfo);
#line 3889
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Users-Con" +
                    "tactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3890
 testRunner.And("I see the text \"POST api/Users/ContactMe\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table414.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3891
 testRunner.When("I add header with token", ((string)(null)), table414, "When ");
#line hidden
            TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReceiverId",
                        "Subject",
                        "Body"});
            table415.AddRow(new string[] {
                        "26987957-15b3-40ac-bd6e-b31a0987666e",
                        "testsubject",
                        "test body"});
#line 3894
 testRunner.And("I input contact me data", ((string)(null)), table415, "And ");
#line 3897
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3898
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Users/ContactMe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3899
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3900
 testRunner.And("I should see the msg \"\"user is not active anymore\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73636 check generate list")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73636CheckGenerateList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73636 check generate list", ((string[])(null)));
#line 3902
this.ScenarioSetup(scenarioInfo);
#line 3903
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-AccountingInformation_DateFrom_DateTo_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3904
 testRunner.And("I see the text \"GET api/Memberships/AccountingInformation?DateFrom={DateFrom}&Dat" +
                    "eTo={DateTo}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={Ord" +
                    "erDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table416.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3905
 testRunner.When("I add header with token", ((string)(null)), table416, "When ");
#line 3908
 testRunner.And("I send the url \"api/Memberships/AccountingInformation?DateFrom=21/10/2016&DateTo=" +
                    "21/10/2016\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3909
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3910
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/AccountingIn" +
                    "formation?DateFrom={DateFrom}&DateTo={DateTo}&Offset={Offset}&Limit={Limit}&Orde" +
                    "rBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3911
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3912
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73636 check generate list (login as user)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73636CheckGenerateListLoginAsUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73636 check generate list (login as user)", ((string[])(null)));
#line 3914
this.ScenarioSetup(scenarioInfo);
#line 3915
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-AccountingInformation_DateFrom_DateTo_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3916
 testRunner.And("I see the text \"GET api/Memberships/AccountingInformation?DateFrom={DateFrom}&Dat" +
                    "eTo={DateTo}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={Ord" +
                    "erDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table417.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3917
 testRunner.When("I add header with token", ((string)(null)), table417, "When ");
#line 3920
 testRunner.And("I send the url \"api/Memberships/AccountingInformation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3921
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3922
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/AccountingIn" +
                    "formation?DateFrom={DateFrom}&DateTo={DateTo}&Offset={Offset}&Limit={Limit}&Orde" +
                    "rBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3923
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73636 check generate list (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73636CheckGenerateListUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73636 check generate list (user not logged)", ((string[])(null)));
#line 3925
this.ScenarioSetup(scenarioInfo);
#line 3926
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-AccountingInformation_DateFrom_DateTo_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3927
 testRunner.And("I see the text \"GET api/Memberships/AccountingInformation?DateFrom={DateFrom}&Dat" +
                    "eTo={DateTo}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={Ord" +
                    "erDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3928
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3929
 testRunner.And("I send the url \"api/Memberships/AccountingInformation?DateFrom=21/10/2016&DateTo=" +
                    "21/10/2016\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3930
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3931
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/AccountingIn" +
                    "formation?DateFrom={DateFrom}&DateTo={DateTo}&Offset={Offset}&Limit={Limit}&Orde" +
                    "rBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3932
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73648 check view list of listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73648CheckViewListOfListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73648 check view list of listing", ((string[])(null)));
#line 3934
this.ScenarioSetup(scenarioInfo);
#line 3935
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Ma" +
                    "nage-View_Listing_Title_Description_Country_Undecided_DateFrom_DateTo_Shared_Off" +
                    "set_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3936
 testRunner.And(@"I see the text ""GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table418.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3937
 testRunner.When("I add header with token", ((string)(null)), table418, "When ");
#line 3940
 testRunner.And("I send the url \"api/Listing/Manage/View\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3941
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3942
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3943
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3944
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73648 check view list of listing (login as user)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73648CheckViewListOfListingLoginAsUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73648 check view list of listing (login as user)", ((string[])(null)));
#line 3946
this.ScenarioSetup(scenarioInfo);
#line 3947
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Ma" +
                    "nage-View_Listing_Title_Description_Country_Undecided_DateFrom_DateTo_Shared_Off" +
                    "set_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3948
 testRunner.And(@"I see the text ""GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table419.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3949
 testRunner.When("I add header with token", ((string)(null)), table419, "When ");
#line 3952
 testRunner.And("I send the url \"api/Listing/Manage/View\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3953
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3954
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3955
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73648 check view list of listing (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73648CheckViewListOfListingUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73648 check view list of listing (user not logged)", ((string[])(null)));
#line 3957
this.ScenarioSetup(scenarioInfo);
#line 3958
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Ma" +
                    "nage-View_Listing_Title_Description_Country_Undecided_DateFrom_DateTo_Shared_Off" +
                    "set_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3959
 testRunner.And(@"I see the text ""GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3960
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3961
 testRunner.And("I send the url \"api/Listing/Manage/View\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3962
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3963
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/Manage/View?Listing={Listing}&Title={Title}&Description={Description}&Country={Country}&Undecided={Undecided}&DateFrom={DateFrom}&DateTo={DateTo}&Shared={Shared}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3964
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#91856 check sent message")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _91856CheckSentMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#91856 check sent message", ((string[])(null)));
#line 3966
this.ScenarioSetup(scenarioInfo);
#line 3967
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etSent_SenderId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3968
 testRunner.And("I see the text \"GET api/Messages/GetSent?SenderId={SenderId}&SearchKey={SearchKey" +
                    "}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection" +
                    "}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table420.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3969
 testRunner.When("I open sent folder", ((string)(null)), table420, "When ");
#line 3972
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3973
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetSent?SenderI" +
                    "d={SenderId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3974
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#91856 check sent message (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _91856CheckSentMessageUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#91856 check sent message (user id not exist)", ((string[])(null)));
#line 3976
this.ScenarioSetup(scenarioInfo);
#line 3977
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etSent_SenderId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3978
 testRunner.And("I see the text \"GET api/Messages/GetSent?SenderId={SenderId}&SearchKey={SearchKey" +
                    "}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection" +
                    "}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table421.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 3979
 testRunner.When("I add header with token", ((string)(null)), table421, "When ");
#line 3982
 testRunner.And("I send the url \"api/Messages/GetSent?SenderId=234567uhgfde56uhg6uhgtuijhyuhy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3983
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3984
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetSent?SenderI" +
                    "d={SenderId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3985
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#91856 check sent message (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _91856CheckSentMessageUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#91856 check sent message (user not logged)", ((string[])(null)));
#line 3987
this.ScenarioSetup(scenarioInfo);
#line 3988
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Messages-G" +
                    "etSent_SenderId_SearchKey_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3989
 testRunner.And("I see the text \"GET api/Messages/GetSent?SenderId={SenderId}&SearchKey={SearchKey" +
                    "}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection" +
                    "}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3990
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 3991
 testRunner.And("I send the url \"api/Messages/GetSent?SenderId=4504dd98-96b4-4509-a669-9c05e7ec3aa" +
                    "6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3992
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 3993
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Messages/GetSent?SenderI" +
                    "d={SenderId}&SearchKey={SearchKey}&Offset={Offset}&Limit={Limit}&OrderBy={OrderB" +
                    "y}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 3994
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92756 create new voucher using email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92756CreateNewVoucherUsingEmail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92756 create new voucher using email", ((string[])(null)));
#line 3996
this.ScenarioSetup(scenarioInfo);
#line 3997
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 3998
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserNameEmail",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table422.AddRow(new string[] {
                        "kwb12346",
                        "test",
                        "seoinguk@mailinator.com",
                        "3",
                        "1",
                        "EHSAdministrator",
                        "pass@word2016"});
#line 3999
 testRunner.When("I input voucher data", ((string)(null)), table422, "When ");
#line 4002
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4003
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4004
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92756 create new voucher using username")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92756CreateNewVoucherUsingUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92756 create new voucher using username", ((string[])(null)));
#line 4006
this.ScenarioSetup(scenarioInfo);
#line 4007
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Voucher-C" +
                    "reate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4008
 testRunner.And("I see the text \"POST api/Voucher/Create\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                        "VoucherNumber",
                        "Reason",
                        "UserNameEmail",
                        "VoucherLength",
                        "Expired",
                        "username",
                        "password"});
            table423.AddRow(new string[] {
                        "kwb12345",
                        "test",
                        "seoinguk",
                        "3",
                        "1",
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4009
 testRunner.When("I input voucher data", ((string)(null)), table423, "When ");
#line 4012
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4013
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Voucher/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4014
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93083 search listing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93083SearchListing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93083 search listing", ((string[])(null)));
#line 4016
this.ScenarioSetup(scenarioInfo);
#line 4017
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Se" +
                    "arch_UserName_Destination_UserDestination_DateFrom_DateTo_NumberPeople_NumberBed" +
                    "Room_LengthOfStay_IsFlexibleLengthOfStay_Features_Offset_Limit_OrderBy_OrderDire" +
                    "ction\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4018
 testRunner.And(@"I see the text ""GET api/Listing/Search?UserName={UserName}&Destination={Destination}&UserDestination={UserDestination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table424.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 4019
 testRunner.When("I add header with token", ((string)(null)), table424, "When ");
#line hidden
            TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "UserDestination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table425.AddRow(new string[] {
                        "",
                        "",
                        "seoinguk",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "0"});
#line 4022
 testRunner.And("I input search data listing", ((string)(null)), table425, "And ");
#line 4025
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/Search?UserName={UserName}&Destination={Destination}&UserDestination={UserDestination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4026
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93083 search listing public")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93083SearchListingPublic()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93083 search listing public", ((string[])(null)));
#line 4028
this.ScenarioSetup(scenarioInfo);
#line 4029
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Se" +
                    "archPublic_UserName_Destination_UserDestination_DateFrom_DateTo_NumberPeople_Num" +
                    "berBedRoom_LengthOfStay_IsFlexibleLengthOfStay_Features_Offset_Limit_OrderBy_Ord" +
                    "erDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4030
 testRunner.And(@"I see the text ""GET api/Listing/SearchPublic?UserName={UserName}&Destination={Destination}&UserDestination={UserDestination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}"" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4031
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "destination",
                        "UserDestination",
                        "dateFrom",
                        "dateTo",
                        "numberPeople",
                        "numberBedRoom",
                        "lengthOfStay",
                        "isFlexibleLengthOfStay",
                        "Features",
                        "Offset",
                        "Limit"});
            table426.AddRow(new string[] {
                        "",
                        "",
                        "bandung",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 4032
 testRunner.And("I input search public data listing", ((string)(null)), table426, "And ");
#line 4035
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4036
 testRunner.Then(@"The result pop-up should be opened ""Response for GET api/Listing/SearchPublic?UserName={UserName}&Destination={Destination}&UserDestination={UserDestination}&DateFrom={DateFrom}&DateTo={DateTo}&NumberPeople={NumberPeople}&NumberBedRoom={NumberBedRoom}&LengthOfStay={LengthOfStay}&IsFlexibleLengthOfStay={IsFlexibleLengthOfStay}&Features={Features}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4037
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93380 check expired to review 14 days after email to give review has been send")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93380CheckExpiredToReview14DaysAfterEmailToGiveReviewHasBeenSend()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93380 check expired to review 14 days after email to give review has been send", ((string[])(null)));
#line 4039
this.ScenarioSetup(scenarioInfo);
#line 4040
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-R" +
                    "eview-IsExpired-bookReff\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4041
 testRunner.And("I see the text \"POST api/Booking/Review/IsExpired/{bookReff}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table427.AddRow(new string[] {
                        "sucitanuary",
                        "password"});
#line 4042
 testRunner.When("I add header with token", ((string)(null)), table427, "When ");
#line 4045
 testRunner.And("I send the url \"api/Booking/Review/IsExpired/40\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4046
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4047
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Review/IsExpire" +
                    "d/{bookReff}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4048
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4049
 testRunner.And("the result should be \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93380 check expired to review 14 days after email to give review has been send (" +
            "not expired yet)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93380CheckExpiredToReview14DaysAfterEmailToGiveReviewHasBeenSendNotExpiredYet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93380 check expired to review 14 days after email to give review has been send (" +
                    "not expired yet)", ((string[])(null)));
#line 4051
this.ScenarioSetup(scenarioInfo);
#line 4052
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-R" +
                    "eview-IsExpired-bookReff\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4053
 testRunner.And("I see the text \"POST api/Booking/Review/IsExpired/{bookReff}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table428.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 4054
 testRunner.When("I add header with token", ((string)(null)), table428, "When ");
#line 4057
 testRunner.And("I send the url \"api/Booking/Review/IsExpired/99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4058
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4059
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Review/IsExpire" +
                    "d/{bookReff}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4060
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4061
 testRunner.And("the result should be \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93380 check expired to response 14 days after email to give response has been se" +
            "nd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93380CheckExpiredToResponse14DaysAfterEmailToGiveResponseHasBeenSend()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93380 check expired to response 14 days after email to give response has been se" +
                    "nd", ((string[])(null)));
#line 4063
this.ScenarioSetup(scenarioInfo);
#line 4064
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-R" +
                    "esponse-IsExpired-bookReff\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4065
 testRunner.And("I see the text \"POST api/Booking/Response/IsExpired/{bookReff}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table429.AddRow(new string[] {
                        "ridwan",
                        "password"});
#line 4066
 testRunner.When("I add header with token", ((string)(null)), table429, "When ");
#line 4069
 testRunner.And("I send the url \"api/Booking/Response/IsExpired/40\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4070
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4071
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Response/IsExpi" +
                    "red/{bookReff}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4072
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4073
 testRunner.And("the result should be \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93380 check expired to response 14 days after email to give response has been se" +
            "nd (not expired yet)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93380CheckExpiredToResponse14DaysAfterEmailToGiveResponseHasBeenSendNotExpiredYet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93380 check expired to response 14 days after email to give response has been se" +
                    "nd (not expired yet)", ((string[])(null)));
#line 4075
this.ScenarioSetup(scenarioInfo);
#line 4076
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Booking-R" +
                    "esponse-IsExpired-bookReff\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4077
 testRunner.And("I see the text \"POST api/Booking/Response/IsExpired/{bookReff}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table430.AddRow(new string[] {
                        "yooneunhye",
                        "password"});
#line 4078
 testRunner.When("I add header with token", ((string)(null)), table430, "When ");
#line 4081
 testRunner.And("I send the url \"api/Booking/Response/IsExpired/99\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4082
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4083
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Booking/Response/IsExpi" +
                    "red/{bookReff}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4084
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4085
 testRunner.And("the result should be \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92615 View Review Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92615ViewReviewDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92615 View Review Details", ((string[])(null)));
#line 4087
this.ScenarioSetup(scenarioInfo);
#line 4088
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Detail-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4089
 testRunner.And("I see the text \"GET api/Listing/Review/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table431.AddRow(new string[] {
                        "yooneunhye",
                        "password"});
#line 4090
 testRunner.When("I add header with token", ((string)(null)), table431, "When ");
#line 4093
 testRunner.And("I send the url \"api/Listing/Review/Detail/1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4094
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4095
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Detail/{i" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4096
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92615 View Review Details (review not found)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92615ViewReviewDetailsReviewNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92615 View Review Details (review not found)", ((string[])(null)));
#line 4098
this.ScenarioSetup(scenarioInfo);
#line 4099
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Detail-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4100
 testRunner.And("I see the text \"GET api/Listing/Review/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table432.AddRow(new string[] {
                        "yooneunhye",
                        "password"});
#line 4101
 testRunner.When("I add header with token", ((string)(null)), table432, "When ");
#line 4104
 testRunner.And("I send the url \"api/Listing/Review/Detail/1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4105
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4106
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Detail/{i" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4107
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#92615 View Review Details (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _92615ViewReviewDetailsUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#92615 View Review Details (user not logged)", ((string[])(null)));
#line 4109
this.ScenarioSetup(scenarioInfo);
#line 4110
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Detail-id\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4111
 testRunner.And("I see the text \"GET api/Listing/Review/Detail/{id}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4112
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 4113
 testRunner.And("I send the url \"api/Listing/Review/Detail/1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4114
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4115
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Detail/{i" +
                    "d}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4116
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73748 update membership")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73748UpdateMembership()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73748 update membership", ((string[])(null)));
#line 4118
this.ScenarioSetup(scenarioInfo);
#line 4119
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4120
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table433.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4121
 testRunner.When("I add header with token", ((string)(null)), table433, "When ");
#line hidden
            TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table434.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-39fc882e5c70",
                        "test"});
#line 4124
 testRunner.And("I input membership data update", ((string)(null)), table434, "And ");
#line 4127
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4128
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4129
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73748 update membership (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73748UpdateMembershipUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73748 update membership (user id not exist)", ((string[])(null)));
#line 4131
this.ScenarioSetup(scenarioInfo);
#line 4132
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4133
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table435.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4134
 testRunner.When("I add header with token", ((string)(null)), table435, "When ");
#line hidden
            TechTalk.SpecFlow.Table table436 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table436.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-qwertyuisdfg",
                        "test"});
#line 4137
 testRunner.And("I input membership data update", ((string)(null)), table436, "And ");
#line 4140
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4141
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4142
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73748 update membership (user not loggin)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73748UpdateMembershipUserNotLoggin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73748 update membership (user not loggin)", ((string[])(null)));
#line 4144
this.ScenarioSetup(scenarioInfo);
#line 4145
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4146
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4147
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table437 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table437.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-39fc882e5c70",
                        "test"});
#line 4148
 testRunner.And("I input membership data update", ((string)(null)), table437, "And ");
#line 4151
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4152
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4153
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#73743 send school verification by admin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _73743SendSchoolVerificationByAdmin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#73743 send school verification by admin", ((string[])(null)));
#line 4155
this.ScenarioSetup(scenarioInfo);
#line 4156
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Verificat" +
                    "ion-School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4157
 testRunner.And("I see the text \"POST api/Verification/School\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table438 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table438.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4158
 testRunner.When("I add header with token", ((string)(null)), table438, "When ");
#line hidden
            TechTalk.SpecFlow.Table table439 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "name",
                        "email",
                        "verSchoolName",
                        "verSchoolWebsite",
                        "verSchoolAddress",
                        "verSchoolPhone",
                        "verContactPerson",
                        "verContactEmail",
                        "verContactPhone",
                        "StandardVerification",
                        "Message"});
            table439.AddRow(new string[] {
                        "077e3c93-a17d-47a2-b1ad-6af4f2c2866f",
                        "Bambang Soekamti",
                        "poer91@mailinator.com",
                        "High School",
                        "http://sman1bdg.sch.id/html/index.php",
                        "bandung",
                        "0987654321",
                        "test",
                        "smacontactemail@mailinator.com",
                        "0987654321",
                        "true",
                        "test"});
#line 4161
 testRunner.And("I input the user data for school verification", ((string)(null)), table439, "And ");
#line 4164
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4165
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Verification/School\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4166
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93646 check review for me API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93646CheckReviewForMeAPI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93646 check review for me API", ((string[])(null)));
#line 4168
this.ScenarioSetup(scenarioInfo);
#line 4169
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-ForMe-userId_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4170
 testRunner.And("I see the text \"GET api/Listing/Review/ForMe/{userId}?Offset={Offset}&Limit={Limi" +
                    "t}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table440 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table440.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 4171
 testRunner.When("I add header with token", ((string)(null)), table440, "When ");
#line 4174
 testRunner.And("I input user Id in review for me \"9c9ef7d4-3b6d-4aff-9a00-9ab8c11bae44\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4175
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4176
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/ForMe/{us" +
                    "erId}?Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirec" +
                    "tion}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4177
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4178
 testRunner.And("\"BookingEndDate\" should be appear in result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 check get membership detail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602CheckGetMembershipDetail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 check get membership detail", ((string[])(null)));
#line 4180
this.ScenarioSetup(scenarioInfo);
#line 4181
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-Detail_UserId_FilterDateStart_FilterDateEnd_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4182
 testRunner.And("I see the text \"GET api/Memberships/Detail?UserId={UserId}&FilterDateStart={Filte" +
                    "rDateStart}&FilterDateEnd={FilterDateEnd}&Offset={Offset}&Limit={Limit}&OrderBy=" +
                    "{OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table441 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table441.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4183
 testRunner.When("I add header with token", ((string)(null)), table441, "When ");
#line 4186
 testRunner.And("I send the url \"api/Memberships/Detail?UserId=35de925a-5a29-4fed-9a07-ff4f128a0be" +
                    "b\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4187
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4188
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/Detail?UserI" +
                    "d={UserId}&FilterDateStart={FilterDateStart}&FilterDateEnd={FilterDateEnd}&Offse" +
                    "t={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4189
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4190
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 check get membership detail (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602CheckGetMembershipDetailUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 check get membership detail (user id not exist)", ((string[])(null)));
#line 4192
this.ScenarioSetup(scenarioInfo);
#line 4193
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-Detail_UserId_FilterDateStart_FilterDateEnd_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4194
 testRunner.And("I see the text \"GET api/Memberships/Detail?UserId={UserId}&FilterDateStart={Filte" +
                    "rDateStart}&FilterDateEnd={FilterDateEnd}&Offset={Offset}&Limit={Limit}&OrderBy=" +
                    "{OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table442 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table442.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4195
 testRunner.When("I add header with token", ((string)(null)), table442, "When ");
#line 4198
 testRunner.And("I send the url \"api/Memberships/Detail?UserId=35de925a-5a29-4fed-9a07-qwertyusdfg" +
                    "hgfdytr\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4199
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4200
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/Detail?UserI" +
                    "d={UserId}&FilterDateStart={FilterDateStart}&FilterDateEnd={FilterDateEnd}&Offse" +
                    "t={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4201
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 check get membership detail (login as user)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602CheckGetMembershipDetailLoginAsUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 check get membership detail (login as user)", ((string[])(null)));
#line 4203
this.ScenarioSetup(scenarioInfo);
#line 4204
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-Detail_UserId_FilterDateStart_FilterDateEnd_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4205
 testRunner.And("I see the text \"GET api/Memberships/Detail?UserId={UserId}&FilterDateStart={Filte" +
                    "rDateStart}&FilterDateEnd={FilterDateEnd}&Offset={Offset}&Limit={Limit}&OrderBy=" +
                    "{OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table443 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table443.AddRow(new string[] {
                        "anggraeni",
                        "password"});
#line 4206
 testRunner.When("I add header with token", ((string)(null)), table443, "When ");
#line 4209
 testRunner.And("I send the url \"api/Memberships/Detail?UserId=35de925a-5a29-4fed-9a07-ff4f128a0be" +
                    "b\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4210
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4211
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/Detail?UserI" +
                    "d={UserId}&FilterDateStart={FilterDateStart}&FilterDateEnd={FilterDateEnd}&Offse" +
                    "t={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4212
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 check get membership detail (not login)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602CheckGetMembershipDetailNotLogin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 check get membership detail (not login)", ((string[])(null)));
#line 4214
this.ScenarioSetup(scenarioInfo);
#line 4215
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-Detail_UserId_FilterDateStart_FilterDateEnd_Offset_Limit_OrderBy_OrderDirectio" +
                    "n\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4216
 testRunner.And("I see the text \"GET api/Memberships/Detail?UserId={UserId}&FilterDateStart={Filte" +
                    "rDateStart}&FilterDateEnd={FilterDateEnd}&Offset={Offset}&Limit={Limit}&OrderBy=" +
                    "{OrderBy}&OrderDirection={OrderDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4217
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 4218
 testRunner.And("I send the url \"api/Memberships/Detail?UserId=35de925a-5a29-4fed-9a07-ff4f128a0be" +
                    "b\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4219
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4220
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/Detail?UserI" +
                    "d={UserId}&FilterDateStart={FilterDateStart}&FilterDateEnd={FilterDateEnd}&Offse" +
                    "t={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4221
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 update membership")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602UpdateMembership()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 update membership", ((string[])(null)));
#line 4223
this.ScenarioSetup(scenarioInfo);
#line 4224
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4225
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table444 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table444.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4226
 testRunner.When("I add header with token", ((string)(null)), table444, "When ");
#line hidden
            TechTalk.SpecFlow.Table table445 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table445.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-39fc882e5c70",
                        "test"});
#line 4229
 testRunner.And("I input membership data update", ((string)(null)), table445, "And ");
#line 4232
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4233
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4234
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 update membership (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602UpdateMembershipUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 update membership (user id not exist)", ((string[])(null)));
#line 4236
this.ScenarioSetup(scenarioInfo);
#line 4237
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4238
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table446 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table446.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4239
 testRunner.When("I add header with token", ((string)(null)), table446, "When ");
#line hidden
            TechTalk.SpecFlow.Table table447 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table447.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-qwertyuisdfg",
                        "test"});
#line 4242
 testRunner.And("I input membership data update", ((string)(null)), table447, "And ");
#line 4245
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4246
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4247
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93602 update membership (user not loggin)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93602UpdateMembershipUserNotLoggin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93602 update membership (user not loggin)", ((string[])(null)));
#line 4249
this.ScenarioSetup(scenarioInfo);
#line 4250
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Membershi" +
                    "ps-Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4251
 testRunner.And("I see the text \"POST api/Memberships/Update\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4252
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table448 = new TechTalk.SpecFlow.Table(new string[] {
                        "active",
                        "userId",
                        "inactiveReason"});
            table448.AddRow(new string[] {
                        "false",
                        "1ad7552f-3960-475f-b625-39fc882e5c70",
                        "test"});
#line 4253
 testRunner.And("I input membership data update", ((string)(null)), table448, "And ");
#line 4256
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4257
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Memberships/Update\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4258
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93579 Search and View Review")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93579SearchAndViewReview()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93579 Search and View Review", ((string[])(null)));
#line 4260
this.ScenarioSetup(scenarioInfo);
#line 4261
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4262
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table449 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table449.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4263
 testRunner.When("I add header with token", ((string)(null)), table449, "When ");
#line 4266
 testRunner.And("I send the url \"api/Listing/Review/Summary/35de925a-5a29-4fed-9a07-ff4f128a0beb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4267
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4268
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4269
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4270
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93579 Search and View Review (userid not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93579SearchAndViewReviewUseridNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93579 Search and View Review (userid not exist)", ((string[])(null)));
#line 4272
this.ScenarioSetup(scenarioInfo);
#line 4273
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4274
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table450 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table450.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4275
 testRunner.When("I add header with token", ((string)(null)), table450, "When ");
#line 4278
 testRunner.And("I send the url \"api/Listing/Review/Summary/35de925a-5a29-4fed-9a07-qqqqqqqqqqqqqq" +
                    "qqqqqq\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4279
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4280
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4281
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93579 Search and View Review (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93579SearchAndViewReviewUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93579 Search and View Review (user not logged)", ((string[])(null)));
#line 4283
this.ScenarioSetup(scenarioInfo);
#line 4284
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4285
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4286
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 4287
 testRunner.And("I send the url \"api/Listing/Review/Summary/35de925a-5a29-4fed-9a07-ff4f128a0beb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4288
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4289
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4290
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#93579 Search and View Review (login as user not admin)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _93579SearchAndViewReviewLoginAsUserNotAdmin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#93579 Search and View Review (login as user not admin)", ((string[])(null)));
#line 4292
this.ScenarioSetup(scenarioInfo);
#line 4293
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4294
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table451 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table451.AddRow(new string[] {
                        "kimwoobin",
                        "password"});
#line 4295
 testRunner.When("I add header with token", ((string)(null)), table451, "When ");
#line 4298
 testRunner.And("I send the url \"api/Listing/Review/Summary/35de925a-5a29-4fed-9a07-ff4f128a0beb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4299
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4300
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4301
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#94899 check News modification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _94899CheckNewsModification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#94899 check News modification", ((string[])(null)));
#line 4303
this.ScenarioSetup(scenarioInfo);
#line 4304
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Listing-Re" +
                    "view-Summary-userId\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4305
 testRunner.And("I see the text \"GET api/Listing/Review/Summary/{userId}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table452.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4306
 testRunner.When("I add header with token", ((string)(null)), table452, "When ");
#line 4309
 testRunner.And("I send the url \"api/Listing/Review/Summary/35de925a-5a29-4fed-9a07-ff4f128a0beb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4310
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4311
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Listing/Review/Summary/{" +
                    "userId}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4312
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#91014 check contact us")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _91014CheckContactUs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#91014 check contact us", ((string[])(null)));
#line 4314
this.ScenarioSetup(scenarioInfo);
#line 4315
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-ContactUs" +
                    "-Submit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4316
 testRunner.And("I see the text \"POST api/ContactUs/Submit\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4317
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table453 = new TechTalk.SpecFlow.Table(new string[] {
                        "email",
                        "firstName",
                        "lastName",
                        "message",
                        "Category",
                        "ImageUrl"});
            table453.AddRow(new string[] {
                        "kan@voxteneo.asia",
                        "kory",
                        "anggraeni",
                        "test contact us",
                        "Report an IT Problem",
                        "C4EC701B-94A9-4C7D-ADA9-FFE3F5390A6E"});
#line 4318
 testRunner.And("I input contact us data", ((string)(null)), table453, "And ");
#line 4321
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4322
 testRunner.Then("The result pop-up should be opened \"Response for POST api/ContactUs/Submit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4323
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#95712 check generate list pagination")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _95712CheckGenerateListPagination()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#95712 check generate list pagination", ((string[])(null)));
#line 4325
this.ScenarioSetup(scenarioInfo);
#line 4326
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/GET-api-Membership" +
                    "s-AccountingInformation_DateFrom_DateTo_Offset_Limit_OrderBy_OrderDirection\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4327
 testRunner.And("I see the text \"GET api/Memberships/AccountingInformation?DateFrom={DateFrom}&Dat" +
                    "eTo={DateTo}&Offset={Offset}&Limit={Limit}&OrderBy={OrderBy}&OrderDirection={Ord" +
                    "erDirection}\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table454 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table454.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4328
 testRunner.When("I add header with token", ((string)(null)), table454, "When ");
#line 4331
 testRunner.And("I send the url \"api/Memberships/AccountingInformation?DateFrom=&DateTo=&Offset=1&" +
                    "Limit=5&OrderBy=&OrderDirection=\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4332
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4333
 testRunner.Then("The result pop-up should be opened \"Response for GET api/Memberships/AccountingIn" +
                    "formation?DateFrom={DateFrom}&DateTo={DateTo}&Offset={Offset}&Limit={Limit}&Orde" +
                    "rBy={OrderBy}&OrderDirection={OrderDirection}\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4334
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4335
 testRunner.And("the result shouldn\'t be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice", ((string[])(null)));
#line 4337
this.ScenarioSetup(scenarioInfo);
#line 4338
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4339
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table455 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table455.AddRow(new string[] {
                        "songhyekyo",
                        "password"});
#line 4340
 testRunner.When("I add header with token", ((string)(null)), table455, "When ");
#line hidden
            TechTalk.SpecFlow.Table table456 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table456.AddRow(new string[] {
                        "2",
                        "8ad45dcd-7e12-464b-87f6-ee323f2dbcb7",
                        "07179911E61468130"});
#line 4343
 testRunner.And("I input paypal payment data", ((string)(null)), table456, "And ");
#line 4346
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4347
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4348
 testRunner.And("Status should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice (login as admin)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoiceLoginAsAdmin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice (login as admin)", ((string[])(null)));
#line 4350
this.ScenarioSetup(scenarioInfo);
#line 4351
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4352
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table457 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table457.AddRow(new string[] {
                        "EHSAdministrator",
                        "pass@word2016"});
#line 4353
 testRunner.When("I add header with token", ((string)(null)), table457, "When ");
#line hidden
            TechTalk.SpecFlow.Table table458 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table458.AddRow(new string[] {
                        "2",
                        "8ad45dcd-7e12-464b-87f6-ee323f2dbcb7",
                        "07179911E61468130"});
#line 4356
 testRunner.And("I input paypal payment data", ((string)(null)), table458, "And ");
#line 4359
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4360
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4361
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice (plan id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoicePlanIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice (plan id is not exist)", ((string[])(null)));
#line 4363
this.ScenarioSetup(scenarioInfo);
#line 4364
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4365
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table459 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table459.AddRow(new string[] {
                        "songhyekyo",
                        "password"});
#line 4366
 testRunner.When("I add header with token", ((string)(null)), table459, "When ");
#line hidden
            TechTalk.SpecFlow.Table table460 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table460.AddRow(new string[] {
                        "0",
                        "8ad45dcd-7e12-464b-87f6-ee323f2dbcb7",
                        "07179911E61468130"});
#line 4369
 testRunner.And("I input paypal payment data", ((string)(null)), table460, "And ");
#line 4372
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4373
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4374
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice (user id not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoiceUserIdNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice (user id not exist)", ((string[])(null)));
#line 4376
this.ScenarioSetup(scenarioInfo);
#line 4377
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4378
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table461 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table461.AddRow(new string[] {
                        "songhyekyo",
                        "password"});
#line 4379
 testRunner.When("I add header with token", ((string)(null)), table461, "When ");
#line hidden
            TechTalk.SpecFlow.Table table462 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table462.AddRow(new string[] {
                        "2",
                        "wertyuiowertyuuytreertytrewertytrewe",
                        "07179911E61468130"});
#line 4382
 testRunner.And("I input paypal payment data", ((string)(null)), table462, "And ");
#line 4385
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4386
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4387
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice (transaction id is not exist)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoiceTransactionIdIsNotExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice (transaction id is not exist)", ((string[])(null)));
#line 4389
this.ScenarioSetup(scenarioInfo);
#line 4390
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4391
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table463 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password"});
            table463.AddRow(new string[] {
                        "songhyekyo",
                        "password"});
#line 4392
 testRunner.When("I add header with token", ((string)(null)), table463, "When ");
#line hidden
            TechTalk.SpecFlow.Table table464 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table464.AddRow(new string[] {
                        "2",
                        "8ad45dcd-7e12-464b-87f6-ee323f2dbcb7",
                        "87t876tyutytuytyu"});
#line 4395
 testRunner.And("I input paypal payment data", ((string)(null)), table464, "And ");
#line 4398
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4399
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4400
 testRunner.And("Status should be Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("#90665 check paypal invoice (user not logged)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void _90665CheckPaypalInvoiceUserNotLogged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("#90665 check paypal invoice (user not logged)", ((string[])(null)));
#line 4402
this.ScenarioSetup(scenarioInfo);
#line 4403
 testRunner.Given("I am on API page \"http://ehs.api-test.t1.voxteneo.com/Help/Api/POST-api-Payment-P" +
                    "aypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4404
 testRunner.And("I see the text \"POST api/Payment/Paypal\" in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4405
 testRunner.When("I press test API button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table465 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanId",
                        "UserId",
                        "TransactionId"});
            table465.AddRow(new string[] {
                        "2",
                        "8ad45dcd-7e12-464b-87f6-ee323f2dbcb7",
                        "07179911E61468130"});
#line 4406
 testRunner.And("I input paypal payment data", ((string)(null)), table465, "And ");
#line 4409
 testRunner.And("I click send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 4410
 testRunner.Then("The result pop-up should be opened \"Response for POST api/Payment/Paypal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 4411
 testRunner.And("Status should be Unauthorized", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("testtesttest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "testAPI")]
        public virtual void Testtesttest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("testtesttest", ((string[])(null)));
#line 4413
this.ScenarioSetup(scenarioInfo);
#line 4414
 testRunner.Given("test \"smacontactemail@mailinator.com\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
